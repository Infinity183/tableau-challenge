<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0918.1727                               -->
<workbook original-version='18.1' source-build='2020.3.1 (20203.20.0918.1727)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='2018_Bike_Rides_Union_Again' inline='true' name='federated.0fb5izm06oekec1do4cr21267vg4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2018_Bike_Rides_Union_Again' name='textscan.0ridn8b1r3bbss1a7ngbu1i8sbpg'>
            <connection class='textscan' directory='C:/Users/Jacqueline/Desktop/Tableau Stuff/CSVs' filename='2018_Bike_Rides_Union_Again.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0ridn8b1r3bbss1a7ngbu1i8sbpg' name='2018_Bike_Rides_Union_Again.csv' table='[2018_Bike_Rides_Union_Again#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='end station name' ordinal='0' />
            <column datatype='string' name='Gender Labels' ordinal='1' />
            <column datatype='string' name='Generation' ordinal='2' />
            <column datatype='string' name='Month' ordinal='3' />
            <column datatype='string' name='start station name' ordinal='4' />
            <column datatype='datetime' name='starttime' ordinal='5' />
            <column datatype='datetime' name='stoptime' ordinal='6' />
            <column datatype='string' name='Table Name' ordinal='7' />
            <column datatype='string' name='usertype' ordinal='8' />
            <column datatype='integer' name='bikeid' ordinal='9' />
            <column datatype='integer' name='birth year' ordinal='10' />
            <column datatype='integer' name='end station id' ordinal='11' />
            <column datatype='real' name='end station latitude' ordinal='12' />
            <column datatype='real' name='end station longitude' ordinal='13' />
            <column datatype='integer' name='Ending Hour' ordinal='14' />
            <column datatype='integer' name='gender' ordinal='15' />
            <column datatype='integer' name='start station id' ordinal='16' />
            <column datatype='real' name='start station latitude' ordinal='17' />
            <column datatype='real' name='start station longitude' ordinal='18' />
            <column datatype='integer' name='Starting Hour' ordinal='19' />
            <column datatype='real' name='Trip Duration (Minutes)' ordinal='20' />
            <column datatype='integer' name='tripduration' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0ridn8b1r3bbss1a7ngbu1i8sbpg' name='2018_Bike_Rides_Union_Again.csv' table='[2018_Bike_Rides_Union_Again#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='end station name' ordinal='0' />
            <column datatype='string' name='Gender Labels' ordinal='1' />
            <column datatype='string' name='Generation' ordinal='2' />
            <column datatype='string' name='Month' ordinal='3' />
            <column datatype='string' name='start station name' ordinal='4' />
            <column datatype='datetime' name='starttime' ordinal='5' />
            <column datatype='datetime' name='stoptime' ordinal='6' />
            <column datatype='string' name='Table Name' ordinal='7' />
            <column datatype='string' name='usertype' ordinal='8' />
            <column datatype='integer' name='bikeid' ordinal='9' />
            <column datatype='integer' name='birth year' ordinal='10' />
            <column datatype='integer' name='end station id' ordinal='11' />
            <column datatype='real' name='end station latitude' ordinal='12' />
            <column datatype='real' name='end station longitude' ordinal='13' />
            <column datatype='integer' name='Ending Hour' ordinal='14' />
            <column datatype='integer' name='gender' ordinal='15' />
            <column datatype='integer' name='start station id' ordinal='16' />
            <column datatype='real' name='start station latitude' ordinal='17' />
            <column datatype='real' name='start station longitude' ordinal='18' />
            <column datatype='integer' name='Starting Hour' ordinal='19' />
            <column datatype='real' name='Trip Duration (Minutes)' ordinal='20' />
            <column datatype='integer' name='tripduration' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender Labels</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender Labels]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>Gender Labels</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Generation]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>Generation</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ending Hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ending Hour]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>Ending Hour</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Starting Hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Starting Hour]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>Starting Hour</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trip Duration (Minutes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trip Duration (Minutes)]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>Trip Duration (Minutes)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[2018_Bike_Rides_Union_Again.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Percentage of Total' datatype='real' name='[Calculation_3206844449561833474]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(COUNT([bikeid]) / TOTAL(Count([bikeid])) * 100)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Gender Labels]' role='dimension' type='nominal' />
      <column datatype='string' name='[Generation]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Baby Boomer (1946 - 1964)&quot;' value='Boomer (1946-1964)' />
          <alias key='&quot;G.I. Generation (1927 and earlier)&quot;' value='G.I. (1927 &amp; earlier)' />
          <alias key='&quot;Generation X (1965 - 1980)&quot;' value='Gen-X (1965-1980)' />
          <alias key='&quot;Generation Z (1997 - 2002)&quot;' value='Gen-Z (1997-2002)' />
          <alias key='&quot;Millennial (1981 - 1996)&quot;' value='Millennial (1981-1996)' />
          <alias key='&quot;Silent Generation (1928 - 1945)&quot;' value='Silent (1928-1945)' />
        </aliases>
      </column>
      <column datatype='string' name='[Month]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;April&quot;' value='Apr' />
          <alias key='&quot;August&quot;' value='Aug' />
          <alias key='&quot;December&quot;' value='Dec' />
          <alias key='&quot;February&quot;' value='Feb' />
          <alias key='&quot;January&quot;' value='Jan' />
          <alias key='&quot;July&quot;' value='Jul' />
          <alias key='&quot;June&quot;' value='Jun' />
          <alias key='&quot;March&quot;' value='Mar' />
          <alias key='&quot;November&quot;' value='Nov' />
          <alias key='&quot;October&quot;' value='Oct' />
          <alias key='&quot;September&quot;' value='Sep' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='2018_Bike_Rides_Union_Again.csv' datatype='table' name='[__tableau_internal_object_id__].[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]' role='measure' type='quantitative' />
      <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
      <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
      <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Gender Labels]' derivation='None' name='[none:Gender Labels:nk]' pivot='key' type='nominal' />
      <column-instance column='[Generation]' derivation='None' name='[none:Generation:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Jacqueline/Documents/My Tableau Repository/Datasources/2018_Bike_Rides_Union_Again.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/24/2020 04:50:48 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='2018_Bike_Rides_Union_Again' increment-value='%null%' refresh-type='create' rows-inserted='17548339' timestamp-start='2020-10-24 16:50:48.461' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>end station name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[end station name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end station name</remote-alias>
              <ordinal>0</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>904</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender Labels</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender Labels]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gender Labels</remote-alias>
              <ordinal>1</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Generation</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Generation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Generation</remote-alias>
              <ordinal>2</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>3</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start station name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[start station name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start station name</remote-alias>
              <ordinal>4</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>913</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>starttime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[starttime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>starttime</remote-alias>
              <ordinal>5</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>14724749</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stoptime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[stoptime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stoptime</remote-alias>
              <ordinal>6</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>14767867</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Table Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Table Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Table Name</remote-alias>
              <ordinal>7</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>usertype</remote-name>
              <remote-type>129</remote-type>
              <local-name>[usertype]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>usertype</remote-alias>
              <ordinal>8</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bikeid</remote-name>
              <remote-type>20</remote-type>
              <local-name>[bikeid]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bikeid</remote-alias>
              <ordinal>9</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25127</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>birth year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[birth year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>birth year</remote-alias>
              <ordinal>10</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>90</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end station id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[end station id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end station id</remote-alias>
              <ordinal>11</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>891</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end station latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[end station latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end station latitude</remote-alias>
              <ordinal>12</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>943</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end station longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[end station longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end station longitude</remote-alias>
              <ordinal>13</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>966</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ending Hour</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Ending Hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ending Hour</remote-alias>
              <ordinal>14</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gender</remote-name>
              <remote-type>20</remote-type>
              <local-name>[gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gender</remote-alias>
              <ordinal>15</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start station id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[start station id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start station id</remote-alias>
              <ordinal>16</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>888</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start station latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[start station latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start station latitude</remote-alias>
              <ordinal>17</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>939</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start station longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[start station longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start station longitude</remote-alias>
              <ordinal>18</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>940</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Starting Hour</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Starting Hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Starting Hour</remote-alias>
              <ordinal>19</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Trip Duration (Minutes)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Trip Duration (Minutes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Trip Duration (Minutes)</remote-alias>
              <ordinal>20</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14771</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tripduration</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tripduration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tripduration</remote-alias>
              <ordinal>21</ordinal>
              <family>2018_Bike_Rides_Union_Again.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14771</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[hr:starttime:ok]' type='palette'>
            <map to='#499894'>
              <bucket>8</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>20</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#79706e'>
              <bucket>12</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>9</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>18</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>16</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>6</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13</bucket>
            </map>
            <map to='#d37295'>
              <bucket>14</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>17</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>7</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>22</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>23</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Gender Labels:nk]' type='palette'>
            <map to='#00eb5e'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#a96fff'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Generation:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Baby Boomer (1946 - 1964)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Millennial (1981 - 1996)&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Generation Z (1997 - 2002)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Generation X (1965 - 1980)&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Silent Generation (1928 - 1945)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;G.I. Generation (1927 and earlier)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2018_Bike_Rides_Union_Again.csv' id='2018_Bike_Rides_Union_Again.csv_8AB2C47AFF9644A395AEFC7C408B74BD'>
            <properties context=''>
              <relation connection='textscan.0ridn8b1r3bbss1a7ngbu1i8sbpg' name='2018_Bike_Rides_Union_Again.csv' table='[2018_Bike_Rides_Union_Again#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='end station name' ordinal='0' />
                  <column datatype='string' name='Gender Labels' ordinal='1' />
                  <column datatype='string' name='Generation' ordinal='2' />
                  <column datatype='string' name='Month' ordinal='3' />
                  <column datatype='string' name='start station name' ordinal='4' />
                  <column datatype='datetime' name='starttime' ordinal='5' />
                  <column datatype='datetime' name='stoptime' ordinal='6' />
                  <column datatype='string' name='Table Name' ordinal='7' />
                  <column datatype='string' name='usertype' ordinal='8' />
                  <column datatype='integer' name='bikeid' ordinal='9' />
                  <column datatype='integer' name='birth year' ordinal='10' />
                  <column datatype='integer' name='end station id' ordinal='11' />
                  <column datatype='real' name='end station latitude' ordinal='12' />
                  <column datatype='real' name='end station longitude' ordinal='13' />
                  <column datatype='integer' name='Ending Hour' ordinal='14' />
                  <column datatype='integer' name='gender' ordinal='15' />
                  <column datatype='integer' name='start station id' ordinal='16' />
                  <column datatype='real' name='start station latitude' ordinal='17' />
                  <column datatype='real' name='start station longitude' ordinal='18' />
                  <column datatype='integer' name='Starting Hour' ordinal='19' />
                  <column datatype='real' name='Trip Duration (Minutes)' ordinal='20' />
                  <column datatype='integer' name='tripduration' ordinal='21' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Average Trip Length (Minutes) by Generation'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column datatype='string' name='[Gender Labels]' role='dimension' type='nominal' />
            <column datatype='string' name='[Generation]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Baby Boomer (1946 - 1964)&quot;' value='Boomer (1946-1964)' />
                <alias key='&quot;G.I. Generation (1927 and earlier)&quot;' value='G.I. (1927 &amp; earlier)' />
                <alias key='&quot;Generation X (1965 - 1980)&quot;' value='Gen-X (1965-1980)' />
                <alias key='&quot;Generation Z (1997 - 2002)&quot;' value='Gen-Z (1997-2002)' />
                <alias key='&quot;Millennial (1981 - 1996)&quot;' value='Millennial (1981-1996)' />
                <alias key='&quot;Silent Generation (1928 - 1945)&quot;' value='Silent (1928-1945)' />
              </aliases>
            </column>
            <column datatype='real' name='[Trip Duration (Minutes)]' role='measure' type='quantitative' />
            <column-instance column='[Trip Duration (Minutes)]' derivation='Avg' name='[avg:Trip Duration (Minutes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender Labels]' derivation='None' name='[none:Gender Labels:nk]' pivot='key' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]'>
            <groupfilter from='&quot;Baby Boomer (1946 - 1964)&quot;' function='range' level='[none:Generation:nk]' to='&quot;Silent Generation (1928 - 1945)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;G.I. Generation (1927 and earlier)&quot;</bucket>
              <bucket>&quot;Silent Generation (1928 - 1945)&quot;</bucket>
              <bucket>&quot;Baby Boomer (1946 - 1964)&quot;</bucket>
              <bucket>&quot;Generation X (1965 - 1980)&quot;</bucket>
              <bucket>&quot;Millennial (1981 - 1996)&quot;</bucket>
              <bucket>&quot;Generation Z (1997 - 2002)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</column>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' scope='rows' value='false' />
            <format attr='height' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' value='40' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='36' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='8' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='Arial Nova' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='bold' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' value='bold' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]</rows>
        <cols>([federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk] / [federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk])</cols>
      </table>
      <simple-id uuid='{5B1D760F-7452-46F8-88A4-ED6D46E3F858}' />
    </worksheet>
    <worksheet name='Average Trip Length by Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column datatype='string' name='[Month]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;April&quot;' value='Apr' />
                <alias key='&quot;August&quot;' value='Aug' />
                <alias key='&quot;December&quot;' value='Dec' />
                <alias key='&quot;February&quot;' value='Feb' />
                <alias key='&quot;January&quot;' value='Jan' />
                <alias key='&quot;July&quot;' value='Jul' />
                <alias key='&quot;June&quot;' value='Jun' />
                <alias key='&quot;March&quot;' value='Mar' />
                <alias key='&quot;November&quot;' value='Nov' />
                <alias key='&quot;October&quot;' value='Oct' />
                <alias key='&quot;September&quot;' value='Sep' />
              </aliases>
            </column>
            <column datatype='real' name='[Trip Duration (Minutes)]' role='measure' type='quantitative' />
            <column-instance column='[Trip Duration (Minutes)]' derivation='Avg' name='[avg:Trip Duration (Minutes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' value='bold' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#008fcc' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]</rows>
        <cols>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]</cols>
      </table>
      <simple-id uuid='{5952C9DF-441B-4208-A7EC-0AF56706C9B8}' />
    </worksheet>
    <worksheet name='Average Trip Length by Month (Gender)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column datatype='string' name='[Gender Labels]' role='dimension' type='nominal' />
            <column datatype='real' name='[Trip Duration (Minutes)]' role='measure' type='quantitative' />
            <column-instance column='[Trip Duration (Minutes)]' derivation='Avg' name='[avg:Trip Duration (Minutes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender Labels]' derivation='None' name='[none:Gender Labels:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' included-values='in-range'>
            <max>30.0</max>
          </filter>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</column>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0fb5izm06oekec1do4cr21267vg4].[tmn:starttime:qk]' scope='cols' value='Month' />
            <format attr='auto-subtitle' class='0' field='[federated.0fb5izm06oekec1do4cr21267vg4].[tmn:starttime:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' value='Arial Nova' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' value='bold' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' value='12' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' value='bold' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[tmn:starttime:qk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[tmn:starttime:qk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[tmn:starttime:qk]' value='bold' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' value='Gender' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' />
              <text column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]</rows>
        <cols>[federated.0fb5izm06oekec1do4cr21267vg4].[tmn:starttime:qk]</cols>
      </table>
      <simple-id uuid='{BCBA6DB2-11C8-49D1-AE9C-A8B02657AB20}' />
    </worksheet>
    <worksheet name='Average Trip Length by Starting Hour (Gender)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column datatype='string' name='[Gender Labels]' role='dimension' type='nominal' />
            <column datatype='real' name='[Trip Duration (Minutes)]' role='measure' type='quantitative' />
            <column-instance column='[Trip Duration (Minutes)]' derivation='Avg' name='[avg:Trip Duration (Minutes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender Labels]' derivation='None' name='[none:Gender Labels:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' included-values='in-range'>
            <max>30.0</max>
          </filter>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</column>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:qk]' scope='cols' value='Starting Hour' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' value='Arial Nova' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' value='bold' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' value='12' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' value='bold' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:qk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:qk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:qk]' value='bold' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' value='Gender' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' />
              <text column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]</rows>
        <cols>[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:qk]</cols>
      </table>
      <simple-id uuid='{E047AFFF-E110-441B-922B-32CC76B7B997}' />
    </worksheet>
    <worksheet name='Average Trip Length by Starting Hour (Generation)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column datatype='string' name='[Generation]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Baby Boomer (1946 - 1964)&quot;' value='Boomer (1946-1964)' />
                <alias key='&quot;G.I. Generation (1927 and earlier)&quot;' value='G.I. (1927 &amp; earlier)' />
                <alias key='&quot;Generation X (1965 - 1980)&quot;' value='Gen-X (1965-1980)' />
                <alias key='&quot;Generation Z (1997 - 2002)&quot;' value='Gen-Z (1997-2002)' />
                <alias key='&quot;Millennial (1981 - 1996)&quot;' value='Millennial (1981-1996)' />
                <alias key='&quot;Silent Generation (1928 - 1945)&quot;' value='Silent (1928-1945)' />
              </aliases>
            </column>
            <column datatype='real' name='[Trip Duration (Minutes)]' role='measure' type='quantitative' />
            <column-instance column='[Trip Duration (Minutes)]' derivation='Avg' name='[avg:Trip Duration (Minutes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' included-values='in-range'>
            <max>30.0</max>
          </filter>
          <slices>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' scope='rows' value='Avg. Trip Duration (Min)' />
            <format attr='title' class='0' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:qk]' scope='cols' value='Starting Hour' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:qk]' value='bold' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:qk]' value='8' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]</rows>
        <cols>[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:qk]</cols>
      </table>
      <simple-id uuid='{D18AA7AF-336F-4F71-8744-5ADC2E077C10}' />
    </worksheet>
    <worksheet name='Average Trip Length by Station'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column datatype='real' name='[Trip Duration (Minutes)]' role='measure' type='quantitative' />
            <column-instance column='[start station name]' derivation='Attribute' name='[attr:start station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Trip Duration (Minutes)]' derivation='Avg' name='[avg:Trip Duration (Minutes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[attr:start station name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 110 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 16 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 18 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 30 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 44 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 62 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 68 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 78 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 94 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Pl &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;10 Hudson Yards&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;10 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;10 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;11 Ave &amp; W 27 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;11 Ave &amp; W 41 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;11 Ave &amp; W 59 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;11 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;11 St &amp; 43 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;12 Ave &amp; W 40 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;12 St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;14 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;14 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;19 St &amp; 24 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;2 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;2 Ave &amp; E 104 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;2 Ave &amp; E 122 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;2 Ave &amp; E 31 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;2 Ave &amp; E 55 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;2 Ave &amp; E 96 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;2 Ave &amp; E 99 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;21 St &amp; 31 Dr&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;21 St &amp; 36 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;21 St &amp; 38 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;21 St &amp; 43 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;21 St &amp; Hoyt Ave S&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;21 St &amp; Queens Plaza North&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;23 Ave &amp; 27 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;24 Ave &amp; 26 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;24 Ave &amp; 29 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;24 St &amp; 41 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;27 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;27 St &amp; Hunter St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;28 Ave &amp; 35 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;28 Ave &amp; 44 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;28 St &amp; 36 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;28 St &amp; 38 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;28 St &amp; 40 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;28 St &amp; 41 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 Ave &amp; 14 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 Ave &amp; E 100 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 Ave &amp; E 112 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 Ave &amp; E 62 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 Ave &amp; E 71 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 Ave &amp; E 72 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 Ave &amp; E 95 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 Ave &amp; Schermerhorn St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 St &amp; Hoyt St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 St &amp; Prospect Park West&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;30 Ave &amp; 21 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 Ave &amp; 14 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 Ave &amp; 30 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 Ave &amp; 34 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 Ave &amp; Crescent St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 Ave &amp; Steinway St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 St &amp; 23 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 St &amp; Astoria Blvd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 St &amp; Hoyt Ave N&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 St &amp; Newtown Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 St &amp; Thomson Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;32 St &amp; 30 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;34 Ave &amp; 13 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;34 Ave &amp; 21 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;34 Ave &amp; 38 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;34 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;35 Ave &amp; 10 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;35 Ave &amp; 37 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;35 St &amp; 34 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;35 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;36 Ave &amp; 10 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;37 Ave &amp; 35 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;37 St &amp; 24 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;4 Ave &amp; 2 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;4 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;40 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;40 Ave &amp; Crescent St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;43 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;44 Dr &amp; 21 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;44 Dr &amp; Jackson Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;45 Rd &amp; 11 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;46 Ave &amp; 5 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;47 Ave &amp; 31 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;47 Ave &amp; Skillman Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;48 Ave &amp; 30 Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;48 Ave &amp; 5 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;49 Ave &amp; 21 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; 3 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; E 103 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; E 126 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; E 29 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; E 63 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; E 73 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; E 78 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; E 88 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; E 93 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 St &amp; 51 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 St &amp; Market St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;6 Ave &amp; 12 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;6 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;6 Ave &amp; Canal St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;6 Ave &amp; Spring St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;6 Ave &amp; W 33 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;6 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;7 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;7 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;8 Ave &amp; W 31 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;8 Ave &amp; W 33 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;8 Ave &amp; W 52 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;8D QC Station 01&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;9 Ave &amp; W 22 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;9 Ave &amp; W 28 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;9 Ave &amp; W 45 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;9 St &amp; 44 Rd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Adelphi St &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Allen St &amp; Hester St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Allen St &amp; Rivington St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Allen St &amp; Stanton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 119 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 125 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 66 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 73 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 79 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 82 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Apache&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Astoria Park S &amp; Shore Blvd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Atlantic Ave &amp; Fort Greene Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Atlantic Ave &amp; Furman St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Avenue D &amp; E 12 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Avenue D &amp; E 3 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Avenue D &amp; E 8 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Baltic St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bank St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bank St &amp; Washington St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Banker St &amp; Meserole Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Barclay St &amp; Church St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Barrow St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bayard St &amp; Baxter St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bayard St &amp; Leonard St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bedford Ave &amp; Bergen St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bedford Ave &amp; Nassau Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bedford Ave &amp; S 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bergen St &amp; Flatbush Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bergen St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bergen St &amp; Vanderbilt Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Berkeley Pl &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Berkeley Pl &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Berry St &amp; N 8 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bialystoker Pl &amp; Delancey St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Boerum St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bond St &amp; Bergen St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bond St &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bressler&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broad St &amp; Bridge St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; 12 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; Battery Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; Berry St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; E 14 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; E 22 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; Moylan Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; Roebling St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 122 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 25 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 29 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 32 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 36 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 37 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 38 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 41 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 49 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 51 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 53 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 56 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 58 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 60 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; Whipple St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Brooklyn Bridge Park - Pier 2&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bus Slip &amp; State St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bushwick Ave &amp; Powers St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Butler St &amp; Court St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cadman Plaza E &amp; Red Cross Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cadman Plaza E &amp; Tillary St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cadman Plaza West &amp; Montague St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cambridge Pl &amp; Gates Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Canal St &amp; Rutgers St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carlton Ave &amp; Dean St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carlton Ave &amp; Flushing Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carlton Ave &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carmine St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carroll St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carroll St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carroll St &amp; Bond St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carroll St &amp; Columbia St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carroll St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carroll St &amp; Washington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cathedral Pkwy &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Catherine St &amp; Monroe St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Center Blvd &amp; 48 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Center Blvd &amp; Borden Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park S &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park W &amp; W 96 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park West &amp; W 100 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park West &amp; W 102 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park West &amp; W 68 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park West &amp; W 72 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park West &amp; W 76 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park West &amp; W 85 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Centre St &amp; Chambers St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Centre St &amp; Worth St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cherry St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clark St &amp; Henry St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Classon Ave &amp; St Marks Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clermont Ave &amp; Lafayette Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clermont Ave &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cleveland Pl &amp; Spring St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cliff St &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cliff St &amp; Fulton St_1&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clinton Ave &amp; Flushing Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clinton Ave &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clinton St &amp; 4 Place&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clinton St &amp; Centre St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clinton St &amp; Grand St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clinton St &amp; Joralemon St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clinton St &amp; Tillary St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clinton St &amp; Union St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Coffey St &amp; Conover St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbia Heights &amp; Cranberry St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbia St &amp; Degraw St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbia St &amp; Kane St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbia St &amp; Lorraine St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbia St &amp; Rivington St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbia St &amp; W 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbus Ave &amp; W 103 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbus Ave &amp; W 72 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbus Ave &amp; W 95 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Commerce St &amp; Van Brunt St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Concord St &amp; Bridge St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Congress St &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cooper Square &amp; Astor Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Court St &amp; Nelson St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Court St &amp; State St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Crescent St &amp; 30 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Crescent St &amp; 34 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Crescent St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Crescent St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Crescent St &amp; Ditmars Blvd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Crown St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cumberland St &amp; Lafayette Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Dean St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Dean St &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Dean St &amp; Hoyt St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Degraw St &amp; Hoyt St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Degraw St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;DeKalb Ave &amp; Hudson Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;DeKalb Ave &amp; S Portland Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;DeKalb Ave &amp; Skillman St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Devoe St &amp; Lorimer St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Ditmars Blvd &amp; 19 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Division Av &amp; Hooper St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Division Ave &amp; Hooper St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Division St &amp; Bowery&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Douglass St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Douglass St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Driggs Ave &amp; Lorimer St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Driggs Ave &amp; N 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Driggs Ave &amp; N Henry St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Duane St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Duffield St &amp; Willoughby St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Dwight St &amp; Van Dyke St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 10 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 10 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 102 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 102 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 103 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 106 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 106 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 106 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 109 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 11 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 11 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 11 St &amp; Avenue B&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 11 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 110 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 114 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 115 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 115 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 116 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 118 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 118 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 118 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 118 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 12 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 12 St &amp; Avenue B&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 123 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 128 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 13 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 15 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 16 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 16 St &amp; Irving Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 17 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 19 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 2 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 2 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 2 St &amp; Avenue B&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 2 St &amp; Avenue C&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 20 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 20 St &amp; FDR Drive&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 20 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 23 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 24 St &amp; Park Ave S&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 25 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 25 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 27 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 3 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 30 St &amp; Park Ave S&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 31 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 32 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 33 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 33 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 33 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 35 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 39 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 39 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 4 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 41 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 41 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 43 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 44 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 45 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 47 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 47 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 47 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 48 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 48 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 5 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 5 St &amp; Avenue C&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 51 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 51 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 52 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 53 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 53 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 55 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 55 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 55 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 58 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 58 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 58 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 59 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 6 St &amp; Avenue B&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 6 St &amp; Avenue D&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 60 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 65 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 66 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 67 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 68 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 68 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 7 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 71 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 71 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 72 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 72 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 74 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 75 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 76 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 76 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 77 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 78 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 80 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 81 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 81 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 81 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 81 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 82 St &amp; East End Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 84 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 84 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 85 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 85 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 87 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 88 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 88 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 89 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 89 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 9 St &amp; Avenue C&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 91 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 91 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 93 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 95 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 97 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 97 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 98 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 98 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;East End Ave &amp; E 86 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Eastern Pkwy &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Eastern Pkwy &amp; Washington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Eckford St &amp; Engert Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Emerson Pl &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;FDR Drive &amp; E 35 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Flushing Ave &amp; Vanderbilt Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Forsyth St &amp; Broome St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Forsyth St &amp; Canal St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Franklin Ave &amp; Empire Blvd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Franklin Ave &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Franklin Ave &amp; St Marks Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Franklin St &amp; Dupont St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Franklin St &amp; W Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 112 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 115 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 117 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Front St &amp; Gold St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Front St &amp; Maiden Ln&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Front St &amp; Washington St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Frost St &amp; Meeker St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Fulton St &amp; Adams St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Fulton St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Fulton St &amp; Clermont Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Fulton St &amp; Grand Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Fulton St &amp; Rockwell Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Fulton St &amp; Waverly Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Fulton St &amp; William St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Gansevoort St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Garfield Pl &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Gold St &amp; Frankfort St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Graham Ave &amp; Conselyea St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Graham Ave &amp; Grand St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Graham Ave &amp; Herbert St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Graham Ave &amp; Withers St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Grand Army Plaza &amp; Central Park S&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Grand Army Plaza &amp; Plaza St West&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Grand Ave &amp; Bergen St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Grand St &amp; Elizabeth St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Grand St &amp; Greene St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Grand St &amp; Havemeyer St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Great Jones St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Greene Ave &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Greene Ave &amp; Throop Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Greenpoint Ave &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Greenwich Ave &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Greenwich Ave &amp; Charles St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Greenwich St &amp; W Houston St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Hanson Pl &amp; Ashland Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Harrison St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Henry St &amp; Atlantic Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Henry St &amp; Bay St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Henry St &amp; Degraw St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Henry St &amp; Grand St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Henry St &amp; Poplar St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Hicks St &amp; Montague St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Hope St &amp; Union Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Howard St &amp; Centre St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Hoyt St &amp; Warren St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Hudson St &amp; Reade St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Humboldt St &amp; Varet St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Huron St &amp; Franklin St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;India St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;India St &amp; West St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Jackson Ave &amp; 46 Rd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Jackson St &amp; Leonard St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Jay St &amp; Tech Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Jay St &amp; York St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;John St &amp; William St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Johnson St &amp; Gold St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Kane St &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Kent Ave &amp; N 7 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Kent Ave &amp; S 11 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Kosciuszko St &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Kosciuszko St &amp; Tompkins Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lafayette Ave &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lafayette Ave &amp; Fort Greene Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lafayette Ave &amp; St James Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lafayette St &amp; E 8 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lafayette St &amp; Jersey St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;LaGuardia Pl &amp; W 3 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Laight St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lawrence St &amp; Willoughby St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lefferts Pl &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lenox Ave &amp; W 111 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lenox Ave &amp; W 117 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lenox Ave &amp; W 126 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Leonard St &amp; Church St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Leonard St &amp; Maujer St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Leonard St &amp; Nassau Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lexington Ave &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lexington Ave &amp; E 111 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lexington Ave &amp; E 120 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lexington Ave &amp; E 127 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lexington Ave &amp; E 24 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lexington Ave &amp; E 29 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lexington Ave &amp; E 63 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Liberty St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lincoln Pl &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lispenard St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Little West St &amp; 1 Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lorimer St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;MacDougal St &amp; Prince St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;MacDougal St &amp; Washington Sq&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Macon St &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Madison Ave &amp; E 120 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Madison Ave &amp; E 82 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Madison Ave &amp; E 99 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Madison St &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Madison St &amp; Montgomery St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Maiden Ln &amp; Pearl St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Marcus Garvey Blvd &amp; Macon St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Marcy Ave &amp; Lafayette Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Market St &amp; Cherry St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;McGuinness Blvd &amp; Eagle St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;McKibbin St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Mercer St &amp; Bleecker St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Mercer St &amp; Spring St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Meserole Ave &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Metropolitan Ave &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Metropolitan Ave &amp; Meeker Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Milton St &amp; Franklin St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Monroe St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Monroe St &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Monroe St &amp; Tompkins Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Montgomery St &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Montgomery St &amp; Franklin Ave OLD&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Montrose Ave &amp; Bushwick Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Morningside Ave &amp; W 123 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Morningside Dr &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Mott St &amp; Prince St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Mt Morris Park W &amp; W 120 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Murray St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Murray St &amp; West St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Myrtle Ave &amp; Lewis Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Myrtle Ave &amp; St Edwards St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;N 11 St &amp; Kent Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;N 11 St &amp; Wythe Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;N 12 St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;N 15 St &amp; Wythe Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;N 6 St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;N 8 St &amp; Driggs Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Nassau Ave &amp; Newell St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Nassau Ave &amp; Russell St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Nassau St &amp; Navy St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Newton Rd &amp; 44 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Newtown Ave &amp; 23 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Norfolk St &amp; Broome St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;North Moore St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;NYCBS Depot - GOW&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;NYCBS Depot - PIT&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;NYCBS Depot - RIS&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;NYCBS Depot - STY - Garage 4&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;NYCBS Depot BAL - DYR&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Old Fulton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Old Slip &amp; Front St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pacific St &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pacific St &amp; Nevins St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Park Ave &amp; E 124 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Park Ave &amp; Marcus Garvey Blvd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Park Ave &amp; St Edwards St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Park Pl &amp; Church St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Park Pl &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Park Pl &amp; Vanderbilt Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pearl St &amp; Anchorage Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pearl St &amp; Hanover Square&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Peck Slip &amp; Front St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Perry St &amp; Bleecker St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pershing Square North&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pershing Square South&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Picnic Point&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pier 40 - Hudson River Park&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pike St &amp; E Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pike St &amp; Monroe St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pioneer St &amp; Richards St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pioneer St &amp; Van Brunt St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pitt St &amp; Stanton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Plaza St West &amp; Flatbush Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pleasant Ave &amp; E 116 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pleasant Ave &amp; E 120 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;President St &amp; Henry St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Prospect Park - 5 Year Anniversary Celebration&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Prospect Park West &amp; 8 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Prospect Pl &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Prospect Pl &amp; Underhill Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Prototype Lab Motivate Headquarters&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Putnam Ave &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Putnam Ave &amp; Throop Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Queens Plaza North &amp; Crescent St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Railroad Ave &amp; Kay Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Reade St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Richards St &amp; Delavan St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Richardson St &amp; N Henry St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Riverside Blvd &amp; W 67 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Riverside Dr &amp; W 104 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Riverside Dr &amp; W 72 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Riverside Dr &amp; W 78 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Riverside Dr &amp; W 82 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Riverside Dr &amp; W 91 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Rivington St &amp; Chrystie St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Rivington St &amp; Ridge St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Roebling St &amp; N 4 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;S 3 St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;S 4 St &amp; Wythe Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;S 5 Pl &amp; S 5 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;S Portland Ave &amp; Atlantic Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;S Portland Ave &amp; Hanson Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Sands St &amp; Navy St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Schermerhorn St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Schermerhorn St &amp; Bond St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Schermerhorn St &amp; Court St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Scholes St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Sigourney St &amp; Columbia St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Smart Cities Conference&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Smith St &amp; 3 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Smith St &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Soissons Landing&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;South End Ave &amp; Liberty St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;South St &amp; Gouverneur Ln&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;South St &amp; Whitehall St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;St James Pl &amp; Oliver St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;St James Pl &amp; Pearl St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;St Johns Pl &amp; Washington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;St Marks Pl &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;St Marks Pl &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;St Nicholas Ave &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;St. Nicholas Ave &amp; W 126 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Stagg St &amp; Union Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Stanton St &amp; Chrystie St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Stanton St &amp; Mangin St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;State St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Steinway St &amp; 23 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Steinway St &amp; 28 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Sterling Pl &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Sterling Pl &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Suffolk St &amp; Stanton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Sullivan St &amp; Washington Sq&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Thompson St &amp; Bleecker St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Tompkins Ave &amp; Hopkins St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Underhill Ave &amp; Lincoln Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Underhill Ave &amp; Pacific St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Union Ave &amp; Jackson St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Union Ave &amp; N 12 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Union Ave &amp; Wallabout St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Union St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Union St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Union St &amp; Nevins St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;University Pl &amp; E 14 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;University Pl &amp; E 8 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Van Brunt St &amp; Van Dyke St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Van Brunt St &amp; Wolcott St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Van Dyke St &amp; Van Brunt St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Vernon Blvd &amp; 10 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Vernon Blvd &amp; 30 Rd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Vernon Blvd &amp; 31 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Vernon Blvd &amp; 41 Rd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Vernon Blvd &amp; 47 Rd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Vernon Blvd &amp; 50 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Vesey Pl &amp; River Terrace&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 100 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 100 St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 104 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 104 St &amp; Amsterdam Ave - 1&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 106 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 106 St &amp; Central Park West&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 107 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 11 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 110 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 113 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 116 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 116 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 12 St &amp; W 4 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 120 St &amp; Claremont Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 13 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 13 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 13 St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 15 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 15 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 15 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 16 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 16 St &amp; The High Line&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 17 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 18 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 18 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 20 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 20 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 20 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 22 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 22 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 24 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 25 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 26 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 26 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 27 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 27 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 31 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 33 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 34 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 35 St &amp; Dyer Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 36 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 37 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 37 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 38 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 4 St &amp; 7 Ave S&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 41 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 42 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 42 St &amp; Dyer Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 43 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 43 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 44 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 45 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 45 St &amp; 6 Ave (OLD)&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 45 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 46 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 47 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 49 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 50 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 52 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 52 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 52 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 52 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 53 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 54 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 55 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 56 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 59 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 63 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 64 St &amp; Thelonious Monk Circle&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 64 St &amp; West End Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 67 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 70 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 74 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 76 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 78 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 82 St &amp; Central Park West&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 84 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 84 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 87 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 88 St &amp; West End Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 89 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 90 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 92 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 95 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W Broadway &amp; Spring Street&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Warren St &amp; Church St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Warren St &amp; Court St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Washington Ave &amp; Greene Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Washington Ave &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Washington Park&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Washington Pl &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Washington Pl &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Washington St &amp; Gansevoort St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Water - Whitehall Plaza&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Watts St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;West Drive &amp; Prospect Park West&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;West End Ave &amp; W 107 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;West End Ave &amp; W 94 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;West St &amp; Chambers St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;West Thames St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;William St &amp; Pine St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Willoughby Ave &amp; Hall St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Willoughby Ave &amp; Tompkins Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Willoughby Ave &amp; Walworth St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Willoughby St &amp; Fleet St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Wolcott St &amp; Dwight St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Wyckoff St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Wyckoff St &amp; Bond St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Wythe Ave &amp; Metropolitan Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Yankee Ferry Terminal&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;York St &amp; Jay St&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' included-values='in-range'>
            <max>50.0</max>
          </filter>
          <slices>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]</column>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[attr:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:start station longitude:qk]' field-type='quantitative' max='-8217122.523823984' min='-8247891.8629930429' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:start station latitude:qk]' field-type='quantitative' max='4985971.1061315443' min='4962775.757691117' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#0655ff</color>
                <color>#2e6ef8</color>
                <color>#5486f2</color>
                <color>#789dec</color>
                <color>#9ab2e5</color>
                <color>#bac6df</color>
                <color>#d9d9d9</color>
                <color>#dfbaba</color>
                <color>#e59999</color>
                <color>#ec7676</color>
                <color>#f25050</color>
                <color>#f82929</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Zip Code Boundaries-bg' value='true' />
            <format attr='enabled' id='Zip Code Boundaries' value='true' />
            <format attr='enabled' id='Zip Code Labels' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' />
              <size column='[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]' />
              <tooltip column='[federated.0fb5izm06oekec1do4cr21267vg4].[attr:start station name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[none:start station latitude:qk]</rows>
        <cols>[federated.0fb5izm06oekec1do4cr21267vg4].[none:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{690D5B9A-6EEC-44A6-801F-7489B079F9F8}' />
    </worksheet>
    <worksheet name='Bike Usage by Hour'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column datatype='string' name='[Gender Labels]' role='dimension' type='nominal' />
            <column datatype='string' name='[Generation]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Baby Boomer (1946 - 1964)&quot;' value='Boomer (1946-1964)' />
                <alias key='&quot;G.I. Generation (1927 and earlier)&quot;' value='G.I. (1927 &amp; earlier)' />
                <alias key='&quot;Generation X (1965 - 1980)&quot;' value='Gen-X (1965-1980)' />
                <alias key='&quot;Generation Z (1997 - 2002)&quot;' value='Gen-Z (1997-2002)' />
                <alias key='&quot;Millennial (1981 - 1996)&quot;' value='Millennial (1981-1996)' />
                <alias key='&quot;Silent Generation (1928 - 1945)&quot;' value='Silent (1928-1945)' />
              </aliases>
            </column>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='Count' name='[cnt:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gender Labels]' derivation='None' name='[none:Gender Labels:nk]' pivot='key' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Generation:nk]' member='&quot;Baby Boomer (1946 - 1964)&quot;' />
              <groupfilter function='member' level='[none:Generation:nk]' member='&quot;Generation X (1965 - 1980)&quot;' />
              <groupfilter function='member' level='[none:Generation:nk]' member='&quot;Millennial (1981 - 1996)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</column>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='98' />
            <format attr='width' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]' value='98' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='iLLL' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='8' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='Arial Nova' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='bold' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='bold' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]' value='8' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]' value='Arial Nova' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]</rows>
        <cols>[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]</cols>
      </table>
      <simple-id uuid='{A296AB58-683D-4787-B58E-610EC45537DB}' />
    </worksheet>
    <worksheet name='Bike Usage by Hour (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column datatype='string' name='[Gender Labels]' role='dimension' type='nominal' />
            <column datatype='string' name='[Generation]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Baby Boomer (1946 - 1964)&quot;' value='Boomer (1946-1964)' />
                <alias key='&quot;G.I. Generation (1927 and earlier)&quot;' value='G.I. (1927 &amp; earlier)' />
                <alias key='&quot;Generation X (1965 - 1980)&quot;' value='Gen-X (1965-1980)' />
                <alias key='&quot;Generation Z (1997 - 2002)&quot;' value='Gen-Z (1997-2002)' />
                <alias key='&quot;Millennial (1981 - 1996)&quot;' value='Millennial (1981-1996)' />
                <alias key='&quot;Silent Generation (1928 - 1945)&quot;' value='Silent (1928-1945)' />
              </aliases>
            </column>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='Count' name='[cnt:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gender Labels]' derivation='None' name='[none:Gender Labels:nk]' pivot='key' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Generation:nk]' member='&quot;G.I. Generation (1927 and earlier)&quot;' />
              <groupfilter function='member' level='[none:Generation:nk]' member='&quot;Generation Z (1997 - 2002)&quot;' />
              <groupfilter function='member' level='[none:Generation:nk]' member='&quot;Silent Generation (1928 - 1945)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</column>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='98' />
            <format attr='width' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]' value='98' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='iLLL' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='8' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='Arial Nova' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='bold' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='bold' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]' value='8' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]' value='Arial Nova' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]</rows>
        <cols>[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]</cols>
      </table>
      <simple-id uuid='{8DCF067D-2127-4838-8DE4-DEB8896462B8}' />
    </worksheet>
    <worksheet name='Bike Usage by Hour (Gender)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column datatype='string' name='[Gender Labels]' role='dimension' type='nominal' />
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='Count' name='[cnt:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gender Labels]' derivation='None' name='[none:Gender Labels:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='98' />
            <format attr='width' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]' value='98' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='iLLL' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='8' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='Arial Nova' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='bold' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='bold' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]' value='8' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]' value='Arial Nova' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' />
              <text column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]</rows>
        <cols>[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]</cols>
      </table>
      <simple-id uuid='{25CEBE75-1DD1-4BB2-B035-5CCFF47B013E}' />
    </worksheet>
    <worksheet name='Bike Usage by Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column datatype='string' name='[Gender Labels]' role='dimension' type='nominal' />
            <column datatype='string' name='[Generation]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Baby Boomer (1946 - 1964)&quot;' value='Boomer (1946-1964)' />
                <alias key='&quot;G.I. Generation (1927 and earlier)&quot;' value='G.I. (1927 &amp; earlier)' />
                <alias key='&quot;Generation X (1965 - 1980)&quot;' value='Gen-X (1965-1980)' />
                <alias key='&quot;Generation Z (1997 - 2002)&quot;' value='Gen-Z (1997-2002)' />
                <alias key='&quot;Millennial (1981 - 1996)&quot;' value='Millennial (1981-1996)' />
                <alias key='&quot;Silent Generation (1928 - 1945)&quot;' value='Silent (1928-1945)' />
              </aliases>
            </column>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='Count' name='[cnt:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gender Labels]' derivation='None' name='[none:Gender Labels:nk]' pivot='key' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Generation:nk]' member='&quot;Baby Boomer (1946 - 1964)&quot;' />
              <groupfilter function='member' level='[none:Generation:nk]' member='&quot;Generation X (1965 - 1980)&quot;' />
              <groupfilter function='member' level='[none:Generation:nk]' member='&quot;Millennial (1981 - 1996)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</column>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='iLLL' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='8' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='Arial Nova' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='bold' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='310' />
            <format attr='font-family' value='Arial Nova' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
            <format attr='font-family' value='Arial Nova' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]</rows>
        <cols>[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]</cols>
      </table>
      <simple-id uuid='{7954B5AF-FDF9-4BDE-A21F-E37683AC2586}' />
    </worksheet>
    <worksheet name='Bike Usage by Month (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column datatype='string' name='[Gender Labels]' role='dimension' type='nominal' />
            <column datatype='string' name='[Generation]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Baby Boomer (1946 - 1964)&quot;' value='Boomer (1946-1964)' />
                <alias key='&quot;G.I. Generation (1927 and earlier)&quot;' value='G.I. (1927 &amp; earlier)' />
                <alias key='&quot;Generation X (1965 - 1980)&quot;' value='Gen-X (1965-1980)' />
                <alias key='&quot;Generation Z (1997 - 2002)&quot;' value='Gen-Z (1997-2002)' />
                <alias key='&quot;Millennial (1981 - 1996)&quot;' value='Millennial (1981-1996)' />
                <alias key='&quot;Silent Generation (1928 - 1945)&quot;' value='Silent (1928-1945)' />
              </aliases>
            </column>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='Count' name='[cnt:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gender Labels]' derivation='None' name='[none:Gender Labels:nk]' pivot='key' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Generation:nk]' member='&quot;G.I. Generation (1927 and earlier)&quot;' />
              <groupfilter function='member' level='[none:Generation:nk]' member='&quot;Generation Z (1997 - 2002)&quot;' />
              <groupfilter function='member' level='[none:Generation:nk]' member='&quot;Silent Generation (1928 - 1945)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</column>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='iLLL' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='8' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='Arial Nova' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='bold' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='310' />
            <format attr='font-family' value='Arial Nova' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]</rows>
        <cols>[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]</cols>
      </table>
      <simple-id uuid='{3F23CE1A-833B-4259-B2C7-B23655A6F848}' />
    </worksheet>
    <worksheet name='Bike Usage by Month (Gender)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column datatype='string' name='[Gender Labels]' role='dimension' type='nominal' />
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='Count' name='[cnt:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gender Labels]' derivation='None' name='[none:Gender Labels:nk]' pivot='key' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='iLLL' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='8' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='Arial Nova' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]' value='bold' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' />
              <text column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]</rows>
        <cols>[federated.0fb5izm06oekec1do4cr21267vg4].[mn:starttime:ok]</cols>
      </table>
      <simple-id uuid='{70200B30-9EC8-44FE-8224-5316D076D0C4}' />
    </worksheet>
    <worksheet name='Breakdown of Rides by Gender'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column caption='Percentage of Total' datatype='real' name='[Calculation_3206844449561833474]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(COUNT([bikeid]) / TOTAL(Count([bikeid])) * 100)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Gender Labels]' role='dimension' type='nominal' />
            <column datatype='string' name='[Generation]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Baby Boomer (1946 - 1964)&quot;' value='Boomer (1946-1964)' />
                <alias key='&quot;G.I. Generation (1927 and earlier)&quot;' value='G.I. (1927 &amp; earlier)' />
                <alias key='&quot;Generation X (1965 - 1980)&quot;' value='Gen-X (1965-1980)' />
                <alias key='&quot;Generation Z (1997 - 2002)&quot;' value='Gen-Z (1997-2002)' />
                <alias key='&quot;Millennial (1981 - 1996)&quot;' value='Millennial (1981-1996)' />
                <alias key='&quot;Silent Generation (1928 - 1945)&quot;' value='Silent (1928-1945)' />
              </aliases>
            </column>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='Count' name='[cnt:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender Labels]' derivation='None' name='[none:Gender Labels:nk]' pivot='key' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3206844449561833474]' derivation='User' name='[usr:Calculation_3206844449561833474:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]'>
            <groupfilter from='&quot;Female&quot;' function='range' level='[none:Gender Labels:nk]' to='&quot;Unknown&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;G.I. Generation (1927 and earlier)&quot;</bucket>
              <bucket>&quot;Silent Generation (1928 - 1945)&quot;</bucket>
              <bucket>&quot;Baby Boomer (1946 - 1964)&quot;</bucket>
              <bucket>&quot;Generation X (1965 - 1980)&quot;</bucket>
              <bucket>&quot;Millennial (1981 - 1996)&quot;</bucket>
              <bucket>&quot;Generation Z (1997 - 2002)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='171' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='32' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' />
              <wedge-size column='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' />
              <tooltip column='[federated.0fb5izm06oekec1do4cr21267vg4].[usr:Calculation_3206844449561833474:qk]' />
              <text column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</cols>
      </table>
      <simple-id uuid='{89175D64-EA48-4959-A9CF-0C7DBC07D790}' />
    </worksheet>
    <worksheet name='Number of Rides by Ending Station'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column-instance column='[end station name]' derivation='Attribute' name='[attr:end station name:nk]' pivot='key' type='nominal' />
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='Count' name='[cnt:bikeid:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[attr:end station name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;1 Ave &amp; E 110 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;1 Ave &amp; E 16 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;1 Ave &amp; E 18 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;1 Ave &amp; E 30 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;1 Ave &amp; E 44 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;1 Ave &amp; E 62 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;1 Ave &amp; E 68 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;1 Ave &amp; E 78 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;1 Ave &amp; E 94 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;1 Pl &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;10 Hudson Yards&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;10 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;10 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;11 Ave &amp; W 27 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;11 Ave &amp; W 41 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;11 Ave &amp; W 59 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;11 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;11 St &amp; 43 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;12 Ave &amp; W 40 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;12 St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;14 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;14 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;19 St &amp; 24 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;2 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;2 Ave &amp; E 104 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;2 Ave &amp; E 122 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;2 Ave &amp; E 31 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;2 Ave &amp; E 55 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;2 Ave &amp; E 96 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;2 Ave &amp; E 99 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;21 St &amp; 31 Dr&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;21 St &amp; 36 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;21 St &amp; 38 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;21 St &amp; 43 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;21 St &amp; Hoyt Ave S&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;21 St &amp; Queens Plaza North&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;23 Ave &amp; 27 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;24 Ave &amp; 26 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;24 Ave &amp; 29 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;24 St &amp; 41 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;27 Ave &amp; 4 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;27 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;27 St &amp; Hunter St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;28 Ave &amp; 35 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;28 Ave &amp; 44 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;28 St &amp; 36 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;28 St &amp; 38 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;28 St &amp; 40 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;28 St &amp; 41 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;3 Ave &amp; 14 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;3 Ave &amp; E 100 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;3 Ave &amp; E 112 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;3 Ave &amp; E 62 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;3 Ave &amp; E 71 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;3 Ave &amp; E 72 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;3 Ave &amp; E 95 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;3 Ave &amp; Schermerhorn St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;3 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;3 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;3 St &amp; Hoyt St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;3 St &amp; Prospect Park West&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;30 Ave &amp; 21 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;31 Ave &amp; 14 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;31 Ave &amp; 30 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;31 Ave &amp; 34 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;31 Ave &amp; Crescent St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;31 Ave &amp; Steinway St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;31 St &amp; 23 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;31 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;31 St &amp; Astoria Blvd&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;31 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;31 St &amp; Hoyt Ave N&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;31 St &amp; Newtown Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;31 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;31 St &amp; Thomson Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;32 St &amp; 30 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;34 Ave &amp; 13 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;34 Ave &amp; 21 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;34 Ave &amp; 38 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;34 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;35 Ave &amp; 10 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;35 Ave &amp; 37 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;35 St &amp; 34 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;35 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;36 Ave &amp; 10 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;37 Ave &amp; 35 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;37 St &amp; 24 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;4 Ave &amp; 2 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;4 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;40 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;40 Ave &amp; Crescent St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;43 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;44 Dr &amp; 21 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;44 Dr &amp; Jackson Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;45 Rd &amp; 11 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;46 Ave &amp; 5 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;47 Ave &amp; 31 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;47 Ave &amp; Skillman Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;48 Ave &amp; 30 Pl&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;48 Ave &amp; 5 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;49 Ave &amp; 21 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;5 Ave &amp; 3 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;5 Ave &amp; E 103 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;5 Ave &amp; E 126 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;5 Ave &amp; E 29 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;5 Ave &amp; E 63 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;5 Ave &amp; E 73 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;5 Ave &amp; E 78 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;5 Ave &amp; E 88 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;5 Ave &amp; E 93 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;5 St &amp; 51 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;5 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;5 St &amp; Market St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;6 Ave &amp; 12 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;6 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;6 Ave &amp; Canal St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;6 Ave &amp; Spring St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;6 Ave &amp; W 33 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;6 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;7 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;7 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;8 Ave &amp; W 16 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;8 Ave &amp; W 31 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;8 Ave &amp; W 33 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;8 Ave &amp; W 52 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;8D Mobile 01&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;8D OPS 01&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;8D QC Station 01&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;9 Ave &amp; W 22 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;9 Ave &amp; W 28 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;9 Ave &amp; W 45 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;9 St &amp; 44 Rd&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Adelphi St &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Albany Ave &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Allen St &amp; Hester St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Allen St &amp; Rivington St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Allen St &amp; Stanton St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Amsterdam Ave &amp; W 119 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Amsterdam Ave &amp; W 125 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Amsterdam Ave &amp; W 66 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Amsterdam Ave &amp; W 73 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Amsterdam Ave &amp; W 79 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Amsterdam Ave &amp; W 82 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Apache&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Astoria Park S &amp; Shore Blvd&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Atlantic Ave &amp; Fort Greene Pl&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Atlantic Ave &amp; Furman St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Avenue D &amp; E 12 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Avenue D &amp; E 3 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Avenue D &amp; E 8 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Baltic St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bank St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bank St &amp; Washington St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Banker St &amp; Meserole Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Barclay St &amp; Church St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Barrow St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bayard St &amp; Baxter St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bayard St &amp; Leonard St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bedford Ave &amp; Bergen St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bedford Ave &amp; Nassau Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bedford Ave &amp; S 9 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bergen St &amp; Flatbush Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bergen St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bergen St &amp; Vanderbilt Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Berkeley Pl &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Berkeley Pl &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Berry St &amp; N 8 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bialystoker Pl &amp; Delancey St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bike Mechanics at Riis Room A&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bike Mechanics at Riis Room B&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Boerum St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bond St &amp; Bergen St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bond St &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bressler&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broad St &amp; Bridge St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; 12 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; Battery Pl&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; Berry St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; E 14 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; E 22 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; Moylan Pl&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; Roebling St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; W 122 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; W 25 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; W 29 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; W 32 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; W 36 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; W 37 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; W 38 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; W 41 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; W 49 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; W 51 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; W 53 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; W 56 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; W 58 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; W 60 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Broadway &amp; Whipple St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Brooklyn Bridge Park - Pier 2&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bus Slip &amp; State St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Bushwick Ave &amp; Powers St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Butler St &amp; Court St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Cadman Plaza E &amp; Red Cross Pl&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Cadman Plaza E &amp; Tillary St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Cadman Plaza West &amp; Montague St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Cambridge Pl &amp; Gates Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Canal St &amp; Rutgers St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Carlton Ave &amp; Dean St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Carlton Ave &amp; Flushing Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Carlton Ave &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Carmine St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Carroll St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Carroll St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Carroll St &amp; Bond St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Carroll St &amp; Columbia St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Carroll St &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Carroll St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Carroll St &amp; Washington Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Cathedral Pkwy &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Catherine St &amp; Monroe St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Center Blvd &amp; 48 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Center Blvd &amp; Borden Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Central Park S &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Central Park W &amp; W 96 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Central Park West &amp; W 100 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Central Park West &amp; W 102 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Central Park West &amp; W 68 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Central Park West &amp; W 72 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Central Park West &amp; W 76 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Central Park West &amp; W 85 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Centre St &amp; Chambers St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Centre St &amp; Worth St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Cherry St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;City Hall&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Clark St &amp; Henry St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Classon Ave &amp; St Marks Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Clermont Ave &amp; Lafayette Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Clermont Ave &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Cleveland Pl &amp; Spring St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Cliff St &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Cliff St &amp; Fulton St_1&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Clinton Ave &amp; Flushing Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Clinton Ave &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Clinton St &amp; 4 Place&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Clinton St &amp; Centre St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Clinton St &amp; Grand St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Clinton St &amp; Joralemon St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Clinton St &amp; Tillary St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Clinton St &amp; Union St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Coffey St &amp; Conover St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Columbia Heights &amp; Cranberry St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Columbia St &amp; Degraw St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Columbia St &amp; Kane St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Columbia St &amp; Lorraine St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Columbia St &amp; Rivington St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Columbia St &amp; W 9 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Columbus Ave &amp; W 103 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Columbus Ave &amp; W 72 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Columbus Ave &amp; W 95 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Columbus Drive&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Commerce St &amp; Van Brunt St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Communipaw &amp; Berry Lane&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Concord St &amp; Bridge St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Congress St &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Cooper Square &amp; Astor Pl&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Court St &amp; Nelson St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Court St &amp; State St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Crescent St &amp; 30 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Crescent St &amp; 34 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Crescent St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Crescent St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Crescent St &amp; Ditmars Blvd&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Crown St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Cumberland St &amp; Lafayette Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Dean St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Dean St &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Dean St &amp; Hoyt St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Degraw St &amp; Hoyt St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Degraw St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;DeKalb Ave &amp; Hudson Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;DeKalb Ave &amp; S Portland Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;DeKalb Ave &amp; Skillman St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Devoe St &amp; Lorimer St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Ditmars Blvd &amp; 19 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Division Av &amp; Hooper St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Division Ave &amp; Hooper St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Division Ave &amp; Marcy Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Division St &amp; Bowery&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Dixon Mills&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Douglass St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Douglass St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Driggs Ave &amp; Lorimer St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Driggs Ave &amp; N 9 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Driggs Ave &amp; N Henry St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Duane St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Duffield St &amp; Willoughby St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Dwight St &amp; Van Dyke St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 10 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 10 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 102 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 102 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 103 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 106 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 106 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 106 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 109 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 11 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 11 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 11 St &amp; Avenue B&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 11 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 110 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 114 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 115 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 115 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 116 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 118 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 118 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 118 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 118 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 12 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 12 St &amp; Avenue B&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 123 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 128 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 13 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 15 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 16 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 16 St &amp; Irving Pl&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 17 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 19 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 2 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 2 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 2 St &amp; Avenue B&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 2 St &amp; Avenue C&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 20 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 20 St &amp; FDR Drive&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 20 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 23 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 24 St &amp; Park Ave S&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 25 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 25 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 27 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 3 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 30 St &amp; Park Ave S&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 31 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 32 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 33 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 33 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 33 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 35 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 39 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 39 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 4 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 41 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 41 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 43 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 44 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 45 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 47 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 47 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 47 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 48 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 48 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 5 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 5 St &amp; Avenue C&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 51 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 51 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 52 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 53 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 53 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 55 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 55 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 55 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 58 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 58 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 58 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 59 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 6 St &amp; Avenue B&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 6 St &amp; Avenue D&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 60 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 65 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 66 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 67 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 68 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 68 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 7 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 71 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 71 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 72 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 72 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 74 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 75 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 76 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 76 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 77 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 78 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 80 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 81 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 81 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 81 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 81 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 82 St &amp; East End Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 84 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 84 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 85 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 85 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 87 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 88 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 88 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 89 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 89 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 9 St &amp; Avenue C&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 91 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 91 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 93 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 95 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 97 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 97 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 98 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;E 98 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;East End Ave &amp; E 86 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Eastern Pkwy &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Eastern Pkwy &amp; Washington Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Eckford St &amp; Engert Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Emerson Pl &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Essex Light Rail&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Exchange Place&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Fairmount Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;FDR Drive &amp; E 35 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Flushing Ave &amp; Vanderbilt Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Forsyth St &amp; Broome St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Forsyth St &amp; Canal St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Franklin Ave &amp; Empire Blvd&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Franklin Ave &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Franklin Ave &amp; St Marks Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Franklin St &amp; Dupont St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Franklin St &amp; W Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 112 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 115 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 117 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 129 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Front St &amp; Gold St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Front St &amp; Maiden Ln&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Front St &amp; Washington St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Frost St &amp; Meeker St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Fulton St &amp; Adams St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Fulton St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Fulton St &amp; Clermont Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Fulton St &amp; Grand Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Fulton St &amp; Rockwell Pl&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Fulton St &amp; Utica Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Fulton St &amp; Waverly Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Fulton St &amp; William St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Gansevoort St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Garfield Pl &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Gold St &amp; Frankfort St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Graham Ave &amp; Conselyea St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Graham Ave &amp; Grand St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Graham Ave &amp; Herbert St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Graham Ave &amp; Withers St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Grand Army Plaza &amp; Central Park S&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Grand Army Plaza &amp; Plaza St West&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Grand Ave &amp; Bergen St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Grand St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Grand St &amp; Elizabeth St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Grand St &amp; Greene St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Grand St &amp; Havemeyer St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Great Jones St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Greene Ave &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Greene Ave &amp; Throop Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Greenpoint Ave &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Greenwich Ave &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Greenwich Ave &amp; Charles St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Greenwich St &amp; W Houston St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Grove St PATH&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Halsey St &amp; Tompkins Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Hamilton Park&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Hancock St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Hanson Pl &amp; Ashland Pl&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Harborside&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Harrison St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Heights Elevator&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Henry St &amp; Atlantic Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Henry St &amp; Bay St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Henry St &amp; Degraw St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Henry St &amp; Grand St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Henry St &amp; Poplar St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Hicks St &amp; Montague St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Hope St &amp; Union Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Howard St &amp; Centre St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Hoyt St &amp; Warren St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Hudson St &amp; Reade St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Humboldt St &amp; Varet St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Huron St &amp; Franklin St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;India St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;India St &amp; West St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Jackson Ave &amp; 46 Rd&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Jackson St &amp; Leonard St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Jay St &amp; Tech Pl&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Jay St &amp; York St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;JCBS Depot&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Jersey &amp; 6th St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;John St &amp; William St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Johnson St &amp; Gold St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Kane St &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Kent Ave &amp; N 7 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Kent Ave &amp; S 11 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Kingston Ave &amp; Herkimer St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Kosciuszko St &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Kosciuszko St &amp; Tompkins Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lafayette Ave &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lafayette Ave &amp; Fort Greene Pl&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lafayette Ave &amp; St James Pl&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lafayette Park&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lafayette St &amp; E 8 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lafayette St &amp; Jersey St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;LaGuardia Pl &amp; W 3 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Laight St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lawrence St &amp; Willoughby St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lefferts Pl &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lenox Ave &amp; W 111 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lenox Ave &amp; W 115 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lenox Ave &amp; W 117 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lenox Ave &amp; W 126 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lenox Ave &amp; W 130 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Leonard St &amp; Boerum St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Leonard St &amp; Church St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Leonard St &amp; Maujer St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Leonard St &amp; Nassau Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lewis Ave &amp; Decatur St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lewis Ave &amp; Kosciuszko St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lewis Ave &amp; Madison St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lexington Ave &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lexington Ave &amp; E 111 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lexington Ave &amp; E 120 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lexington Ave &amp; E 127 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lexington Ave &amp; E 24 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lexington Ave &amp; E 29 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lexington Ave &amp; E 63 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Liberty Light Rail&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Liberty St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lincoln Pl &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lispenard St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Little West St &amp; 1 Pl&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Lorimer St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;MacDougal St &amp; Prince St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;MacDougal St &amp; Washington Sq&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Macon St &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Madison Ave &amp; E 120 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Madison Ave &amp; E 82 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Madison Ave &amp; E 99 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Madison St &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Madison St &amp; Montgomery St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Maiden Ln &amp; Pearl St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Marcus Garvey Blvd &amp; Macon St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Marcy Ave &amp; Lafayette Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Marin Light Rail&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Market St &amp; Cherry St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;McGuinness Blvd &amp; Eagle St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;McKibbin St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Mercer St &amp; Bleecker St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Mercer St &amp; Spring St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Meserole Ave &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Metropolitan Ave &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Metropolitan Ave &amp; Meeker Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Milton St &amp; Franklin St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Monroe St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Monroe St &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Monroe St &amp; Tompkins Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Montgomery St &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Montgomery St &amp; Franklin Ave OLD&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Montrose Ave &amp; Bushwick Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Morningside Ave &amp; W 123 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Morningside Dr &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Morris Canal&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Mott St &amp; Prince St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Mt Morris Park W &amp; W 120 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Murray St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Murray St &amp; West St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Myrtle Ave &amp; Lewis Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Myrtle Ave &amp; Marcy Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Myrtle Ave &amp; St Edwards St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;N 11 St &amp; Kent Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;N 11 St &amp; Wythe Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;N 12 St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;N 15 St &amp; Wythe Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;N 6 St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;N 8 St &amp; Driggs Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Nassau Ave &amp; Newell St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Nassau Ave &amp; Russell St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Nassau St &amp; Navy St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Newport PATH&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Newport Pkwy&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Newton Rd &amp; 44 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Newtown Ave &amp; 23 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Norfolk St &amp; Broome St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;North Moore St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Nostrand Ave &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;NYCBS Depot - 3AV&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;NYCBS DEPOT - DELANCEY&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;NYCBS Depot - GOW&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;NYCBS Depot - PIT&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;NYCBS Depot - RIS&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;NYCBS Depot - STY - Garage 4&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;NYCBS Depot BAL - DYR&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Old Fulton St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Old Slip &amp; Front St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Pacific St &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Pacific St &amp; Nevins St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Park Ave &amp; E 124 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Park Ave &amp; Marcus Garvey Blvd&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Park Ave &amp; St Edwards St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Park Pl &amp; Church St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Park Pl &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Park Pl &amp; Vanderbilt Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Paulus Hook&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Pearl St &amp; Anchorage Pl&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Pearl St &amp; Hanover Square&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Peck Slip &amp; Front St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Perry St &amp; Bleecker St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Pershing Square North&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Pershing Square South&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Picnic Point&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Pier 40 - Hudson River Park&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Pike St &amp; E Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Pike St &amp; Monroe St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Pioneer St &amp; Richards St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Pioneer St &amp; Van Brunt St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Pitt St &amp; Stanton St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Plaza St West &amp; Flatbush Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Pleasant Ave &amp; E 116 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Pleasant Ave &amp; E 120 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;President St &amp; Henry St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Prospect Park - 5 Year Anniversary Celebration&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Prospect Park West &amp; 8 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Prospect Pl &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Prospect Pl &amp; Underhill Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Prototype Lab Motivate Headquarters&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Putnam Ave &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Putnam Ave &amp; Throop Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Queens Plaza North &amp; Crescent St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Railroad Ave &amp; Kay Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Reade St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Richards St &amp; Delavan St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Richardson St &amp; N Henry St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Riverside Blvd &amp; W 67 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Riverside Dr &amp; W 104 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Riverside Dr &amp; W 72 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Riverside Dr &amp; W 78 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Riverside Dr &amp; W 82 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Riverside Dr &amp; W 91 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Riverview Park&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Rivington St &amp; Chrystie St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Rivington St &amp; Ridge St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Roebling St &amp; N 4 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Rogers Ave &amp; Sterling St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;S 3 St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;S 4 St &amp; Rodney St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;S 4 St &amp; Wythe Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;S 5 Pl &amp; S 5 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;S Portland Ave &amp; Atlantic Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;S Portland Ave &amp; Hanson Pl&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Sands St &amp; Navy St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Schermerhorn St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Schermerhorn St &amp; Bond St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Schermerhorn St &amp; Court St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Scholes St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Sigourney St &amp; Columbia St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Sip Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Smart Cities Conference&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Smith St &amp; 3 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Smith St &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Soissons Landing&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;South End Ave &amp; Liberty St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;South St &amp; Gouverneur Ln&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;South St &amp; Whitehall St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;St James Pl &amp; Oliver St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;St James Pl &amp; Pearl St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;St Johns Pl &amp; Washington Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;St Marks Pl &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;St Marks Pl &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;St Nicholas Ave &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;St. Nicholas Ave &amp; W 126 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Stagg St &amp; Union Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Stanton St &amp; Chrystie St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Stanton St &amp; Mangin St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;State St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Steinway St &amp; 23 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Steinway St &amp; 28 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Sterling Pl &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Sterling Pl &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Sterling St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Suffolk St &amp; Stanton St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Sullivan Pl &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Sullivan St &amp; Washington Sq&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Thompson St &amp; Bleecker St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Throop Ave &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Tompkins Ave &amp; Hopkins St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Underhill Ave &amp; Lincoln Pl&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Underhill Ave &amp; Pacific St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Union Ave &amp; Jackson St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Union Ave &amp; N 12 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Union Ave &amp; Wallabout St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Union St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Union St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Union St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Union St &amp; Nevins St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;University Pl &amp; E 14 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;University Pl &amp; E 8 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Van Brunt St &amp; Van Dyke St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Van Brunt St &amp; Wolcott St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Van Dyke St &amp; Van Brunt St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Van Vorst Park&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Vernon Blvd &amp; 10 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Vernon Blvd &amp; 30 Rd&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Vernon Blvd &amp; 31 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Vernon Blvd &amp; 41 Rd&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Vernon Blvd &amp; 47 Rd&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Vernon Blvd &amp; 50 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Verona Pl &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Vesey Pl &amp; River Terrace&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 100 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 100 St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 104 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 104 St &amp; Amsterdam Ave - 1&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 106 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 106 St &amp; Central Park West&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 107 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 11 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 110 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 113 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 116 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 116 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 12 St &amp; W 4 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 120 St &amp; Claremont Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 129 St &amp; Convent Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 13 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 13 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 13 St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 15 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 15 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 15 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 16 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 16 St &amp; The High Line&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 17 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 18 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 18 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 20 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 20 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 20 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 22 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 22 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 24 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 25 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 26 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 26 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 27 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 27 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 31 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 33 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 34 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 35 St &amp; Dyer Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 36 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 37 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 37 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 38 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 4 St &amp; 7 Ave S&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 41 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 42 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 42 St &amp; Dyer Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 43 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 43 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 44 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 45 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 45 St &amp; 6 Ave (OLD)&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 45 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 46 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 47 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 49 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 50 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 52 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 52 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 52 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 52 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 53 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 54 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 55 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 56 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 59 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 63 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 64 St &amp; Thelonious Monk Circle&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 64 St &amp; West End Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 67 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 70 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 74 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 76 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 78 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 82 St &amp; Central Park West&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 84 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 84 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 87 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 88 St &amp; West End Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 89 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 90 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 92 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W 95 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;W Broadway &amp; Spring Street&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Warren St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Warren St &amp; Church St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Warren St &amp; Court St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Washington Ave &amp; Greene Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Washington Ave &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Washington Park&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Washington Pl &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Washington Pl &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Washington St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Washington St &amp; Gansevoort St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Water - Whitehall Plaza&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Watts St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;West Drive &amp; Prospect Park West&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;West End Ave &amp; W 107 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;West End Ave &amp; W 94 St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;West St &amp; Chambers St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;West Thames St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;William St &amp; Pine St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Willoughby Ave &amp; Hall St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Willoughby Ave &amp; Tompkins Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Willoughby Ave &amp; Walworth St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Willoughby St &amp; Fleet St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Wolcott St &amp; Dwight St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Wyckoff St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Wyckoff St &amp; Bond St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Wythe Ave &amp; Metropolitan Ave&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;Yankee Ferry Terminal&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;York St&quot;' />
              <groupfilter function='member' level='[attr:end station name:nk]' member='&quot;York St &amp; Jay St&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[attr:end station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:end station longitude:qk]' field-type='quantitative' max='-8221361.1055180943' min='-8244034.5886908285' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:end station latitude:qk]' field-type='quantitative' max='4987812.4108149223' min='4962322.3461669991' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' max='100000' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#a9cbc3</color>
                <color>#7fbeae</color>
                <color>#58b19a</color>
                <color>#36a488</color>
                <color>#199777</color>
                <color>#008a67</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='Zip Code Boundaries-bg' value='true' />
            <format attr='enabled' id='Zip Code Boundaries' value='true' />
            <format attr='enabled' id='Zip Code Labels' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' />
              <size column='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' />
              <tooltip column='[federated.0fb5izm06oekec1do4cr21267vg4].[attr:end station name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[none:end station latitude:qk]</rows>
        <cols>[federated.0fb5izm06oekec1do4cr21267vg4].[none:end station longitude:qk]</cols>
      </table>
      <simple-id uuid='{CFB7F7DA-C9C0-4A96-862E-36D0A625BD31}' />
    </worksheet>
    <worksheet name='Number of Rides by Starting Station'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column-instance column='[start station name]' derivation='Attribute' name='[attr:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='Count' name='[cnt:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[attr:start station name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 110 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 16 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 18 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 30 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 44 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 62 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 68 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 78 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Ave &amp; E 94 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;1 Pl &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;10 Hudson Yards&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;10 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;10 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;11 Ave &amp; W 27 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;11 Ave &amp; W 41 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;11 Ave &amp; W 59 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;11 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;11 St &amp; 43 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;12 Ave &amp; W 40 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;12 St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;14 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;14 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;19 St &amp; 24 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;2 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;2 Ave &amp; E 104 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;2 Ave &amp; E 122 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;2 Ave &amp; E 31 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;2 Ave &amp; E 55 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;2 Ave &amp; E 96 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;2 Ave &amp; E 99 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;21 St &amp; 31 Dr&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;21 St &amp; 36 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;21 St &amp; 38 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;21 St &amp; 43 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;21 St &amp; Hoyt Ave S&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;21 St &amp; Queens Plaza North&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;23 Ave &amp; 27 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;24 Ave &amp; 26 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;24 Ave &amp; 29 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;24 St &amp; 41 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;27 Ave &amp; 4 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;27 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;27 St &amp; Hunter St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;28 Ave &amp; 35 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;28 Ave &amp; 44 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;28 St &amp; 36 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;28 St &amp; 38 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;28 St &amp; 40 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;28 St &amp; 41 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 Ave &amp; 14 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 Ave &amp; E 100 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 Ave &amp; E 112 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 Ave &amp; E 62 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 Ave &amp; E 71 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 Ave &amp; E 72 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 Ave &amp; E 95 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 Ave &amp; Schermerhorn St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 St &amp; Hoyt St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;3 St &amp; Prospect Park West&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;30 Ave &amp; 21 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 Ave &amp; 14 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 Ave &amp; 30 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 Ave &amp; 34 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 Ave &amp; Crescent St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 Ave &amp; Steinway St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 St &amp; 23 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 St &amp; Astoria Blvd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 St &amp; Hoyt Ave N&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 St &amp; Newtown Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 St &amp; Northern Blvd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;31 St &amp; Thomson Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;32 St &amp; 30 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;34 Ave &amp; 13 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;34 Ave &amp; 21 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;34 Ave &amp; 38 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;34 St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;35 Ave &amp; 10 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;35 Ave &amp; 37 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;35 St &amp; 34 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;35 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;36 Ave &amp; 10 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;37 Ave &amp; 35 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;37 St &amp; 24 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;4 Ave &amp; 2 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;4 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;40 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;40 Ave &amp; Crescent St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;43 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;44 Dr &amp; 21 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;44 Dr &amp; Jackson Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;45 Rd &amp; 11 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;46 Ave &amp; 5 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;47 Ave &amp; 31 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;47 Ave &amp; Skillman Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;48 Ave &amp; 30 Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;48 Ave &amp; 5 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;49 Ave &amp; 21 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; 3 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; E 103 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; E 126 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; E 29 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; E 63 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; E 73 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; E 78 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; E 88 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 Ave &amp; E 93 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 St &amp; 51 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;5 St &amp; Market St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;6 Ave &amp; 12 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;6 Ave &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;6 Ave &amp; Canal St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;6 Ave &amp; Spring St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;6 Ave &amp; W 33 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;6 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;7 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;7 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;8 Ave &amp; W 31 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;8 Ave &amp; W 33 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;8 Ave &amp; W 52 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;8D Mobile 01&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;8D OPS 01&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;8D QC Station 01&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;9 Ave &amp; W 22 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;9 Ave &amp; W 28 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;9 Ave &amp; W 45 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;9 St &amp; 44 Rd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Adelphi St &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Albany Ave &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Allen St &amp; Hester St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Allen St &amp; Rivington St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Allen St &amp; Stanton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 119 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 125 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 66 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 73 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 79 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 82 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Apache&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Astoria Park S &amp; Shore Blvd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Atlantic Ave &amp; Fort Greene Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Atlantic Ave &amp; Furman St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Avenue D &amp; E 12 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Avenue D &amp; E 3 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Avenue D &amp; E 8 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Baltic St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bank St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bank St &amp; Washington St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Banker St &amp; Meserole Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Barclay St &amp; Church St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Barrow St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bayard St &amp; Baxter St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bayard St &amp; Leonard St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bedford Ave &amp; Bergen St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bedford Ave &amp; Nassau Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bedford Ave &amp; S 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bergen St &amp; Flatbush Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bergen St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bergen St &amp; Vanderbilt Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Berkeley Pl &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Berkeley Pl &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Berry St &amp; N 8 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bialystoker Pl &amp; Delancey St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Boerum St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bond St &amp; Bergen St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bond St &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bressler&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broad St &amp; Bridge St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; 12 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; Battery Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; Berry St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; E 14 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; E 22 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; Moylan Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; Roebling St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 122 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 25 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 29 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 32 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 36 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 37 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 38 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 41 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 49 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 51 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 53 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 56 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 58 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; W 60 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Broadway &amp; Whipple St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Brooklyn Bridge Park - Pier 2&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bus Slip &amp; State St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Bushwick Ave &amp; Powers St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Butler St &amp; Court St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cadman Plaza E &amp; Red Cross Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cadman Plaza E &amp; Tillary St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cadman Plaza West &amp; Montague St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cambridge Pl &amp; Gates Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Canal St &amp; Rutgers St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carlton Ave &amp; Dean St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carlton Ave &amp; Flushing Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carlton Ave &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carmine St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carroll St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carroll St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carroll St &amp; Bond St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carroll St &amp; Columbia St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carroll St &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carroll St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Carroll St &amp; Washington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cathedral Pkwy &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Catherine St &amp; Monroe St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Center Blvd &amp; 48 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Center Blvd &amp; Borden Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park S &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park W &amp; W 96 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park West &amp; W 100 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park West &amp; W 102 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park West &amp; W 68 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park West &amp; W 72 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park West &amp; W 76 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Central Park West &amp; W 85 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Centre St &amp; Chambers St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Centre St &amp; Worth St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cherry St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clark St &amp; Henry St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Classon Ave &amp; St Marks Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clermont Ave &amp; Lafayette Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clermont Ave &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cleveland Pl &amp; Spring St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cliff St &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cliff St &amp; Fulton St_1&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clinton Ave &amp; Flushing Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clinton Ave &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clinton St &amp; 4 Place&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clinton St &amp; Centre St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clinton St &amp; Grand St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clinton St &amp; Joralemon St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clinton St &amp; Tillary St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Clinton St &amp; Union St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Coffey St &amp; Conover St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbia Heights &amp; Cranberry St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbia St &amp; Degraw St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbia St &amp; Kane St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbia St &amp; Lorraine St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbia St &amp; Rivington St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbia St &amp; W 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbus Ave &amp; W 103 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbus Ave &amp; W 72 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Columbus Ave &amp; W 95 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Commerce St &amp; Van Brunt St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Concord St &amp; Bridge St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Congress St &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cooper Square &amp; Astor Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Court St &amp; Nelson St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Court St &amp; State St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Crescent St &amp; 30 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Crescent St &amp; 34 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Crescent St &amp; 35 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Crescent St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Crescent St &amp; Ditmars Blvd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Crown St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Cumberland St &amp; Lafayette Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Dean St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Dean St &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Dean St &amp; Hoyt St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Degraw St &amp; Hoyt St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Degraw St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;DeKalb Ave &amp; Hudson Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;DeKalb Ave &amp; S Portland Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;DeKalb Ave &amp; Skillman St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Devoe St &amp; Lorimer St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Ditmars Blvd &amp; 19 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Division Av &amp; Hooper St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Division Ave &amp; Hooper St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Division Ave &amp; Marcy Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Division St &amp; Bowery&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Douglass St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Douglass St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Driggs Ave &amp; Lorimer St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Driggs Ave &amp; N 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Driggs Ave &amp; N Henry St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Duane St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Duffield St &amp; Willoughby St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Dwight St &amp; Van Dyke St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 10 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 10 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 102 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 102 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 103 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 106 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 106 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 106 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 109 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 11 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 11 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 11 St &amp; Avenue B&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 11 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 110 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 114 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 115 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 115 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 116 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 118 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 118 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 118 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 118 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 12 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 12 St &amp; Avenue B&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 123 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 128 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 13 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 15 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 16 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 16 St &amp; Irving Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 17 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 19 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 2 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 2 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 2 St &amp; Avenue B&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 2 St &amp; Avenue C&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 20 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 20 St &amp; FDR Drive&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 20 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 23 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 24 St &amp; Park Ave S&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 25 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 25 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 27 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 3 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 30 St &amp; Park Ave S&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 31 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 32 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 33 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 33 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 33 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 35 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 39 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 39 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 4 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 41 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 41 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 43 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 44 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 45 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 47 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 47 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 47 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 48 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 48 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 5 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 5 St &amp; Avenue C&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 51 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 51 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 52 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 53 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 53 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 55 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 55 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 55 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 58 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 58 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 58 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 59 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 6 St &amp; Avenue B&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 6 St &amp; Avenue D&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 60 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 65 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 66 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 67 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 68 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 68 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 7 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 71 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 71 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 72 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 72 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 74 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 75 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 76 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 76 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 77 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 78 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 80 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 81 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 81 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 81 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 81 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 82 St &amp; East End Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 84 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 84 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 85 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 85 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 87 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 88 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 88 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 89 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 89 St &amp; York Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 9 St &amp; Avenue C&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 91 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 91 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 93 St &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 95 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 97 St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 97 St &amp; Madison Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 98 St &amp; Lexington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;E 98 St &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;East End Ave &amp; E 86 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Eastern Pkwy &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Eastern Pkwy &amp; Washington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Eckford St &amp; Engert Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Emerson Pl &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;FDR Drive &amp; E 35 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Flushing Ave &amp; Vanderbilt Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Forsyth St &amp; Broome St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Forsyth St &amp; Canal St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Franklin Ave &amp; Empire Blvd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Franklin Ave &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Franklin Ave &amp; St Marks Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Franklin St &amp; Dupont St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Franklin St &amp; W Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 112 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 115 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 117 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 129 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Front St &amp; Gold St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Front St &amp; Maiden Ln&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Front St &amp; Washington St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Frost St &amp; Meeker St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Fulton St &amp; Adams St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Fulton St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Fulton St &amp; Clermont Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Fulton St &amp; Grand Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Fulton St &amp; Rockwell Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Fulton St &amp; Utica Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Fulton St &amp; Waverly Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Fulton St &amp; William St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Gansevoort St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Garfield Pl &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Gold St &amp; Frankfort St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Graham Ave &amp; Conselyea St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Graham Ave &amp; Grand St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Graham Ave &amp; Herbert St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Graham Ave &amp; Withers St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Grand Army Plaza &amp; Central Park S&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Grand Army Plaza &amp; Plaza St West&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Grand Ave &amp; Bergen St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Grand St &amp; Elizabeth St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Grand St &amp; Greene St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Grand St &amp; Havemeyer St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Great Jones St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Greene Ave &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Greene Ave &amp; Throop Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Greenpoint Ave &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Greenwich Ave &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Greenwich Ave &amp; Charles St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Greenwich St &amp; W Houston St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Halsey St &amp; Tompkins Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Hancock St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Hanson Pl &amp; Ashland Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Harrison St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Henry St &amp; Atlantic Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Henry St &amp; Bay St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Henry St &amp; Degraw St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Henry St &amp; Grand St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Henry St &amp; Poplar St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Hicks St &amp; Montague St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Hope St &amp; Union Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Howard St &amp; Centre St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Hoyt St &amp; Warren St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Hudson St &amp; Reade St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Humboldt St &amp; Varet St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Huron St &amp; Franklin St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;India St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;India St &amp; West St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Jackson Ave &amp; 46 Rd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Jackson St &amp; Leonard St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Jay St &amp; Tech Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Jay St &amp; York St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;John St &amp; William St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Johnson St &amp; Gold St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Kane St &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Kent Ave &amp; N 7 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Kent Ave &amp; S 11 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Kingston Ave &amp; Herkimer St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Kosciuszko St &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Kosciuszko St &amp; Tompkins Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lafayette Ave &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lafayette Ave &amp; Fort Greene Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lafayette Ave &amp; St James Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lafayette St &amp; E 8 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lafayette St &amp; Jersey St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;LaGuardia Pl &amp; W 3 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Laight St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lawrence St &amp; Willoughby St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lefferts Pl &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lenox Ave &amp; W 111 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lenox Ave &amp; W 115 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lenox Ave &amp; W 117 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lenox Ave &amp; W 126 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lenox Ave &amp; W 130 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Leonard St &amp; Boerum St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Leonard St &amp; Church St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Leonard St &amp; Maujer St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Leonard St &amp; Nassau Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lewis Ave &amp; Decatur St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lewis Ave &amp; Kosciuszko St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lewis Ave &amp; Madison St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lexington Ave &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lexington Ave &amp; E 111 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lexington Ave &amp; E 120 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lexington Ave &amp; E 127 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lexington Ave &amp; E 24 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lexington Ave &amp; E 29 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lexington Ave &amp; E 63 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Liberty St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lincoln Pl &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lispenard St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Little West St &amp; 1 Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Lorimer St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;MacDougal St &amp; Prince St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;MacDougal St &amp; Washington Sq&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Macon St &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Madison Ave &amp; E 120 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Madison Ave &amp; E 82 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Madison Ave &amp; E 99 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Madison St &amp; Clinton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Madison St &amp; Montgomery St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Maiden Ln &amp; Pearl St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Marcus Garvey Blvd &amp; Macon St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Marcy Ave &amp; Lafayette Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Market St &amp; Cherry St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;McGuinness Blvd &amp; Eagle St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;McKibbin St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Mercer St &amp; Bleecker St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Mercer St &amp; Spring St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Meserole Ave &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Metropolitan Ave &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Metropolitan Ave &amp; Meeker Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Milton St &amp; Franklin St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Monroe St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Monroe St &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Monroe St &amp; Tompkins Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Montgomery St &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Montgomery St &amp; Franklin Ave OLD&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Montrose Ave &amp; Bushwick Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Morningside Ave &amp; W 123 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Morningside Dr &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Mott St &amp; Prince St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Mt Morris Park W &amp; W 120 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Murray St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Murray St &amp; West St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Myrtle Ave &amp; Lewis Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Myrtle Ave &amp; Marcy Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Myrtle Ave &amp; St Edwards St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;N 11 St &amp; Kent Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;N 11 St &amp; Wythe Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;N 12 St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;N 15 St &amp; Wythe Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;N 6 St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;N 8 St &amp; Driggs Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Nassau Ave &amp; Newell St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Nassau Ave &amp; Russell St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Nassau St &amp; Navy St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Newton Rd &amp; 44 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Newtown Ave &amp; 23 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Norfolk St &amp; Broome St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;North Moore St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Nostrand Ave &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;NYCBS DEPOT - DELANCEY&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;NYCBS Depot - GOW&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;NYCBS Depot - PIT&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;NYCBS Depot - RIS&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;NYCBS Depot - STY - Garage 4&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;NYCBS Depot BAL - DYR&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Old Fulton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Old Slip &amp; Front St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pacific St &amp; Classon Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pacific St &amp; Nevins St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Park Ave &amp; E 124 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Park Ave &amp; Marcus Garvey Blvd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Park Ave &amp; St Edwards St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Park Pl &amp; Church St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Park Pl &amp; Franklin Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Park Pl &amp; Vanderbilt Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pearl St &amp; Anchorage Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pearl St &amp; Hanover Square&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Peck Slip &amp; Front St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Perry St &amp; Bleecker St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pershing Square North&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pershing Square South&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Picnic Point&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pier 40 - Hudson River Park&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pike St &amp; E Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pike St &amp; Monroe St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pioneer St &amp; Richards St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pioneer St &amp; Van Brunt St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pitt St &amp; Stanton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Plaza St West &amp; Flatbush Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pleasant Ave &amp; E 116 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pleasant Ave &amp; E 120 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;President St &amp; Henry St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Prospect Park - 5 Year Anniversary Celebration&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Prospect Park West &amp; 8 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Prospect Pl &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Prospect Pl &amp; Underhill Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Prototype Lab Motivate Headquarters&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Putnam Ave &amp; Nostrand Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Putnam Ave &amp; Throop Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Queens Plaza North &amp; Crescent St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Railroad Ave &amp; Kay Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Reade St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Richards St &amp; Delavan St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Richardson St &amp; N Henry St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Riverside Blvd &amp; W 67 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Riverside Dr &amp; W 104 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Riverside Dr &amp; W 72 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Riverside Dr &amp; W 78 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Riverside Dr &amp; W 82 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Riverside Dr &amp; W 91 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Rivington St &amp; Chrystie St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Rivington St &amp; Ridge St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Roebling St &amp; N 4 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Rogers Ave &amp; Sterling St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;S 3 St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;S 4 St &amp; Rodney St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;S 4 St &amp; Wythe Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;S 5 Pl &amp; S 5 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;S Portland Ave &amp; Atlantic Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;S Portland Ave &amp; Hanson Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Sands St &amp; Navy St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Schermerhorn St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Schermerhorn St &amp; Bond St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Schermerhorn St &amp; Court St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Scholes St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Sigourney St &amp; Columbia St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Smart Cities Conference&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Smith St &amp; 3 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Smith St &amp; 9 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Soissons Landing&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;South End Ave &amp; Liberty St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;South St &amp; Gouverneur Ln&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;South St &amp; Whitehall St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;St James Pl &amp; Oliver St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;St James Pl &amp; Pearl St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;St Johns Pl &amp; Washington Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;St Marks Pl &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;St Marks Pl &amp; 2 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;St Nicholas Ave &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;St. Nicholas Ave &amp; W 126 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Stagg St &amp; Union Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Stanton St &amp; Chrystie St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Stanton St &amp; Mangin St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;State St &amp; Smith St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Steinway St &amp; 23 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Steinway St &amp; 28 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Sterling Pl &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Sterling Pl &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Sterling St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Suffolk St &amp; Stanton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Sullivan Pl &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Sullivan St &amp; Washington Sq&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Thompson St &amp; Bleecker St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Throop Ave &amp; Myrtle Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Tompkins Ave &amp; Hopkins St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Underhill Ave &amp; Lincoln Pl&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Underhill Ave &amp; Pacific St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Union Ave &amp; Jackson St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Union Ave &amp; N 12 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Union Ave &amp; Wallabout St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Union St &amp; 4 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Union St &amp; Bedford Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Union St &amp; Nevins St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;University Pl &amp; E 14 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;University Pl &amp; E 8 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Van Brunt St &amp; Van Dyke St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Van Brunt St &amp; Wolcott St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Van Dyke St &amp; Van Brunt St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Vernon Blvd &amp; 10 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Vernon Blvd &amp; 30 Rd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Vernon Blvd &amp; 31 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Vernon Blvd &amp; 41 Rd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Vernon Blvd &amp; 47 Rd&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Vernon Blvd &amp; 50 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Verona Pl &amp; Fulton St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Vesey Pl &amp; River Terrace&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 100 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 100 St &amp; Manhattan Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 104 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 104 St &amp; Amsterdam Ave - 1&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 106 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 106 St &amp; Central Park West&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 107 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 11 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 110 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 113 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 116 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 116 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 12 St &amp; W 4 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 120 St &amp; Claremont Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 129 St &amp; Convent Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 13 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 13 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 13 St &amp; Hudson St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 15 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 15 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 15 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 16 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 16 St &amp; The High Line&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 17 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 18 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 18 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 20 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 20 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 20 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 22 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 22 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 24 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 25 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 26 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 26 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 27 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 27 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 31 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 33 St &amp; 7 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 34 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 35 St &amp; Dyer Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 36 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 37 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 37 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 38 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 4 St &amp; 7 Ave S&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 41 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 42 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 42 St &amp; Dyer Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 43 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 43 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 44 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 45 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 45 St &amp; 6 Ave (OLD)&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 45 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 46 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 47 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 49 St &amp; 8 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 50 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 52 St &amp; 11 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 52 St &amp; 5 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 52 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 52 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 53 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 54 St &amp; 9 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 55 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 56 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 59 St &amp; 10 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 63 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 64 St &amp; Thelonious Monk Circle&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 64 St &amp; West End Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 67 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 70 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 74 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 76 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 78 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 82 St &amp; Central Park West&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 84 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 84 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 87 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 88 St &amp; West End Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 89 St &amp; Columbus Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 90 St &amp; Amsterdam Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 92 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W 95 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;W Broadway &amp; Spring Street&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Warren St &amp; Church St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Warren St &amp; Court St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Washington Ave &amp; Greene Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Washington Ave &amp; Park Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Washington Park&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Washington Pl &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Washington Pl &amp; Broadway&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Washington St &amp; Gansevoort St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Water - Whitehall Plaza&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Watts St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;West Drive &amp; Prospect Park West&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;West End Ave &amp; W 107 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;West End Ave &amp; W 94 St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;West St &amp; Chambers St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;West Thames St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;William St &amp; Pine St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Willoughby Ave &amp; Hall St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Willoughby Ave &amp; Tompkins Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Willoughby Ave &amp; Walworth St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Willoughby St &amp; Fleet St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Wolcott St &amp; Dwight St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Wyckoff St &amp; 3 Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Wyckoff St &amp; Bond St&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Wythe Ave &amp; Metropolitan Ave&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;Yankee Ferry Terminal&quot;' />
              <groupfilter function='member' level='[attr:start station name:nk]' member='&quot;York St &amp; Jay St&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[attr:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:start station longitude:qk]' field-type='quantitative' max='-8226883.2334762178' min='-8250090.1334943622' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:start station latitude:qk]' field-type='quantitative' max='4992126.8826484336' min='4961328.4901753077' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' max='100000' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#a9cbc3</color>
                <color>#7fbeae</color>
                <color>#58b19a</color>
                <color>#36a488</color>
                <color>#199777</color>
                <color>#008a67</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='Zip Code Boundaries-bg' value='true' />
            <format attr='enabled' id='Zip Code Boundaries' value='true' />
            <format attr='enabled' id='Zip Code Labels' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' />
              <size column='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' />
              <tooltip column='[federated.0fb5izm06oekec1do4cr21267vg4].[attr:start station name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[none:start station latitude:qk]</rows>
        <cols>[federated.0fb5izm06oekec1do4cr21267vg4].[none:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{AE0BA6CE-9056-4127-9A58-4424A07CFE16}' />
    </worksheet>
    <worksheet name='Rides by Starting Hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column datatype='string' name='[Month]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;April&quot;' value='Apr' />
                <alias key='&quot;August&quot;' value='Aug' />
                <alias key='&quot;December&quot;' value='Dec' />
                <alias key='&quot;February&quot;' value='Feb' />
                <alias key='&quot;January&quot;' value='Jan' />
                <alias key='&quot;July&quot;' value='Jul' />
                <alias key='&quot;June&quot;' value='Jun' />
                <alias key='&quot;March&quot;' value='Mar' />
                <alias key='&quot;November&quot;' value='Nov' />
                <alias key='&quot;October&quot;' value='Oct' />
                <alias key='&quot;September&quot;' value='Sep' />
              </aliases>
            </column>
            <column-instance column='[Month]' derivation='Count' name='[cnt:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:Month:qk]</rows>
        <cols>[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]</cols>
      </table>
      <simple-id uuid='{7C2D40A3-FBC0-461D-8078-BBE86BC65090}' />
    </worksheet>
    <worksheet name='Rides per Gender'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column datatype='string' name='[Gender Labels]' role='dimension' type='nominal' />
            <column datatype='string' name='[Generation]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Baby Boomer (1946 - 1964)&quot;' value='Boomer (1946-1964)' />
                <alias key='&quot;G.I. Generation (1927 and earlier)&quot;' value='G.I. (1927 &amp; earlier)' />
                <alias key='&quot;Generation X (1965 - 1980)&quot;' value='Gen-X (1965-1980)' />
                <alias key='&quot;Generation Z (1997 - 2002)&quot;' value='Gen-Z (1997-2002)' />
                <alias key='&quot;Millennial (1981 - 1996)&quot;' value='Millennial (1981-1996)' />
                <alias key='&quot;Silent Generation (1928 - 1945)&quot;' value='Silent (1928-1945)' />
              </aliases>
            </column>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='Count' name='[cnt:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender Labels]' derivation='None' name='[none:Gender Labels:nk]' pivot='key' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;G.I. Generation (1927 and earlier)&quot;</bucket>
              <bucket>&quot;Silent Generation (1928 - 1945)&quot;</bucket>
              <bucket>&quot;Baby Boomer (1946 - 1964)&quot;</bucket>
              <bucket>&quot;Generation X (1965 - 1980)&quot;</bucket>
              <bucket>&quot;Millennial (1981 - 1996)&quot;</bucket>
              <bucket>&quot;Generation Z (1997 - 2002)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='105' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' value='false' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='bold' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' value='bold' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial Nova' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Arial Nova' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]</rows>
        <cols>([federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk] / [federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk])</cols>
      </table>
      <simple-id uuid='{AD3B2598-CE9E-4B4A-B6E9-31A2EA4486BA}' />
    </worksheet>
    <worksheet name='Rides per Generation'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Arial Nova'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2018_Bike_Rides_Union_Again' name='federated.0fb5izm06oekec1do4cr21267vg4' />
          </datasources>
          <datasource-dependencies datasource='federated.0fb5izm06oekec1do4cr21267vg4'>
            <column datatype='string' name='[Gender Labels]' role='dimension' type='nominal' />
            <column datatype='string' name='[Generation]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Baby Boomer (1946 - 1964)&quot;' value='Boomer (1946-1964)' />
                <alias key='&quot;G.I. Generation (1927 and earlier)&quot;' value='G.I. (1927 &amp; earlier)' />
                <alias key='&quot;Generation X (1965 - 1980)&quot;' value='Gen-X (1965-1980)' />
                <alias key='&quot;Generation Z (1997 - 2002)&quot;' value='Gen-Z (1997-2002)' />
                <alias key='&quot;Millennial (1981 - 1996)&quot;' value='Millennial (1981-1996)' />
                <alias key='&quot;Silent Generation (1928 - 1945)&quot;' value='Silent (1928-1945)' />
              </aliases>
            </column>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='Count' name='[cnt:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender Labels]' derivation='None' name='[none:Gender Labels:nk]' pivot='key' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Gender Labels:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;G.I. Generation (1927 and earlier)&quot;</bucket>
              <bucket>&quot;Silent Generation (1928 - 1945)&quot;</bucket>
              <bucket>&quot;Baby Boomer (1946 - 1964)&quot;</bucket>
              <bucket>&quot;Generation X (1965 - 1980)&quot;</bucket>
              <bucket>&quot;Millennial (1981 - 1996)&quot;</bucket>
              <bucket>&quot;Generation Z (1997 - 2002)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='false' />
            <format attr='font-family' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='Arial Nova' />
            <format attr='font-size' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='8' />
            <format attr='font-weight' field='[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]' value='bold' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='200' />
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Arial Nova' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Arial Nova' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' value='Generation' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]</rows>
        <cols>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</cols>
      </table>
      <simple-id uuid='{0DE08386-1D91-4D54-89A4-B5877976BA77}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Bike Presentation and Analysis' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ff002e' fontname='Arial Nova' fontsize='24'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='1' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4046' id='3' w='98426' x='787' y='830' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='6535' id='4' paired-zone-id='5' removable='false' w='98426' x='787' y='4876' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='87759' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='11411'>
              <flipboard active-id='5' nav-type='dot' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Representation by Gender' captured-sheet='Dashboard 1 - Gender' id='1' />
                  <story-point caption='Average Trip Length' captured-sheet='Dashboard 2 - Trip Length' id='2' />
                  <story-point caption='Total Rides by Month and Hour' captured-sheet='Dashboard 3 - Popularity by Month' id='3' />
                  <story-point captured-sheet='Dashboard 4' id='4'>
                    <capturedDeltas>
                      <dashboard name='Dashboard 4'>
                        <zone id='6'>
                          <formatted-text>
                            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='10'>This map gauges the most popular starting and ending stations, with areas broken down by zip code. Large, green stations have more instances, while small, red stations have fewer instances. For both starting and ending stations, those located in southern Manhattan were by far more most commonly represented, likely because Manhattan is so densely populated despite similar spread of stations as other zip codes and therefore has more customers per station. Additionally, driving a car in southern Manhattan is a serious chore due to the frightful traffic, making bicycles a more attractive alternative for transportation compared to less busy areas such as Queens and Bronx.</run>
                          </formatted-text>
                        </zone>
                      </dashboard>
                      <worksheet name='Number of Rides by Starting Station'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:start station latitude:qk]' field-type='quantitative' max='4981517.0874150498' min='4963908.9705315838' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0fb5izm06oekec1do4cr21267vg4].[none:start station longitude:qk]' field-type='quantitative' max='-8229545.0693678735' min='-8242812.9634106876' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Dashboard 5' id='5' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{394C5C71-2741-40BA-B996-B701A876C1D1}' />
    </dashboard>
    <dashboard name='Dashboard 1 - Gender'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='86125' id='7' param='horz' w='98400' x='800' y='12875'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='86125' id='5' w='98400' x='800' y='12875'>
              <zone h='54395' id='3' name='Rides per Gender' w='90100' x='800' y='12875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='31730' id='9' name='Breakdown of Rides by Gender' w='98400' x='800' y='67270'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='54395' id='6' is-fixed='true' param='vert' w='8300' x='90900' y='12875'>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='73' h='10125' id='8' is-fixed='true' name='Rides per Gender' pane-specification-id='0' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' show-title='false' w='8300' x='90900' y='12875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='7875' id='10' w='98400' x='800' y='5000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='10'>Here, we see the breakdown of bike riders by gender. Consistently, males are much more represented than females, although the gap is smaller for younger generations. It is likely that bike riding has traditionally been more popular as a male sport, though younger generations have pushed for more equal representation.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='4000' id='11' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='18' underline='true'>Representation by Gender</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='23' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='22' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='4000' id='11' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='18' underline='true'>Representation by Gender</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='7875' id='10' w='98400' x='800' y='5000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='10'>Here, we see the breakdown of bike riders by gender. Consistently, males are much more represented than females, although the gap is smaller for younger generations. It is likely that bike riding has traditionally been more popular as a male sport, though younger generations have pushed for more equal representation.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54395' id='3' is-fixed='true' name='Rides per Gender' w='90100' x='800' y='12875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='73' h='10125' id='8' name='Rides per Gender' pane-specification-id='0' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' show-title='false' w='8300' x='90900' y='12875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='246' h='31730' id='9' is-fixed='true' name='Breakdown of Rides by Gender' w='98400' x='800' y='67270'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{36A1E328-9CC0-49C5-B261-0E50F854AE8E}' />
    </dashboard>
    <dashboard name='Dashboard 2 - Trip Length'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='94000' id='44' param='horz' w='98400' x='800' y='5000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='94000' id='41' param='horz' w='98400' x='800' y='5000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='94000' id='39' w='98400' x='800' y='5000'>
                <zone h='43222' id='21' name='Average Trip Length by Month' w='49200' x='800' y='12555'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43282' id='12' name='Average Trip Length by Starting Hour (Gender)' w='49200' x='50000' y='55718'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43163' id='14' name='Average Trip Length (Minutes) by Generation' w='49200' x='50000' y='12555'>
                  <layout-cache cell-count-w='12' non-cell-size-w='53' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='7555' id='37' w='98400' x='800' y='5000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='10'>In this dashboard, we see how average trip length changes by various factors. The striking pattern observed here is that, regardless of age, females tend to have longer trips than males, G.I. Generation notwithstanding. This is likely due to males generally being more physically fit to go on long rides, as well as females being more adept at endurance than males.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43223' id='42' name='Average Trip Length by Month (Gender)' w='49200' x='800' y='55777'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='4000' id='49' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='18' underline='true'>Average Trip Length</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='59' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='58' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='4000' id='49' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='18' underline='true'>Average Trip Length</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='7555' id='37' w='98400' x='800' y='5000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='10'>In this dashboard, we see how average trip length changes by various factors. The striking pattern observed here is that, regardless of age, females tend to have longer trips than males, G.I. Generation notwithstanding. This is likely due to males generally being more physically fit to go on long rides, as well as females being more adept at endurance than males.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43222' id='21' is-fixed='true' name='Average Trip Length by Month' w='49200' x='800' y='12555'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43163' id='14' is-fixed='true' name='Average Trip Length (Minutes) by Generation' w='49200' x='50000' y='12555'>
                  <layout-cache cell-count-w='12' non-cell-size-w='53' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43282' id='12' is-fixed='true' name='Average Trip Length by Starting Hour (Gender)' w='49200' x='50000' y='55718'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43223' id='42' is-fixed='true' name='Average Trip Length by Month (Gender)' w='49200' x='800' y='55777'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7826DC81-A1BF-451E-B1A6-BF9B85CA214A}' />
    </dashboard>
    <dashboard name='Dashboard 3 - Popularity by Month'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='94000' id='46' param='horz' w='98400' x='800' y='5000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='94000' id='39' param='horz' w='98400' x='800' y='5000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='94000' id='35' param='horz' w='98400' x='800' y='5000'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='94000' id='33' w='98400' x='800' y='5000'>
                  <zone h='25521' id='12' name='Bike Usage by Month' w='49200' x='800' y='20125'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='25521' id='30' name='Bike Usage by Hour' w='49200' x='50000' y='20125'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='15125' id='31' w='98400' x='800' y='5000'>
                    <formatted-text>
                      <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='10'>This dashboard illustrates how commonly bikes are used depending on month and time of day. </run>
                      <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='10' italic='true'>The month and hour charts are split into two because Boomers, Gen-X, and Millennials are significantly more prevalent than the other three generations</run>
                      <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='10'>. Regardless of generation, bike usage peaks from the months of May through October, while the most popular hours are from 7 to 9, as well as 16 to 20. In the former case, New York City weather is warmer and less icy, thus being more conducive to bike rides. In the latter case, the most popular hours are those that typically fall around rush hour, with specific peaks at 8:00 AM and 6:00 PM, implying that a large number of people use bicycles to commute to work. This would also explain why Generation Z, Silents, and G.I.&apos;s do not fall in the same pattern, as they are less likely to be part of the workforce; Z&apos;ers in particular are often college students who sleep in, hence their exception to the rule. Additionally, the rush hour spike is more pronounced for males than females, as males are likelier to be part of the workforce across all ages.</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='27625' id='32' name='Bike Usage by Month (Gender)' w='49200' x='800' y='71375'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='27625' id='37' name='Bike Usage by Hour (Gender)' w='49200' x='50000' y='71375'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='17142' id='43' name='Bike Usage by Month (2)' w='49200' x='800' y='49483'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='17142' id='44' name='Bike Usage by Hour (2)' w='49200' x='50000' y='49483'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='28' h='4750' id='48' is-fixed='true' name='Bike Usage by Month (2)' pane-specification-id='0' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' show-title='false' w='98400' x='800' y='66625'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='28' h='3837' id='47' is-fixed='true' name='Bike Usage by Month' pane-specification-id='0' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' show-title='false' w='98400' x='800' y='45646'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='4000' id='51' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='18' underline='true'>Total Rides by Month and Hour</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='61' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='60' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='4000' id='51' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='18' underline='true'>Total Rides by Month and Hour</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='15125' id='31' w='98400' x='800' y='5000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='10'>This dashboard illustrates how commonly bikes are used depending on month and time of day. </run>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='10' italic='true'>The month and hour charts are split into two because Boomers, Gen-X, and Millennials are significantly more prevalent than the other three generations</run>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='10'>. Regardless of generation, bike usage peaks from the months of May through October, while the most popular hours are from 7 to 9, as well as 16 to 20. In the former case, New York City weather is warmer and less icy, thus being more conducive to bike rides. In the latter case, the most popular hours are those that typically fall around rush hour, with specific peaks at 8:00 AM and 6:00 PM, implying that a large number of people use bicycles to commute to work. This would also explain why Generation Z, Silents, and G.I.&apos;s do not fall in the same pattern, as they are less likely to be part of the workforce; Z&apos;ers in particular are often college students who sleep in, hence their exception to the rule. Additionally, the rush hour spike is more pronounced for males than females, as males are likelier to be part of the workforce across all ages.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='196' h='25521' id='12' is-fixed='true' name='Bike Usage by Month' w='49200' x='800' y='20125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='28' h='3837' id='47' name='Bike Usage by Month' pane-specification-id='0' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' show-title='false' w='98400' x='800' y='45646'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='196' h='25521' id='30' is-fixed='true' name='Bike Usage by Hour' w='49200' x='50000' y='20125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='129' h='17142' id='43' is-fixed='true' name='Bike Usage by Month (2)' w='49200' x='800' y='49483'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='28' h='4750' id='48' name='Bike Usage by Month (2)' pane-specification-id='0' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' show-title='false' w='98400' x='800' y='66625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='129' h='17142' id='44' is-fixed='true' name='Bike Usage by Hour (2)' w='49200' x='50000' y='49483'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='213' h='27625' id='32' is-fixed='true' name='Bike Usage by Month (Gender)' w='49200' x='800' y='71375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='213' h='27625' id='37' is-fixed='true' name='Bike Usage by Hour (Gender)' w='49200' x='50000' y='71375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{329D2FF7-9184-4956-BAAF-8F61A45E8C37}' />
    </dashboard>
    <dashboard name='Dashboard 4'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='4000' id='5' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='18' underline='true'>Most Popular Stations</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='11500' id='6' w='98400' x='800' y='5000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='10'>This map gauges the most popular starting and ending stations, with areas broken down by zip code. Large, green stations have more instances, while small, red stations have fewer instances. For both starting and ending stations, those located in southern Manhattan were by far more most commonly represented, likely because Manhattan is so densely populated despite similar spread of stations as other zip codes and therefore has more customers per station. Additionally, driving a car in southern Manhattan is a serious chore due to the frightful traffic, making bicycles a more attractive alternative for transportation compared to less busy areas such as Queens and Bronx.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='82500' id='7' name='Number of Rides by Starting Station' w='49200' x='800' y='16500'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='82500' id='8' name='Number of Rides by Ending Station' w='49200' x='50000' y='16500'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='16' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='15' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='4000' id='5' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='18' underline='true'>Most Popular Stations</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='11500' id='6' w='98400' x='800' y='5000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='10'>This map gauges the most popular starting and ending stations, with areas broken down by zip code. Large, green stations have more instances, while small, red stations have fewer instances. For both starting and ending stations, those located in southern Manhattan were by far more most commonly represented, likely because Manhattan is so densely populated despite similar spread of stations as other zip codes and therefore has more customers per station. Additionally, driving a car in southern Manhattan is a serious chore due to the frightful traffic, making bicycles a more attractive alternative for transportation compared to less busy areas such as Queens and Bronx.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='82500' id='7' is-fixed='true' name='Number of Rides by Starting Station' w='49200' x='800' y='16500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='82500' id='8' is-fixed='true' name='Number of Rides by Ending Station' w='49200' x='50000' y='16500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7F2C295A-B78A-400D-B475-B3179D6B2F0C}' />
    </dashboard>
    <dashboard name='Dashboard 5'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone h='87875' id='3' name='Average Trip Length by Station' show-title='false' w='98400' x='800' y='11125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='4000' id='5' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='18' underline='true'>Average Trip Length by Station</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='6125' id='6' w='98400' x='800' y='5000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='10'>In this map, large red stations have longer average trips, while small blue stations have shorter average trips. In general, located on the far outskirts of New York City tend to have longer trips, as many people who live there commute towards the busting downtown in the center of the city.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='14' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='13' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='4000' id='5' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='18' underline='true'>Average Trip Length by Station</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='6125' id='6' w='98400' x='800' y='5000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Arial Nova' fontsize='10'>In this map, large red stations have longer average trips, while small blue stations have shorter average trips. In general, located on the far outskirts of New York City tend to have longer trips, as many people who live there commute towards the busting downtown in the center of the city.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='87875' id='3' is-fixed='true' name='Average Trip Length by Station' show-title='false' w='98400' x='800' y='11125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B684F152-FA90-40FB-B4F0-77C163ED5AF5}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Rides per Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B795BBF7-BF65-4665-B0E5-0AD98DDFF710}' />
    </window>
    <window class='worksheet' name='Rides per Generation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75841108-7372-41A6-B40A-DA2C0664FDF9}' />
    </window>
    <window class='worksheet' name='Breakdown of Rides by Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CCDBEB3-0867-43E3-8022-2E35C2BCEE18}' />
    </window>
    <window class='worksheet' name='Average Trip Length (Minutes) by Generation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4C37FD2-1A02-47E5-9497-2BA7C5976ACA}' />
    </window>
    <window class='worksheet' name='Bike Usage by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38483BC8-8E5A-40AE-B278-2F90AD57D579}' />
    </window>
    <window class='worksheet' name='Bike Usage by Month (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D691A3D9-67ED-4339-8793-440572963DE0}' />
    </window>
    <window class='worksheet' name='Bike Usage by Month (Gender)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B97D84DE-5367-43CC-B9A2-A1A76D4ECBB5}' />
    </window>
    <window class='worksheet' name='Bike Usage by Hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{31575304-F05E-47B7-B223-61A24BD188CD}' />
    </window>
    <window class='worksheet' name='Bike Usage by Hour (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{195241CC-E92B-46D0-94A5-E92643BC6DE2}' />
    </window>
    <window class='worksheet' name='Bike Usage by Hour (Gender)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C1022FB0-3500-4277-9A64-CF886D3B8EF9}' />
    </window>
    <window class='worksheet' name='Rides by Starting Hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[hr:starttime:ok]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCE73C4F-F1AC-407C-9715-C4BC239205D5}' />
    </window>
    <window class='worksheet' name='Average Trip Length by Starting Hour (Gender)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{794EF5A1-CE1A-4F83-AC5A-6418B93CEFDE}' />
    </window>
    <window class='worksheet' name='Average Trip Length by Month (Gender)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4362E1BE-EF99-4EE4-832A-6AB3E4D5A85D}' />
    </window>
    <window class='worksheet' name='Average Trip Length by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{44F8A070-A381-406B-A509-8C0591C5D1C5}' />
    </window>
    <window class='worksheet' name='Average Trip Length by Starting Hour (Generation)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{85009AAB-E99A-4144-AD04-4AD7BDA9607D}' />
    </window>
    <window class='worksheet' name='Average Trip Length by Station'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:start station name:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{9853953F-1886-454A-8E89-2555052518C4}' />
    </window>
    <window class='worksheet' name='Number of Rides by Starting Station'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B32170F9-76AF-47C9-90AE-1E13AAF13283}' />
    </window>
    <window class='worksheet' name='Number of Rides by Ending Station'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[avg:Trip Duration (Minutes):qk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[cnt:bikeid:qk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Month:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:end station name:nk]</field>
            <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B7B7B66F-4E49-40E7-90E8-8467D11D9C09}' />
    </window>
    <window class='dashboard' name='Dashboard 1 - Gender'>
      <viewpoints>
        <viewpoint name='Breakdown of Rides by Gender' />
        <viewpoint name='Rides per Gender'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Gender Labels:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{54C0DF3C-E9DD-45B3-8F24-653A5DBA4733}' />
    </window>
    <window class='dashboard' name='Dashboard 2 - Trip Length'>
      <viewpoints>
        <viewpoint name='Average Trip Length (Minutes) by Generation'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average Trip Length by Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average Trip Length by Month (Gender)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average Trip Length by Starting Hour (Gender)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9B8A5E3E-7A1B-4B7D-8C23-A8B5A5D2DD61}' />
    </window>
    <window class='dashboard' name='Dashboard 3 - Popularity by Month'>
      <viewpoints>
        <viewpoint name='Bike Usage by Hour'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Bike Usage by Hour (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Bike Usage by Hour (Gender)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Bike Usage by Month'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Bike Usage by Month (2)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0fb5izm06oekec1do4cr21267vg4].[none:Generation:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Bike Usage by Month (Gender)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{348A661A-0538-4A51-8946-8395B1416CE8}' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Number of Rides by Ending Station'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Number of Rides by Starting Station'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2DE52672-B15E-40F6-A101-071FAB8316AA}' />
    </window>
    <window class='dashboard' name='Dashboard 5'>
      <viewpoints>
        <viewpoint name='Average Trip Length by Station'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{29C1C9D6-9830-40D2-A101-7CC6E26DF7B3}' />
    </window>
    <window class='dashboard' maximized='true' name='Bike Presentation and Analysis'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{84588BCF-0B99-417D-9400-96A3011E85CA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Trip Length (Minutes) by Generation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Trip Length by Month' width='192'>
      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
      KiSLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Trip Length by Month (Gender)' width='192'>
      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
      Hq+L7r64rRbEiMKX2gRKhKjb1czcuVPxnORlmDSBRKFI6QTv33+EeP9xmtq6clGPEFmVEoBD
      +/cRiccxDCMX9QiRVQNuj66UwjQVTufAa8KkCSQKRcoVrow427a8zetvv5+LeoTIqtRbvBll
      44Z3Wbdurex4Iwpe6jCP5ua0MRUsv3ll4Xw/SYiTGGA2qKK8sgplJHNQjhDZlRKAHe+9S92W
      zfQrWRQvCl9KK2fmWYtoPd4DsUgu6hEiq0b1VyKFGC7Z/E3YmgRA2JoEQNha2gHYX7eJ365e
      l8lahMi6tN91xXWF3+OSBTGioMgokLA16QMIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW5MA
      CFuTAAhbkwAIW5MACFuTAAhbkwAIW5MACFtLOwD1dZtY89rbmaxFiKxLe0GMaZj0R/plQYwo
      KLIgRtia9AGErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAISt
      SQCEraUfAKXo6enJYClCZF/a6wE6mg+xYdtBbrjqMlkPIApG2gHQTQ2fx4XD4UApJesBREGQ
      BTHC1qQTLGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0C
      IGwt7QDEo320tHVmshYhsi7t9QDhvn527NzD2DEXy4IYUTDSDkB/VwueQKUsiBEFRRbECFuT
      TrCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsDUJgLA1CYCwNQmAsLW0A5CM9dPa0ZXJ
      WoTIurQDULetjl27d2ayFiGyLu0AVFWW4S0qyWQtQmTdoKdDm6aJaZpomjbokymlhvR7+SDT
      tY/242f6HJk69pDWAwxVptcRKKVQSuFwjHzfPtO1j/bjZ/ocmTp2VgMgRL5Je0nkYBl6lL31
      hwkEg/icJk6PH03T0IC4rtCjfRSVleNyOCkNDr5vseWd9QSrJlLscdDe2kbVxEk4EnEcPj9+
      j4tQT4jiYj/h/iRlZQGCpaUM5gG6bs1zlJcHCI6dSrDYi5GI4fW46Q910al7OHtWLY7hPpKV
      wUtrX+bcpUvoCYUp9jlp7egmGo+zcP5Zwzs2gN7P8y9twqsizF24CE1p+HxevEUl+D0jczdN
      9rWx60gfE2vGoEd6cRWV0R/qombixOH//QBGrJsd9W1MrKnm8NEDnDGlFofTQ7CkaJhHVrz5
      8roMBUCZHDl0gIb6fXRGYFx1EHe8h1DCDd4StGSE4uJi3OYOTpuycEgBCPX24ve38eauBgwc
      VIV6wHDgcSuUHqervZuEO8DCuZN4o/4g119x4aCOn4z0sKOlhaounXiyn2BJOW4SeFWCtriL
      KZMmURnwDLruT+pubuDwkSNEYzFw+0joOlXlRUT1EXrUK532xoMkTRfuknpi/WHa23q4aeUt
      I3N8DA7W17NnbyuHmscSdOiYvU20RjxcelUVNRX+4ZWvTA4dqGff7kMcOTQGT5mD5nWrmbfs
      JoLDrDwR7uTQ4SOZagIpOlqb8RWX0NHRTWl5EJdDI9Tdha8oQDxpEgz4adhXz+wFi/EMocke
      CoUIBktoamzC5/eSNDT8Xg9KjxE3HSQiYTz+EpxGHyG9iNqJYwd1/J7uTnRdRymNSCJJaUkJ
      ZiKCqbnRHA6CwVLcruH1NcK9Ibz+Iuq3v48qG0tNZRkOBxgmVJSXDevYAJg6x493YuBCUwl0
      w6S5rZOF888c/rE/1Nx4lPKKSprbO6koC+LQINTTS83ECSPwhFS0tjRRWl5Bc3MHZRUBDuxv
      4JzFi4ZddzwSxnB6pQ8g7E2mQghbkwCIrFHJPl5b/y6vvfwy+id+3tVyjP3He3JS0/8D0vS6
      Gxbgu14AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average Trip Length by Starting Hour (Gender)' width='192'>
      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
      vK3TAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Trip Length by Starting Hour (Generation)' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Trip Length by Station' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Bike Presentation and Analysis' width='192'>
      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
      oLy6lmw2w/8B400qwKdTMUUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Bike Usage by Hour' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bike Usage by Hour (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bike Usage by Hour (Gender)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bike Usage by Month' width='192'>
      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
      TnfZunQ6Hf8fvn8ghXJfR3cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Bike Usage by Month (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bike Usage by Month (Gender)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Breakdown of Rides by Gender' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1 - Gender' width='192'>
      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
      il0IkROOukYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2 - Trip Length' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3 - Popularity by Month' width='192'>
      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
      kAHJrOL/AaDrUMgChlu4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd3xc1Zn3v9N775oZ9WrLcu8NGzChhZIQ0khgEwIpm0KyKWRZCMmGBAih
      9ySQYEpMM2Ag2BQX3KskS1Yvo5FGmpGm9/b+IWNwcMsnsNl98e+vmXufe57TnvO0c88VFIvF
      IqdxGp9QCP/VFTiN0/hX4rQAnMYnGqcF4DQ+0TgtAP8i3PTdL2JtWE4euOqC+TSd8cUT0j/+
      +59zYCgJwHjHO2jNDpYtms/nv/1f/xDf737xDN7pGD8hzZ9+dz1Ll69k4ZIVHPKGeOhX36dr
      4mianv2buPfPa9mxfg0PrVn/D9XhfxPE/+oKfJLhVKbY2dbN8EQWpDDa18qPrv8FBYmR39xx
      K4/degN9/hiXXX4pv/zdQ5wbc3PPDdcC0LD4fN56+leUN6xi8HuX8LMbfoVQZee239/OLT+9
      hnQqj8w1i+s+M5c/b+rl8vlO1u4PAZBPhfnBN3+MN5jkP278Le88cScH+vv4t+tuZ+XsSvbv
      2kHj/BUsm91AwdfCLfc8Tq9yFvWiAV7f2sKKS66k5cXf8U6XgKqbrwHgzRce464/Pkvjkgv4
      yRcXcM1PfweZBJdd8xMEg1tZ924zc8/+LNd+/rx/WX8fC6c1wL8Q5523ilt//mMal5wNwIN3
      /Ipzrvo5n11Wzj2PPsmWTe+SzoPGUc8Zs6u46qqvHnm2/d11rLrgCn5y883c99sb+Mx3b+Hc
      GQYefHId29/dxS/vf5zQnqfZdKCP9u5+YhOjdPR6Dj8twGIrQZz28+zrG+lo3cJXfnQny2eU
      A3D1f/yaFTPcrH7wNt44lGRRg5t/++pXUGkN1LjM3P/QE1xwwflc8KUrIeih1zPET268ndXP
      rWXwrUfYdmiIgYSCX//wqzz30qvs37kNXzCOVPS/b7r976vRJwgLzvwUb7/yAueccw4ATU3T
      eeYP9/CXZ19n2tRaamfOp0SVZs1LG5BIpLzxxvumRsPi83nrzfX8+1cupqlpBk88+HueWvsO
      TY11kA5x752/p8WbZUq1g4O73+WxNS8eeXa0Yycvbm7GrFNTyOUBMFssiA5P0Idvv4FX321F
      KJagUSuRyCS8seF1fvf7e3G7S6CYRyqRsuOtN4jmACTUufXc8utf0zEuocysQKaQI5VKANDY
      ylgxfwqPPPLY/0i//iMQ3XTTTTf9qyvxScP4+Di9Hh9FJDTU1aI3aDFqFLhrpqIRpXDWzaHU
      pEKrFBPKKVgyux6LvZRgYIxoaJx+7xg6lYJoaILOzk7kRheyfITKpoXYlEVeeu0t5sxuZNEZ
      5yASyyjRibG4azFpFZgsdhQGB26tEFtFAzJBDqvDRTaZoL+3i87OTqoaZ5MMjVIzYwnlJhkW
      VzkTYwGWL5lHIC2joVSH0VGGIBdHrrWgFBdZvHQ5w4MDnPPpi4lHIqgVMtK5InKJiPLyUrr7
      vFxw3iqaGqf8q7v/KAhOJ8L+/8MjDz3Elddcg+RfXZH/AzgtAKfxicZpH+A0PtE4pgB0tezk
      hz/6EY89fDeeCDRv207iY6rAxs2beXnNc6RPkb5n/0aGIyene+7ZNce8nouNsm3foaOubdq8
      ie3bdpwS/84d69nvOXYFnlvzLNt2bD/uszs2bT7Szk2bN7Fn2w6yp8QVtu3YzuZNm1jz3LOn
      +MQkjkW/5tnnTvBEhGdPEtc/Xt/u2Hb8tgNEPPtZv6Pz6LLW/GPtOVVs3rj5yO+Nmzcft27H
      NYHuuOtuGkw5Xt/jQ6uwoDbHSeLipq8u5aof34pUJqNx9kK2rVtDVeMMROIi537+u+x5+VF2
      9wX47BnTeGlrPw3lWvKkCQ4GQSPHc/AgdbNm89b6TTz49PM8dtvPERTkxItQVqZm03YPTzz5
      IDf+4JtE0kXKnGaC0SJOu46XX36LpYumsuiyH9D7+p/xRaOgsZAeHyUhkqIuZskbHJhlAsTk
      0Ioy9CdzeHcP8Js/PciN115Kw+wljOS0ZDs2orZVEde6CXS10FBfw+hgOxZ3GeO+MAqzheu/
      /WW+/Y1rsVU1Eo0m0FsdZCd6OPvqX9L87G1s9+So1YNA40CYGCGQUlBWpmKwvR93WQm+cA6z
      xcVXVtVzxc8eYm6dgwVL5vPHp/5GjVuBVulEZxIy4ksiFccpSi3EB3ex4NLv87lzF7HuiUdZ
      u2kHjobZqNM+urwR9NIMupJ6fvrtL3PdtV/H5G4CWwm9m15j6pKzGNr7Jo76ubzbMsxzq+/i
      +h98C7mhlPhYDyZbKclYjIxIhFBqQBbpJiQvQ57wYKlo4uqLF3Dbn14g7guitOgQJOKMReII
      9FWUqIKkBRpuufHn/OBbX0XvqEQjl6I013HBkgq+d+MDLJ4zlYC3B4HOyX//6Ep+/Is7WTRr
      CrtaOyGXQSQSkM5LaG87yA23P8zcGjN333EX373uO9xx03WkRSba/FBjSBBOKZAk+siZpnH7
      TT+kf+8G/vjC28TDUSRlM4m3vIaurI7O1hZmNjUwHEiy8MIrMPq381xLBHWok4VLl/PWng4I
      hqmaVkc27KWgdhMa2Iejrokd6145fiLM7XRi1BW46LxpHOryUz/dzqFDwyBRct555wLg9QxR
      OWUahWwGucaGUSvHbDEjHJggGE5QXeZEJY5RUDkQW0VMZNLMX7yYqbPnoZEIiceSLJg/l35f
      mtpSMzFhhgttU5ECc5esBKCYDjHsC1NW1cBF5xUw2pzIBAUoFFEYzVSWV9AnESMI+zFq7Dhc
      FtoHxmiqdDPq6cFps9D42fmYlEJWXXARWZQIgyH8jkqMeiOrzr+EA28V0JkslJU5UEgKdOY8
      RCmSDPtxVE5Bb7SwYlk9A2MhxoiiV0qoqm/CNtWAKJtALpcyPiJDGhXhduooc0xFUgiQ80xA
      EZRmJ2cvmobTXcqoz09jXTWNU51EQkVsFglFSRKnRYtCoUA41UEi5uVvW/aw4uyldI3HEesd
      2NRmNHo/JosFuVRONhbA4K5Db9Sz7MIL2ZaPUN/gJu6vw+aqZBES0jlwlThRWssxTK2mRCtj
      W2sfRqsdGTmEeT0aRz2piA+FTIFcY8Jq0COxuEgkQsy/8FJ2bd0MAjllzkqkcjkAJU4X1qrp
      DO56jQuv+j6DO56nvr4Bs8PJ2FA3LrsdpEpcFh0SpQGDRkNZRTme/l60JgclrnIi/W0kapah
      EKd4Zu068mIDNqOexuXL8LW8TdQbpWnmfAwV01n/t7/RVGVBp5RQFJi54MLzOKiMUFY3FYvO
      wIxp1WRQk5KJKJ8ym+rxZty18xgPx6kuq8RYk0duMlPQiiio3TRU2JHKBNguvgCKHwHadm8t
      hjOTv/fv2FR87pX1H6J5fe3Txa27Wz8KdsVisVjcvXV7MfOB/1u3b/uISi4UX3l2dXHH/o5/
      sph08dnVjxX3dwz+489mk8VQLPXP8f+4kU8WX3r5jQ9d3rpt+z9d9Kb1rxTXb9px5H8oHCqm
      o2PFx/7wx+KgP/pPl/9BHDMPMOzpZWwiSm9vH0adnL8+9DvG9VORJ0YYHQ/x0B8ex2VWE45O
      8OhjL5ErpJEX04gkUvwTUWbNmk5Ly0EcJQ5+/5tfobW5cVpNaLRqEpk8keAEPZ1dWOwlPH7H
      TXgyMpKxBPlsmlAwRCwexzvQjUAopK17EIcBnnlxI4lYCLlKRWvrIdr2vIvG5qR/YJhCKkIe
      OYJshNFwhtDoAHmxko6W/RhtDsRCAbfc9B8c6g/iMKvwhzMEh/tICeQ8ev/v0OgdSIpJBkfD
      /OWhuxkKRplaPwWb1cShln2MeQ7x8rYeBHE/QpGU7r5OHnn8ScZGRhBkYiSKMob7OolnCug1
      Cnbt3I1IJEYo11JXauKxe36DoHQB8tQo3kCMoK+fQDRLaMzDA488wdhYH5lYkqJMzUDXIVJF
      IWa1lD3NHbz87JNYHS76PKOsWf0Izd1DVDr0DI6Gifq9jAYThMc85EQqVAop6/58P1u2b2PX
      YJIpFVb2HWhDI4PuIT/5+DihFEhD7fzpjYMUYxOYrUb27mtFJS3SPRRg9SP3UlFdi3csRDo8
      xm33PMjK5fN57snniCUTyNRGRPk4zZ0eptc5GRwNk4pFiURCPHzf/fQNdqM3l0AqTCCWZ6T/
      EL7xML6RUew2K1d/+kwKchm3P/4qNVY5RaGIgwfbGW7ewnM7PTRWlzAeydK3bwuHDu3Fl9UT
      9Y8gksrQGUzUVrjweocIhYLEY3F6ujoRiqT0Dg0S9Y+AXEf7W0/zSusEFqWAQiFHIivk1p9/
      B6HeTTqTY3y4j5xYTdDXf2wT6PHHH6PSpmJHV5h0AmY1qAF447W1jGU0kEvy+qsv44tGUYir
      6Nu/njZPkOLQ/Qgd9by1/k06e3r4+a33ks4V+Nu6V9BI0gwGE4gCvUiNlQyHY3y6oAGFiYPv
      vs72WBaDy8WebZtY0ljJ3r4IVSYJ8rpzmFOrpad5K939evIvrWNgZBRHSRnm/VtZ/fwm6uvs
      KGRqCtk0S5fN5S8PPcWUWQ20txzkS9//JYunOgFQalT86fEnyBeF5JJxfvizG4jH47y65hli
      YgGifBGZSAiCHK//bR3Tplbz3JOPoDXakVgbePovT5ETGpi26nMICxk8Xi/trXvRyzJMiCuR
      k+XaL6zkLw/fh9BgodRu56GnUsx1TLpZd95+OxjciLNx1AY1yVCKRDqL1ztB614vWvGTJI0N
      SDICPnd2LQ888DyWMhetu7bwl79tZWa1ncSYj0ceeZxkvoiwUECt01NMjGCsXsqVl59HLBpF
      Y7Qw0L+bf//eKyydV8qaF5MIpWJyY+3Yqufy75+Zy67Xn0SydBl33XMX5152Jc0t+9ixt5Vq
      u5EH77qdjNKGRpwln4oBBbxtO9nr9VCyf4jFtSIeeH4PpTYZhXwRrVqLkDy5AhQKOV577WX8
      A50Y3I3ExvuQybQolWpqm6YyffE87n/0FT590RzWPbuaQLKAyVbKqGcAe5mL+x4coH3vRvTu
      mSyeCkFvJ089vxqZvo5KmxJ3UyNrV9/Lpn0eplWW4Y1lkAlSLLnwc7y2ejVzl5/FXCsUg708
      9Mh6hsZS3HrnrZjcDXjatrOmZQiNPMtPr7+JPz311LEFYMXZ5zK10kly3SbmzJ7K9u07KTcp
      UDQ04RbriE34EGbjVBtdpCNRLOYvM9TTTfmya0EiJTkxgdNdilElYuVZqxBLpQSGeymdYkOS
      ncecBbNZ+8I6plY5sYsXoVaJ2bqvlyUzK5lZW4etvIaS3RuxOt2YShtBLGXpipWoTGZio2P0
      j47TUOVkbDzMOWcup7zGjUYiJR0NEM2ouPjSVWisZZgNZtK+NgIVTlaceykL5i9k2zsSQgU1
      eqUYnVrBovnzGEtJqbMp6Q8VMInipOQmzCoZADPmLqWkog6Px4Nu3hno9EamzGukpTCKyWxF
      RAGxOMdrL64jq69AJFEz74yV6I0Wyt0ulqTTHNi3B4dWzEWXXIw3CmatAqlUzPhwH6G8hlK7
      BApmJAI/L61dj9Bei8bi5IwVy6grs+IPxfjUiuXUOLX4U3JKNQX6QwUcehUSqZigbwCRMM7f
      tnawYMVZdAz6WTVtDsuW5zlwoIXLL5iLN5jCJG4gLbcg1jq46upraW9u5sYbb+Ctd7ZRXVmK
      UmPEqRUiUOoJRDJYZGl6xpKAmPkrV1EwO5BmJVi0OVYsE1PrVOEJFTCJk4wlxRglGdCa0cml
      ZKJTiKJDq5hFsShEJRUjBhae9VmqpgewmlT0aS006XXYS8oZ8XpwuJ2MjQRwmBW4yypRSAX4
      AiHOWHkOGks5lTY1cmDxkrOom1WkrmkGG197BWdZGXWz5qMIe7FUz8ChSCIa2cfXrv029951
      PzaliEVLlpIM+5EZynHadWhVclasXHU6EfZRoe3AHmwVDZi0yn+qnJZ9O3HVTMegln1ENfvk
      IjjmJS3SYDdpj0vzD+0FuuvuOxgaHOb1Da9jt5XgG+oj0LOb5zZ7qHJqSWSFPHjHb9FanQiz
      MXyhFNGAh3hBSl97M0UgEo0Riyfo6vMgF6TxBmIY9WLOWPopJFkPm9vDCFJhRCIBh7p6Wf/U
      U4TUagyiwhEb9d0du3C53QwM+0lFxvAGolhNSp7766ukE2GMNgfBkQF8oSTh0QEyAgVqmYjm
      jWtZvaUXeSaKRAwHD/WiUojo6vchSE/arH984DZKa5qIBCfIJuMc6u7DqFOxv7UDiln6+gbJ
      ZzJEIxEeeOwxalxWRsbDPPfCqzTVlzIRy+P39PDg40+ybNECWpp38OTqdajloNZqOdDaAfkk
      /YM+Nm1+hw2vvkh5ZTWDvgksRj2BMR/RoU729EeJBP0E/GNs3LyFDRtex2U1EUrlGew6iFxn
      xdvTRiZXpL29A7lcSmtbF4VsjEgaRvs7KMo0dHdu5cnVW5g/t45de1to2/w8GzpSVBgFDI2O
      89BDf6DMZWYiHOXBRx/DN+xFKS6QEYjpbmmhKFPQ2dqKxVFCxO+lfyREZGyQnEiFQlJk194W
      2reu5dU3NrN/OM3UKjv7D7QhFWQZHBmnmA6za38Hu3ZuRyEu4I9mMBm0tLfsRao20HZgL0az
      kS0v/4ktvTky0QAqGfQM+bGaDLTu3wVCEQfbDqEzGNj75hpebR7Ht+tVXn17Az1BKbUuPc3t
      3YjzKYbGJvD09jJycDNPbvVglReQSKT0eo72EV5umaDObfjHNMBdd98BOTEHNv+VhZdcw7Z3
      d1BlkqC2VrO3rZdb77yVh2+5EYFEQSTsQ2OrRpILs3zRXF576SUC8QLTZ81hIp6ht38UszyC
      1ODmFz/7Ft/90hdIOyqoNZcw0NV6xIb2jsRxOJSorHb27dpPtd1ITiyisdzF85t2U2c3IlMb
      uO4HX+fOX95K5+AAX/r+LxnY/gKDsQzZiSxChZhL5peypT/K7q1bkWqMaKUFzCY7UYGc8UgM
      eWQAg7sRpTBMdLifqjOvQR/YyEhGzdp1u7nk7Fre2TXK0jlWdnRmmetWMiASMlUrYcchH2a9
      gvDoAEZ3GYWYmFgxyfVXruKh1w8y+O6bpHU2qkvttHcNYXCYqNYI6MzqcAijZOJh4kIjv/zF
      dfzyB99FoTEzHEuiVSkAMUGxiVpDDq1ESId/AmEkyw23/JoHbr0ehVyFT2hF4t1D3LGIdP9m
      7NUzkCaGGOwfp3z2IiIxCbPME/gLUnbv6+Tqn/yajg2Pc2gsgyAbp0Qvp8MXRa8QI1MUiE+I
      ESrCZKMGtIoQHb0jfOPnt9K/82Xe2tFBlUWAsXop1nQ3/oKULVv3s2TBXPyhIJ6hMSQSMalY
      nm9f/yPsgiC3PvIydo2YwIQfmVLFf/77F7j5oVeolMZIaB288fJazj//U2zduhuN0YxeZyJe
      gN/+9GvccsN/MZ4TYreXMjgwyIxZ08jpqtCN7CCmUBEeT9HWP4ZJJyJblLFqhpNXdnRRadKQ
      EElwOuy8/fY7XHTFv33AR0jzVruPVEH1j70QM3/+QigImbd4Dvl0BpMErE43GmspA94/YlOK
      WDB/JuGimjKDCH9ajjQ1Sk6sYcrsRdgcTvr6elk4dwZlpSGqnSpGowBivvLt7zEeL6AQFLE5
      rUdsaO9IBIdDydhECL1Si1MrJC9WEU+mOXP5cmrcDiRSKSBm/tJl2DyDuK06ZPVTsRQUFCb6
      UbuaqKq1sLf/Jb505dcY7OqgsroSnVbPyHiYcCKFUzVz0maV53jpr2NccNYstjy9EX9Swa9v
      /g7bdh1kZnWGotrJd75cyc59vaxsrEIUDbDcWo28kEazcCYJdORC/SQlZtSuJlzqQzR99WrG
      R/qprKvH5hqiv6cFtbOJSyudCBNBihINI6EE4qKI2QuXYTA5iOWyGPSTqjuQEGJWFogGfFir
      GzGrDSgkAppmzEUqyLB/fQv/9vmrEGvtJL0W0nI9kSET0xc5GfH00DStiVlVep556S2+/tXL
      KdHLydc1oHGLKcYmQJjFVm2kkI5gNluJjPahdtUgykgQ5HzYynyUGFVkSlwsX27FKE2jc1dT
      Z2/kmZfe4rp//wY9/cPMnDeXdKZAa2sbZe5yqp0WWrfsw2k10NA4hTfXPsm0xStB7WKqXUnl
      jJXs2/4uv/rv/2bbu1u48mtfp6ujk+rqMsZjOUBExfR5zNbpsbvKSaYzHGrZy/SGcsz1Gpp7
      h5k/p4yF6QxdXX24y0pZ1FSJP7mO6dMakRktbNmwnm9d+3XKpsw9ykdY5W7C6x37aHyAU7G1
      /s8gl6K9z0dDTTnjox4URjfKw9sqhz1D2NwuRP8kC8/QEG6X65+uKkA+HWU0kqfEov9Iyvs4
      8VG2+6PCsfMAre9w7a8e56IzZrH2T/fQndbT9trj/HndDg7s3Yl3sA2ZsZyB/kEKmSi+iQQ6
      WZ6hQJQn/nIPm15/l5qmRoITUbRaFaExL7+76TbMU6poefNVmkey2LRCVj+3DotWimc0SDYW
      oG84iN1ipL15D2KVCZkgw+797ailk/Z/bGyIlEDO66+9glomPGz762nZtxuV3siBfc1IRXnC
      kTjrnn6cDZvfpCcopa7MyIGWDiSFNP39/fQPeFAbrbz9zIM8vbWLX173Pc46/yyGRkJEAsMg
      VfHAnf9N3YwljHs6CPk9/OWFVznQ3IdVLSCPkIMH21DqzDRvfIEgeiaCISxGHa37dyHTWsnH
      J+joe9+3GOk/xLPr3qTaaSSULB6OnUfwjwxM2tPiHLv3t/PMM6tRq7WopNAxOEo27icQitPT
      O4DDYcPv7eem2+5hSm0lkUiETCJGuihBQYg7H1iDVSciL1UT7t/NmudfYfVr25g1fRo97QfQ
      Wey89vgdvHYwiLY4xju7esjGAwS6dvDw2r3oCsO88s4e7rn7IWbPnUG0dx+Pbmij6NnGfm+O
      RCxC1D9ENDLK935wIy+uW0s+LaCYjaHQW5GJhQwPDdDfP8BYIEwhFSIQzfHnR+9GLymwu3OU
      RCSE3qined9eJCojq++/l5xKw75Nm9FZdHhHgySjcaLRCJ7eLjz7t7BvXEI0MIJSlKXPF8Ji
      1NK8Zxcqk43w2Aid/QP4x/xH9dl4JElPdy/2EjvjI4MMBYI8cu/D7Ni1EavNSWBigu7uvmNr
      gLtv/gmbWgdZMns2WoOQLTuHWTKvhG17hzDb7TSVwpYemGZIsm9cSJlRTbVdzeb9g1SXySnE
      YLi/kzOvuZlPzS7jjltvITUaJWSUcW6ti4PjObbvH6C2xoY0FUSk1JFNJsjmitz4n9dx+03/
      ScG9lKlSD0nrNBIBD1t2HsCulfHDn93AH/74MOlweNL2/95V/Ow7PyAvlzNl+gzefnsLixYv
      oK93hJoaM+HxFAMjQWTyAtGUiKsvnsmbOwfQVc7GnehmQ/NeugbhcxfNYduODuxGJWqDgWjQ
      j0GvIR0YIZyXYaqfQmoojpx+JsZzSO12rI5G3MU2WkM6orEYN//wq9xyw3+haDqfGapxnt8z
      eMS3iI33IdM6kOdTJI/Ezgvkk6MYq5diSXWTtE6jedc2tAo56WISWTLPWCFFo1lB81CSr3zn
      p7z+xH2MRmOU2UwUgOG+LgzuRn783c9y2y2PkRZIkcjha+dN45UdXnrH/UhGhhjJCDnr059H
      5t3NQCxCzcwlvPrHP9KwcDGjnk5UWhvBwDBTlpxD4OA+CnoDQo+HQv1CmiS9eGMKEvpy0p1v
      EM2q0VndFHIRct4esvYGPnX2OcycUs4dv72F8WgCsVJDtUXJ/sEQvW8/xpd/eCtb334HR7mb
      gR4vM2Y2YKg+g8DWNYgMUrZ35ChziDhj6TL2bX+TYjpDXOmkUhJn/f5BjGYFVpuLSDLHTd/9
      Ajf95424l34Rk38b+zwhQE5KKsJWmOyzeaV6tnaE+PzXf0D/jhfZvH8Au1GNWJQjm81x9pI5
      PPzYk8f2AWauvJCrvuFgx8EBBnq7ufobl9N2YB8XXnAOVrOaUCjE12aW0HyonyuWOFBIJCTD
      AZZrS3HZFZCV8texccqzHez1GFm1cinv7uphwaw6ptl0uGQ2qsv3oNNPTgKxRMr+bW+zpzcE
      RQHlU2Zjq6qm0TWdZ1/bSl2lC4lCR7nLjk6tYOH8+QgLIJZKAQlzly6jckoTu3fu4af/8X22
      btvFxRd9Cn/Az/w5ZSTzBQ4ePISrrJz6BjtifR1ZiRptVoPc4aYgMyDJh5Aut+J2mJFKxWSz
      GaTCAr09/VjdZYTjWQT6KNm4jsbZOgx2FwIUaNAhDxdIpAq8Z7OW15VhkphYJra871scjofL
      i8nJfMPh2LleVIrOXU21pZ5nX9vKGStXYlZKEAgytPaHWOLQU1dmI79+O2UWFSuXzmNXzxiz
      Ksz0jCWZP30qUXSIJCYaZ05DkJnAXD0fU7mekv4UU+bMRBxL0d3TxoypVWAX48ymKauZiuSy
      S1j/5nrsFU2sXLqAWDxCLJun4cxP0duxD9vZK5AYXFTrykg197JoznRas6MYnQ40OhvFXIJc
      cjZ93W0Mt71LUWNi4fKVR+ZRMjyGtnQKnzt3MYlIjFXnnovD7cQ30M+r615iZcPZzF6+iLbe
      Ma78bAUSURJfNIM0k2Dxl39I61sv4K6cw9fmLKWjs4f6KhfjsSJFgYQpsxdRVV2CunQpzqZJ
      fgIR9AxN9tnUKiexdZuocurIOEtZri1FK8wiVolIoqW8wsAZK8/5ePIAuVSEPl+UmnLnKT8z
      PNBNUqCiqtTxUVfnNI6HYp49O3bRMHseSsn/3KshhVyKnXtamDN3LuJjsG0/1E5DfcP/SF0+
      lneChWIZJv0/5hBr9EaMOs1HXZX/MfS0t1CQquluO4BEKqWl7RDj/gCFYo7O7n4MehX7mg8h
      JXMkVm006tjw14doHtez69XVaJzl9HT34XDYuOeOuyh1mgmlYLCrFZlCSeuhXkrsVm75719g
      dVaSTEz6ESMDPUQTSaBIOJElG/PTPxIiONJPMlugd3AYcT7BUCDKxHAfyLWIcsO6bSIAACAA
      SURBVHGaOwaw2cwk41HioQAT8Ti//9Xt1DTNRKMUs2vnXtQqKV39PmwWLb+8/ids2PAmWns5
      5BIUinCoawCFMMuAL3Rkb1JwZADkWqSk2X3gEIJCit5+L5Jiit/86vcsXHUW9//2Zl7422Zm
      T6vFFwjR19WNRAJth3qxmDSM+YOodIZjCshHidPnAn0kiPLMmr8xvVJKZ0LL0P33orS5oQix
      VIbGaXX89bmX8PV2Y6mp5qwpNl7Z0YUonWDGrAZ0QDSa5pUnH0erFpHRugG4/bbfYKucQrCr
      HXNVPW3dY9x5729JJLM88/QTqDUqKBRJjnZirWhk67v7+cmtd3LwrfW8taMDnQr0MgmhZB5X
      ZQXthwZxq2OUzLiQRkOUB57fQ22VHgmQTqZYdsZiRDIZL6xZw+WfmsWfHryLksaF+MNR7r7x
      GoSacpaX5nnwrvuYP6+Utr4EimKCeDqNymBDlU+h1OnJhvoomXEhMyxp7rv/GSz1ddgVMlK5
      NMXi+68AKYpZ7vnDY8wvNxBEy93338uMqY3UzJrFXQ88w/pnH/rYR+60AHwkUDN9qh1r5QyC
      +7az7Npvkjs8znu3vcVwqMjF562gs6sMS3kNK2ZV4U+uY9ac2ezYvp2GchP1msWEswIOHhpg
      ZpkO0cL5zGqqIS3TEbZbsLjKsLmCyAQwf+YUimon8twESbEWUakNR+1s2g71UW9TEjwcr3eX
      mHDqFWza14vTosRqdaMRRLBWl2GRJFixTEyZVcrAWJJSvYhkXso5556LWCpAotCwaOUqrI5S
      ouksiAwsn1vK25t28qUrLqWns5OvfO5MDh7qpb7SgieQxmFQI5GKCHjtWKvLUBNi5TlnYimv
      waWRkM7E2HPQM7knaMF8JnJq6upLmddQyRPPvMS3rv06aqUWXyDId7/2Gd7cso2zliz8WEfu
      9F6gjxkh/zAirQ2N7J/NHpwY8eAY42kRpXbTx8rn/zecFoDT+ETj9KkQp/GJxmkBOI1PNE4L
      wGl8ovGxCEDQP8zoRIRkNMiwP3hCWv/wIOF45h8ovUhXewuRRIZo0M+ePXtoaeukUMzR3d1/
      mKZAb2//CcqA7u7u495LxkLs27efVLZw0trEw+MnbWM+k2T/vn2EY6nj0mTiYQaH/Sfl978R
      uWSUngEvkKO3d/CEtMlokCHfib9P8PcY8fThHZ2gkImzZ88e9u4/QDpbOGoM+3t7OdFoDfZ2
      kzkGwcciAHs3vsJ/3Hg7I517eWXj3hPSbnzlaVoHJk5I80FEPc3c98Q6EAjp3LuRtW9u480X
      HmPNhu30dA8cpsrw6KN/PmE5999/73Hv3fTznzLQ18Yjf3mBzeue5MBA6BhUOe6/72ES4XFG
      TiIAD/z2Jlp7B7j7gUcYbN/JS2/vOur+ffffTyYRxjPyf1MAYr5Orrz6O/hjQR555OkT0vo6
      9/L8+hMfoHU0Ctz621spApmJAe57bA29ze/y6/v+QndPzxGqPz/6KCdaRp9+5F4mjkHwseUB
      dIUgL21sRlnaxPXXX8/VnzmT9X2wa+0DWKx2pKZSwrEMi8ulrHv2cZ4OhrniksW8trkVoVyD
      LT/KofEsP77hZvC1ctvDz0A+x/wZ1YyPBpEoJqvuG+xmIBblvK86ePD21XgPbSFQkBFMw7qn
      HqF1OILGXE6yfwcJiZmvffM7lBiUhHz93Par/8RUM4eD+/Zz6ZIqxtRNXHLGdBbMaeLVv21i
      xQWX8/q6h6lI29n98l7au/u54itXcONv72Xl8nm8vX4TFSVaPHkLD97yH7hc5cw993NsWPME
      Oo0Ex6zz+cZnz2TuogX88ZlXqZuzgs1vvcGeoA5xoI2dB9qom7mE9evXU+c2s3dEwPZ1fyae
      EzFlyQW8+dTduFxuGlZ+nktXzPq4huojQWONi/sfXg3A3Tdfz+d+/GPu+sXDGBgkr7UwMJaE
      eIhrrrqM/dve5Lpdr3HZl77Myy+/hgABS2ZX8tz6vVz7neuYVaXj+utvRiQRMGvRMvqHAqRz
      AhBBZGKM9e+McOk3fsxrf/0DJnGcZ99po69nmPYdG3jxjV0IJEpmOoVs7Zjgsi9dxZyGUiDD
      4w/cRTgByoSHK752JY+9uPPj8wEu+vI1NG+bPGIvk0kTDIUB0FhcnL9yPo3zz0SQCgCw4Izz
      0ObD7Nizl2S2QGB0lBwZvv6D/8KuFtPfdZCpC86myihEbXIxbd5cFIf5LD33MuZWm4ikcgAc
      GvTxlS9dhkwIe3ftppDPMzrmp6K6lsS4h0O9XgCkSj1fvvxiOvtHmeaQ8OcNrZyzpAnI0zcc
      4ec/+xFvvrqW+voGpjRU4g+mEOWTBMIJGmYv4bvfupqy0nKcRtXhdrm57IKV9He1klU7OXf5
      /CN90drex3U/+zmdW97EVV/P1CmNeH1+tAox0aKSsrJSastsQJp+X5qrPn8Bew+0ojDY+OLF
      5zA0NPJxDdNHhorpy9HFBggDAkGB0Fjg8DGQYr7whcswOCqZ4pITSkBp3QwWNZWyZeNmxkJx
      sokg49EMn/rMl5kzpZR0eIS0soQLls9mIiumoryaKqcBgJrpC7j8/KX4xiaths72g5x/2Zcp
      MWloa95HPJ0j6BvDUFKGXppj+96WwzUUcN6lnyc82s9F5yzhhpt+x/kXXfjxfR/AYC9j8dwm
      TDYndSVa+vxJGhunUmIxUFVVjc5kw2LQUF1dzbCnl4b5K/n0OWcSGPGyeOUqKkqslJRWopIK
      cVbUMtC6E13VHM6YXYdMpaO0xAKAxmBh4ewmRifilJY4OP/sxazftI8ZMxu58IJz8A6Pserc
      c9HJICvWsWLZIhRSEcJCmuYOL1/4wuewyDN4UlrOWjgdEGI3qdiwcTuXfekrVJU78YyMY1ML
      MLqqqamuxmyxUFlaSj4+htxcjtNZQonFQHVVNRprGcVADx09A6hLaphZX06py86b6zew8uLL
      mFFbTWdPP41VTnISLdXV1dSX6IgLNbjdFSyfW807u7v46pcuRyWXUlVVjUJjwPW/PMElVmg4
      7+wzECt1LF04i207Wpgxo5Gq8lJKK6uRy1VUlpbgLKsmGx0jI7fztau+SDExgXvKPBY0VaM3
      2bEYNEhUZnSCMF3+HJdfch5SkYjq6koAhFIVZyxfjMczQl11Oeecez5b336DsvppfPriiwiN
      epm3/CyqS0yMjCdYtepMDBoliCT0tjez8rxLmdpQySsb9vDNr156OhEGWZ5+fDVnXnI5Fq3i
      5OSngM3rX6J7JM4ln/kMepX0IynzND46bHz9RYxVs5lW4z4tAKfxycbpPMBpfKJxVBTo6quv
      5uDBg0cRuMsrGRvxYrFYGBsbQyAUUlHbgKevh3j0/XPyDWYLBpOF3o62U2Zuc7rxjwxTKOSP
      S2N3uvF5PUf+iyUSTBYbo8NDAFjsDmRiEUNDQyflp1QqKRaLSOVyrA4no0ODyGQyTFY742M+
      YrEYuVyOfD5PoXDiHIDZZic8MUE2e2o5DLFYjN5owmSxkI7HjkuXz+eRKpQIALlSRTIeRyAU
      IBAIEAqFZLNZKBbp7e4CQKFUYbVZiSeSBEZ9J6zDFVdcwTe/+U0AvvWtbxFLpigWChSLRQJ+
      PxqtFpujhGHvED7v8ftTqVRSXlVDX3cnBoMBiULFQE/XUTRCoRCBQIBCqcThdNHb1Uk+n6ei
      tgHvQC+ZdJqGxmkIhUKSiSRavQ6KMNjfS1VtPb5hLyazBa9nELlag6f3+HkbZ1kF3oE+AByu
      UmSn8BKBSqsnlUweLQAdHR3s2rWLXC535FosnaVl7+6jHu7zeBnoPvpDB2qtDqlMxoR/7KTM
      AURiMe5AkP6u9z9WIRQKKRaLvGeVWR0lHGhuIfF3E6ayroHejnYAZHI5jdNnsmfHtpPyVCgU
      R3goFEqMNjtWu4OOjk2MjwcoFosUigUi4Qj5/PGF8u/rcCrQG/TojBbC436czhO/KZctFBGL
      JSiUShLxGEqViqHBQUrLK8hmJgWu9cA+crkc1fVTGPaN0tHWilypxOEqJTQxwYR/9EPlnnnm
      WUd+B8Yn2PLuu5NlZjNks1lG9uyhbspU4okkzXt2HXdhMplMxNJZDuzeiV6vx2S1MTbmx+8b
      PkIjEokQi8W4K6sZHBigt7eXbDbLtm3bKK+pIxGLEU0kEQiFjI6MYLXZ0BtNTAT8eH2jWCw2
      1r7wPHMWLqZ182bCE8dOnilVavo8Q/iGPDhKnERicTjBgvoeCkUw2xxHC0B5dR3e4WFGhodJ
      JpNHGvL3iMeiKNUaErHo+51isTHQ0/kh2mNBIpFgLXEx4ulHLBYjEovJpNMolSpSqSQisZh0
      KoVSrWFs5P1OLa2splAoIBJLmLlwCWMjXiiCUCxBIBBwMncmn8+TzWZRKBRAkUw8SjKuJXpY
      kwkEAhRyBalUimQiedxyrA7nSVfbD0KtUWOxl5BNJrBYLCekLRQK5PIFhGIJA72Tq2pwIkg+
      n2d0ZJjaqdMI+Lw4nU6KQhFSiQTPYD/uiiqy2Sy9He2otToqauspFAqMeAbIpNOIxGJKSsuP
      8JkYD5BOJTiwdxfpVPpI3wU2jk3SlpUz1NdzVN2kUilSqRS1Wk0ulyeVSjE6Ojo50cvKmAiM
      kT+8eAoEAuRyOVKJlELmaI3a39WBRm8gl8tTKGSQy+UcbG5mxuw5JBIJxGIJHe0HaZo1h9b9
      +wiHjp9otDld9Hd1AGAwmynmsggEgpOOSS6Xo6+n82gB6D50ELFchcFgJJn0IpVKEQo/LADj
      oz6c5ZVHCYBAeHKm72Hh8hWTn9JUKSlxuclmswz09mCx2kAgQK3WMDEeANHffedQIGCov/fv
      LgkmB8zlxus5cRpeqVISjUSRySbP3VSpVKTTKVKpFEKhEIlEQrFQJJU8/pYFsVhyWDC9p9RW
      gVCAWq1GKBCgUqlOSi+SyFAqJAz2dFDIF8jn80e0kVQqpVgoIJPJiMZi2J0uBEIxNmcpgz2d
      ZNKTkfdYJEwsMpl3cZZVIJZI0BtNDPW/P6GVqskzTI/V1nwud2The28lLxQKZDIZ1Go1crmc
      YHAyDl8sFhkaGiKTzTJ1xmySiTi5bJbAqG9SAGRSvCNDH9Ko0VCQjnCIitp6orEYxWKBfbt3
      HrkvFAqRKlQnnPzv8S8Wi+iNJigUTmnyTzIQkYjHPuwEd7e3Yi5xUV5TR/206QwP9h+T6QcZ
      icVipFIZcuWpHQwbj0bI5rKIRGIG+noJB4PU1k/BNzKMWqMhFosiVyoZ6u+lvKYeALlSSSpx
      9JfKzGYzxWKRwZ4u9GYLBoPhuDxlMtlkp0qlyBVyZDIZYqmcfC6PwWLFaLWjNZqxlLgQiY6f
      IC+trjnKbDsZ1Co1IpEIkfjkSfd8Pk8mnyMeixGNRInFYkc0MUA2m6VQLFIsFDFZ7ah1BsKh
      CbrbWo5M/r+Hd6CPUe8Q8WgUvcl85LpAIDiulhMIBIhFIgQCAVKpFK1WS01NDSqVilhs0hx9
      z8Z/D2Ojo/i9g4T8o+TSSapqanFVVJOMRQkGjz2Ji8UivR3tiERiKg6P83uorJtySv7ke5rL
      bLUiKJ587xZAvlAgnU4Rj8eP1gACgYCK6hp8ngFMFguJSBiZXI5Or0dvMCIQCCbV3sjwkca/
      t1J0HmzGXVFFKpnA7zt+5tLmdDE8NEQqmSCfL5BMxCmrrGL/np2UuNwc3L8PW0kJoz4foYkA
      8ViU2sYmEvE4I56Bo8qSyWRIJBKy2Swdrc00zphFeM+uYzqwAoGAQr6AVCadvF+czFAnUynS
      ySSRSJhMOk0ul6Oitp7QxDjBwNF7c8w2+yn7OO9BqZp0vCViCbl87oS0Ipmc4f4+FCoNZdW1
      JGKxv9M0AmQyGQW1mlwmzdjwEIJiEa1OTy6XRSKRYDCaScRjaLRaeru7KBaLlJSW093eelR7
      4rH4cR19oVBIOhmntLKKoH8Mo3Fy7O12O6Ojk76FXC5HKpWS/oDgjYy8P+7DXi8KheKIwJwI
      gdERQhMBaqZMY9gzgN5oYmRo8KSBCIu9BP9hE1kmlUH+1D45KJYpCHqHSKfSRwuAu6yc7p5e
      bI4ShCIhSqWKeDxGicuNf2wUn9dLaUUFAqHoyMAUDkcRADx9PRhMFspr6o7YZR+EUChEoVQf
      tYKqVCr8vhFMJhMjQx6SyQR5hEwcHqxsJk1nazNVDVOP2Jfvwet9f3LkslnSqRQVVdWIJVJS
      yQRKlYpCvsB4wI/BZCIaDmMwmcjlsogAsUxOZGR4Ur0fnvwAfZ2HMNsclFfX0d/dMbmCi0Ro
      dAb6Ok/d8QXIpDOoNBpyJ4kWFQoF0skk8ViMSHjSfFGq1VTWNZDLZvEO9OGqqCIYGEVvMBOP
      xTCaTRQLBYwmM/l8DoFAiL3EyZ4d245EcxQqNcHxD2+ySyaTR03eDyKfz5PNpNGbLGQSccSH
      tZdcLiebzRKPx3EYLYjFYjKZzDF9r3w+f0qT/z3kslm62lqwu0rRGoxHojonglKlPuJ4h0JB
      9Br1SZ8pFAqo1BqikUnz/SgTKJlM4nC5SaWSFPIF0uk0er2BocFBHCVOyquq6GxvQ6ZQHDFH
      /r7xwXE/3oE+aqY2HT609n2UVtUy+IFwmVAoRCaTYTQayeVy5HI5xGIxOoMRrf5oc6an/ejw
      7N9DIBAgEolQqtSIREJ8I8PIZHJcpWXojUbKK6tRa7VIJBJkssloUD6Xo1AsEI1Gj4p8weSq
      5B2cbIdWr6e8pp7+7kmhFkskNE6fidVuZ9rMWZS4XFRW12BzlFBWWYVKpcZqtyMQCCZDq/ki
      2fTx/YpCoUAOIaPDR9vKiViM3o52hgb6KCktR6PVoVRpQCBgZHiIXDaHQqlCIp0MAugMBvp7
      umlonEY+l0Mmk6M3mj6kyQCsJU5cFVUIjxHkAIiEJwMDQpGQZCoJAohEIqTTaYLBIMVi8bg+
      zSnb4ceAb2gQT283jbPnHTMA8/cQioQoVUqk0lP7noJIIiMWfn9371EaQCgSc+jge/akACgi
      kUrJZbP4hocoFCadsmLhxNGWbCZD18FmKmrrCY4HCI0HUKrUpJLxI6E1kUiEyWRCoVAQjUZR
      KpUIhUKsTjc9bc2YrDbCwVPfJi2XyxGJxaQScdQaDU53KQdbDjBz9lyEAiGhifHDDp2EXC6L
      XGtgsK+bRDxxXFX7XjvKqmtBIKB4mK6qppa+ni5KyysQCoVYrDay2Sz+sTFcpaVo1BoQCggH
      g8jlcnR6HWKO02dCEdFYnNKyClQqJTKZnGQigUqtZmhwALujhGg0gkQqI5WMI5XJCYdDZDMZ
      2lqbEYlEk4JcKEy2TyKhu/MQMrkck9V+3JV01DvEyGA/ztJyhCIRxWKR8VEf8cOBjUwmQzQU
      RKnRkk0licfi+HyTka9isUihkEcul1MsFhEKJ9dRoVCIWqPBaLaQTiaRKxREIxEQgEQinYyy
      KRSMjowQOeykH7PfsxlC4wEq66bgHx0hNB74EM1k1K+AXD7pzymVypOaQO/5roUPLHZHCUA8
      FsVa4jqcdChOSpZESiidPjJJzDY7So0auUJBKnn8UCFMmhIWewmu8koUShW9HW2TA5bPo9Fo
      kMlkBAIBRCLR4dDkpEMtYDLaIhQKT2oHvgehUEgkEqGv82gHdee2dz9EW1dXR77ICRNwH8RA
      dyc6g5HKuin0dbYTCYWYMm06/lHfEb9CpzdgMJkZ948hEAgwm6zI5XK0eiPiybXkmFBotESi
      USLhEEKhkEQ8jkAgIBqJkEwmEAiFJJNJzDYH6VEfUGRkaDIxWMjnKXxAY3wwYpTNZpFIpaRT
      x9c8+XwezwdCnWabHYujBJjUPslEDK3BSDoRJ5vNojfoyefy6I0mMukUfv+kZnnPCpDL5ZRX
      VpHL5QgGAthKSqiuq6e9tYWq2joONu9HpdacNFztLK044gBbS5yUVdd+KO9kc7oYHR5CeDhJ
      KJFIyJ5EAAQiMclEjHg8fiRMfJQAxCJhwhPjOMsqiIUnEIlExP4faW8eJFl2nff93pr7nllZ
      lbWvvffMABiAIAbETlEiRXO1zFBIMkNShCSGI0iKYZKS7AgFrQjaIqmQLZmWTSrCJhm0KUIk
      AIILCGCwDwaz9Ezv3bXvue8v8+Vb/cfLfF3ZtXSDOv/MTFVNVebLe8895/u+893OeB0XjSd5
      8M7bzC2t0NO6z8TDK8UjCnML9DototEopmmiqirhcJh2u43run4tGk0kfcJjoPfITOQvbKhP
      RjyRwLigzBiFqqpIsoLe72FZlsesPke0GnW67TbLV65ROtjnjVMba3yVq6pKOBIhkUzgWuf/
      Da3dIhyNUa/XcGxr7ASIRKIUjw6JRKLouo4siVQrFf8kuijmlla/636lWir6n2c4EmV2cYlw
      LE6v08axHSRVIj2dR5IkqqVjAoEAgxPJURRFXCCeSNJNdWjWa6hqgFw+z972FrNzC1iW5fMu
      Z0UilaHdfHLyl48OCQSDrF1/gZ31R/5nHAiG/M2tBkL0tQ7yM0omQZTotFv0ej2KR17vcAqb
      azcbiKJIdrLgkSjGePM22r17Wxuks7kzd+fTEQqHqZeOiUQimKaJJEnU63VEUUSWZSKRCLIs
      o4Qj1Evegm/VqgiSzOLaFWzb4mhv99xGUhRFEskUsXQO13E5egotOhmyLBOMxmgdXMwZnBW2
      bbH18D7zy6sgCHRaJyfFvOeiKCrzq2uYgwETU9No9fKFNbEoShzv71CYX+b+O289+cYJIldV
      VVavXsc0LcrHR0iSTH56xisrRAG936d44v1MLyydyQSfjJVLl2l2NCanChSPDkmkknz7G1/3
      v9/TutRKR+jdFqFogkg8gaIoWAOdVr1Kp9MZO51HUo1GpUytVPQTy1u7r/nl2dbGOoJ4sUwh
      NznFxoO7Y18b6DqP777L/PIavV7XR3785xMMwrM0nYLIYKBjmuZYv3cmON0cZuGJwtwYYpPK
      5MYebL1aQdf75KdnKZ3Q6zwdo9pLURR0XafX66HrOsFg0IPcBgMURcUVdWzHwXUcHMeh267T
      bjZwHIfC3MK59awkSQSCQcxeh2QygWlOnXtymKaJrAZIZPNUH17cWD8dI1w8EAo9tfifxNzy
      Chv37yIrCrFo5JkNoaIqHpm0vcHi2hX6PW1sMYO3aSVJJhCSmV9exbIsSkcHWMNFFgiGmFte
      BbzMfbi7fe7rG8Xm40fIskSjXqPTaWMYpxEhx/YQvkGvA46NLMVo1KpomobruvR64/3TCMw4
      Pj7Gtm0fogb80sy9QGKSn57l+ILEtLv5mEQ6w/Lla/5JoKoqqWQKSbh4AwSCIbR6jZVLV6mU
      imQn8hSPDsc3wMzCEurbb2MMBjTrtSEG/wLbjx5gmgaJdPoUvNnrdpmYmkZWFP8DGfudi8sU
      D/YJBQP+QxktfMMwvKbadZlbWsYcMo0Tk5O0m00syyKVzrD+6AGXr1w9dwOYpolhGKiKQvHw
      gJmllVMbYCSVsG0bxzLZeHCP2aVldtYfYds2hZlZFEVBUVXvdcoy1WqFqcIMpeMjpmZm2Hz0
      kOmFZdbv3z3zdaSyOVpD0mdyegbbGPgN4llh2Q6DdpullTW2NzcIB1UsQ+c97/8eDvZ2yE3k
      2dvZIp3L0+9prJ+DhA30vo+uzS2vPnPxAyyurPInn/0syVSSaCyGLMuEI2FfFqEoCrmJHLbl
      LVgRF1lRaLVa/uK3LAtB8Gpwx3Go1WpjsPhZ5WV+eoZqqXgK0gaIxuIXJlKAVr1GMp3xBZKB
      UAhFli7U/ximgRqJkc1NsPn4ER/40If56pe+wOz8wjgM2qiWmF1cJjfpWZSbhsHju+8ys7hE
      IpU+9w/srD9ibmn1zO+JgsjM4jKCJPkw56huHGlzRFFioOtYlqd03N/ZZnd7C8uyqNdrZLI5
      3CEidV4Mhjh+q9XC1DosXRq31x6xwIXZebRWE8MYsPXoAfMra6SyOdLZLPFkkv3dHbLZHIXZ
      OcKhCNncBIvLK2w9fsyN97zsQZVnfHjgbYBq6ZhYPE4iHr9w8YMHO8/MzXN0eMB7P/BBqpUy
      yWQKAa+UisYSBAIeytE9ITs5L6Zm5ykd7hMIBHyi6rzYWn9Mq9mg2ajTbTdpNWokk0kmJyeZ
      nZtldXWVUDBENBolEon4CUsQhDHYWJIk/++0Wi0syyIcDqMoytjpp6gqq1dvoHU6zC2tkMqO
      a6Lml9fY2xpXlI4iFAoNn0ecQDCIJIqYhkEsHicciTHQ9XPFi67r0tMHaJ02B/t7LCyv8Obr
      3+LKtRv0ut2nUSCN7ccPiafSLK5d8Zuo7ccPmZyevVAiUCsXWVy77InaojEOdrboa106w4eb
      nZjEMg0qxSNkWca2bV9jkp+Zo6d53blpGAx0j4/YfPwINaDSajZJptJMTE2fOgVUVcWyLCKR
      KN2Op+Ks1WpMzsySSGfGVISKohCORsGx/BNh69EDMhOTyLKMLCssraxx9913eOnl95POZanV
      KkSjMa7dfIH9nS3a52hT8oUZjve83mN2YQnXMp5Z/kiiSKNeZ3F5leLRIYvLq2hDSfalq9fo
      tNuogQCiJFMrl06hYqP3MPpnIBhkoOvEE3FkWcY0zLEe7ixcXVVVP4M7jkM4FCYWi/mv/SRi
      4ziOp5c68TVZlkln0pSKJT/7S5JEPB5H0zR0XWdiappwNMr6fW8+t9tukc1P+oSpJMtMzs6d
      K6a8+Z73YZom3U6buYVFikeHvPS+93uwazxOp9VC7/fgDClEr99DDYaolovUa3WKRx55Whky
      2qdWtOM4NGtVOq2mT01rnTbFw31iiSTLl6+xeUbt3GrUx3D76YUlrESS0tEBl67dYG9rAzUY
      IleY8ep+XadWLpKfnqHbaqBIIp1Wi1AohIvLg7vew+r3PcKt2aiTHGaNEek1EmgVCgVUVaVW
      9fDicrmMaZrML63QSqVpN+r0e5qfGStHB2MfYq1cpFYuMrOwRLNeo9/vO6jm2wAAIABJREFU
      8a2vfcX/viTL5AszHB2cfzyHo1FKRwfDDfZ8oqxAKMT+3g7dThtjcLrBX1y9RDgaQ3Bdrly/
      gaqolEtFLl+/we7WFuFImGqlwvzCIt/4yqukc3n2tzf95GI/VRYU5hf9fx+9vk67g6J4osNg
      MDi2+E+9XjVANpej3+/7LK+ienB1PB5H13UCgQCFuXlkJUC71URSFCrHR6fEg9VSkVajzuq1
      m4iiyNvf/BorV69TPNj3hXyjMAYDHNchEAhyfHREo1ZjZm4eQYB2s0mn3SIcDmOfAZIoSgDD
      ss4VOJ6b0m3LYv3+HaZm5wmGwtTKRTqtJj2ty9q1m+xurjPQz+cBivu7pLM51q7fxLZt+v0+
      /X7f3yRqIEB+ehZzMPCIsnDYe5iSSE/rnfk7tXabaDyBofeJRCKkUin29/d9GPVkdmw0Gtjr
      j7xjfXqacDiKbVs4jk29fjbBdrCzRX56lmQmOyYFXrp0lfV7t899r/AkU07kJxHc5+MXEEQc
      yzpz8aeyOVzbIhCKMTAMMtkct2+9yfe88hEEBHBdVDVALBZjZ2uThdU17rz5baZm51FVFUVR
      2DrBiUzPL9KoPtExpTNpchM59L6nhI1GowQDwbH3cvIUMAwDu1kjnEiRyWgMBgOfz3FdF1mW
      icViBINBLNth/cEt4qk0pmHQbjaIxeNDNWmMfq9HKBKmXq1SLx1jGAaRaISN+3fJT88SjkYp
      Hz3ZMPt7uwz0PpmJSfa3N5mem2fj8SPmFxZoNRok02k6zcaZJV8gHOFo/dGYqFAaEn+SLD/b
      F+h4f5e55VVqZQ8fti2Lx/duM7+8RqfdPFccNtK995p10pMF5lfWfG06eLv6YHvTf9iO4xAK
      hc5cDKOwTJ2p6RmKB3uk02mCwSCFQoF2u+3rz/s9za8H2+02nU4H8fAQQRCIxWK02xcPu5QO
      9wmGwqxeu8HuxjqT0zMXTiMBiEM2FiASjcIFuL//XiwLyxXO1cvk8lNYho4rwMHONqWjA2bn
      F3n1C39GMBTyPmxBoKd1SaYz7GxtYhoGB9ubhMNhHMdhcnoOQfTKIzWgYp9oSkcylOCwxwgG
      gqcIqpHUuNPp0Nf7xGIxzIFOMpOlVhsfUDEMg0gkQjpf4MHtW5imSaNaIT89S7vZ4PK1G9i2
      RavR4MX3vczu1hZzC96JpHW65AsFvv7lL1ItHVOYnR/73dVyCUEQyOQL2LbtcQqLSwx6GqFg
      gEFPO3Pxu4JIq9kkV3gyMyBJEh/+2CdoNZtE4/HnM8ZybOcUyrO7+ZjMxCSzSytnLpBKpUIm
      k0GWZfqtBrsb6742fdDv+138KMtYlkW73fYf/FnhOl6dG4lE/DcciUQ4OjrCdhzC4TCddmts
      gY+QH+BcWe7Tofd7rN+7w8LKJU/31D/7RBrFybHNVqtFIvJsWbgSDNFrn9YggcfIap0m2Ykp
      apUyut5H1/vcv/Mu8ARdGZV8K+HoGPLTG+q09re9z0VWFDLZLO4Jos51XJxhqWZa5pmLX9d1
      SmVv4CUYDIILjmkQiMYJhcL0+z0c2yEYChIMBpHVAKXi0diJHAh6p8pIQhOJxth49NDblEP9
      jiZ0/Zp8em6R/Z3xQRzw0K3R+1EDAeKxGFygrrVtG22gc7CzRTgSZW55lb3Nda9HrFaQFZV+
      r/d8G+Bwd4vZxZVTXXqtXETrhFm9dpOth/fGFp5t2xiGN+1j2zahUMhvYEPhCAurlwAoHx/S
      1zTmltdwHBtBELBMk+P93VMyiE6ng2NbKIEAA2NAKBSiUW9gmiaddptgIOCjTCfjeabFzoqd
      jUckM1muv+dl7r79JufpGUZ6qWgsiqo82wbFW1yDUzX6KNLZCURJxDQGZ+LzJyM/PXvmzMbJ
      sEyTZr2OY5/DIA/f1ug5aZpGs9XEtm0CgYD/9b7e9/Q8okgymaTf7yHJEkogRCSRpt/rcfRU
      MhydjDtbG+i9vn9qFWZmuX3rLZLDMmmE8MmKfIrpFgQBYSheBMhPTT978ktSONj1mmpPsXDM
      8uVrOI5Nr6+jlUsIgvh8G8B1XUTpbEhP7/fYuH+HpctXKR0ejDUwnU4HwzBIpVJjNVi/p/lH
      Ur4ww8TUDN12i+qQBZYVhemFJf8NVo6P/NKmeHjAzMIi7SEbOTqKXTymdgQ9jhCmyakCuXye
      WrXKRH6SVqtJv9cjHk9gGAaZXI5bb37nTA7D+z0KR3u7XLp+k4PdLbTOGXCki193h0LBCzMT
      gCArWL0WyhmbJTdZAFzqlTLpTOZCglOSJEKRyDOxc/Bg4pOIkCiJPio0Ohk6nQ7NVtMn/Pyf
      Fb2fFQSBvt4nZBhYlsXU7DyBUAh7oFM9PvRh0JMxUpvWq+OCthGg0D8x5JTOnS19mVte5WDL
      OxVC4TCxaPTCPssVRJr1OtFIhM7w8+p1uz54M7u4jK7rNOv15/cG7fd6hMIR+j3t9B90XTYf
      3KMwt0A4EvU7ftv25kYFQSCXy/niqZMxcnc4GZZpjpVVE1PT5KdnvP9wbEzTwnVcLNMiGo16
      bGAmy9HOJvpQHzIi3bITE3Q7XR8rXlxe4XBvj3A0wqBaxTSMcxc/QDyVYuvhferVMtPziyRS
      aY72nkgtRupSx3VwbAdFUTGftQEE0RO6yRYLq5dxHJvy0SF6v8fEVIFet0OrXiOTyXKuig5P
      Xr6z/pBAIEAkFiORTA3rZRHXdSjMzHJ8eEBhZpaNx+MEpsCTgSbHdtg/2EcUvMzuOA6KrKAP
      dJ/oGsWogYxncxxsb+LYNlNTUz7k+TR82te6Y64NF0U8mTxFtAqCOITNPQ5pfnEZHAvOyf6O
      46BbFqahg2OTj4UpdbxNJgIOUCsdk5+e++42QOlwn/nl1VP2FyfjaG+HZDrDwtplWpUS/X4f
      wzBwHAdtqHJ8uhSZW1ii3WqQyeZoNhokkikajRrpdJZut4NpGmMQWi6fJzs5hSLL1CtFMtks
      ydwkWrPOYDAgEAhgmk9qWr3fJ5PNYhgDWo0agigiiAJat0s8maR6wYTX9PwiB9tPZpAPd7eJ
      xOKsXrvB9qOHWJbJ5MwsR/u7njIzJKD3NKQL5qNdQWAwrJ2rpSebf3JmjmAoRCyZ4t6tN70T
      7IIRv1Q2RzyVGja4QVbXLlOrVVlevYQkSQwGA3L5PNFYDNdxTwnFXLzZZ9uxMQYG/X6fVCqF
      KIi4uNiOfYrIc10XXEhPTHL7O99CFAVf1zVq5kcQ9ahPKR8fEQpHWL16g73tDQbnKIgVRR1L
      RLnJAvFkEjUQ5PG927iuSyyRRBIAxp+v4zj0+31vMwsi9WoZXPjQbI6fvLnML3z26/RMmx9Z
      muAPN8uoAZVOu8Xi2uXxDZCfKvCpv/E3qVZKSJJEu9VisjCNaRhUK2Wsc+YATmaIkYTi8vUX
      ON7f8VEfRVF86GwUkagniV5YXqHX1bhy/Qabjx8RjcZIpdPUa56p7cnjU+/1qBzuISsqhbkl
      XKBbr1Cv10+pOwOBAK5tsb+zhWEYSJLEzvazMxEMGc5A4JTCVOu0Wb93h8W1KzTrVSRZ9iXJ
      kWgM17FBPDuv6LqOpAa8z08UmZicROtqpDMZapUKfVVBlmVEUfT9iSZn5pBkmWrx2C8vFEUl
      mc5w/9abPi9jGAbZbA57ON0Wi8cpF4+ZLExTr1ZJZTJMzc75r8UwDNSA6iE9juvLSQRBwDAN
      3z7GcRx/IsxxHFLZCdq1CsFAANPy/p+T4ILjOKc2Tr+nsX7/DrOLy15/d4bepzC/MCaqjCe9
      6btRHygIAvmpApxR+vT6feaGZU0gGGR2foHdx4+42+iz+c0HfKCQZqPe5f9bLxIIBpiSXCrt
      Gtul4/ENUKuUabS9nWyLNnq/z+HeHoOBTiqdZn9/n3gyNcaGekItCUXxCBHbthkMBtx5+w2u
      3HwJ2xzQ73bOhB4tyySZTqP3+4TCYUrFY/JTBeo1bxb4hfe+zOOn9C+jI9g0BrRqZSLxJOVy
      2ZdVn2yAR0RZuVx+ps/P0zG3snbmWOcoth8/8GYjot4YXiAQIJPJXDiU4QDxaBQBiMUSXnHj
      unTaLa698AKO7dA9ITBzHZda6Rit3Wb58lVsy8K0LELhMA9vvwNA8XCP2cVl3nnrDaSh3GQU
      sqxw7/a7yIpCKBwZm98YzVOPotfroSgKtmOP6Xli0RiWbTEYeBohSVFplIuUy2W/z3oarDjv
      We9vbxKORFm9eoPdEy4WwNimWVq7zN7W+tjvnZia9uDlM3rRSDhMq9lAUVXvNNtbJzHoI6kq
      Tn6at48OKDc1PjSb40evzPE/f/0O/aHGaWwDhCMRvvPGG2RzEz5bu7ezzZXrN9nd3qbdarKw
      enlsA4xksE8eupfB8vk8tq4hB0MooQg0GqcezEDXuX3rLYzBwN88wVAIyzRJplKeNQou6XTa
      z0RTU55OaYRRi6KEYRjouu5nf0VRsCwLTdNQFMWXXjwd+cIMsWSS/a3NMVIvGApj6PozdfeC
      KLK77mWtYDiCOdCRROFMDZBt2+gDA9uyCYXDfrlmWSbisGQQRYnaifHF0fe0bofD3S1kWabZ
      GBe6aZ0OiqKSyU9SfaqBtIZ8hGWaZPOTY6ORJ8tRb0w0gKJ6G0JVVPSBTigU8kpKzSsp4+kc
      htalVqv5soxRc3wy8VyEuPW0Luv37zC3vMqg36d0dEBuquD3gmoggAu+ARh45mfpVArxgjtg
      Op0OsUSKSumAG0GR7zQG6ANIBxqEey3+2lKej15a4qtbB1T6Bqmggm49NRDTbrUY6Popf50H
      d0+yoKfx4lx+kk67TSwep9/TvPFERcU0DQKigIDD9NwCxwd7dDqdsQc0ONG0glezK4qCosh+
      hhFFkWgkSjgcHvvgRhaGI1HdKMLDBabrOt1ul3A4TCgUotfreaWQLLOwcolK6ZjS0QFzS6vo
      /Z7fa8wtr/L47runHvLS6hrZbI7i8REzc/P0NI1BJovj2KhqgHAkQq/bwTmDCOt0O4TCUbaH
      WPRA170Sa0gg9ft98oXpsUVsWR587DiOP5gUjUWxTMtv9sErOxdWL53aACfjrMm6URIJBoPE
      E554T5ZkXMf1T4dOtzNkej0Vb7NSotfr+Z+XIAg+VDo6JZ4n9jbXmSwUWL12A8DX+M8sLLO7
      MX7yZiYmsQz9XHGfIAhMzsyzt/kIWddohWUqms5qSsaqFylZApm+SUs3+Na+lwQ+NZ+j4zwn
      DHoyqqVjMhN5amWPuLh87To9zZvDLczMMhh41PrRwT7Ts/NYpoksyQiigBwIER0OU2uaRrfb
      PfOBWZaFbdl+HRqJRM4cwB6ROJOTk2xvb/vCsGAwSDAUxKpann4/GGRydoH97Q1isko8mRzT
      M+1trRNPpVm6fJV6uQSue6azRTgcoVqt0O100LpdPwM6jj1kOeuEwhGMMzZAIBxFazfpnkgA
      Iwiw3WoxM7+I9hQrbFkmgviEVBsttrP8fJq1Gqls7swB+KmZOUpneH2GQx5jrKpeLxCLJ5ED
      QULhKLXh3IcoiqiBAIoaoFk+pl6vj9lXjvq6k197nggGg1imwf7mOlNzi6RzE1iGgWmM94kT
      UwUCslfanbcBXEHENA30fo8rYZkfuTzL6/tVMuEgRU0nGAywaYi89ao3cPRTV2d5/ahOLBz6
      7t2hu+32mGODbTuEhoZYtWoFURB9f5qtDc8QVVFVdK1DfmoSUVH9mnykHRlBbbmJHKl0ilAo
      NCwJROKxOJHw+OI/qe0XHJtYMk06nfbc3VQFWZH9OeNgMMjsopdV4sk0kWiU7ccPCQSCw59X
      kWWZbrvFwfYmuakCO+sPh84WNwid+NvVcolIJIKiKFSqVXS9T6fdIp5I0ut2vcH/M2Di0SnV
      03qnF4kgEAyFkRRl7LkKgoCL1weMSqpEIoFpmGeWc816lWQ6e+rr4E1MPc1mJzM51HCUWDqL
      FAiRyuZxXageH7K7/hBFVVHVAGZfo1OvUj7YpVQqYRjGKVOsUcP+vCEIAtFYdGieG2Jn/SGC
      ILJ05drYjHI4GiUWjRIOBb2h9zPCdV2SE5Mc7W7S03pczib4j+9s88nVGf7++y5RMV26msZE
      KsXq5SvEkyn+86NDtpsa7x5V/2p3hJ0cxH547w6JZIrekKiazE+i6/oQkTEwDZ1Ou42iyPQ7
      LWbm5tmzLARcn2BRVZVYPIaiKP68MC7EY3EfgTi5cARBwDRNWu0WiXiCUDxFPJFA0zRC4eEl
      F673c4WZGUrFIt1Oh3arxfTCEtOzc2RzEziOQ3ZiYihBNmk1GmRSKQJXrtHv99h69IDC3ILP
      SRSPjygeH1GY83wwj3o9YomEd0KFQwx6Xc5CQEVFJaQE6fef8AevfOwTVMsl0ukM/X6fQDBI
      6fiIj3zy+6nXqsRicbY2N/0TNTw8NdVAAHlYsw8GAyanZz0nN0UhlkiQnZwaK4VkRTlzcZaP
      DqkWj3zIFJ4sZMMwsCyTUChMIpvDtiyO93exhu4T/yW2JwDRaNQ3RxAEzzqyVi4SSyT8n1FV
      lbmFReyBfsqJ8GR4g+4apq5TiAQQRQHHtvni+gHrXRNREhEdiV/62Evc3j/m0502pNLsb296
      5gt/lTdQPDxgamaO44M9XNelNVTipZJJvxxwXc/D0rEtv563LItus8bC6hrbjx/RH47WpTPp
      Uwt99IBGXx99z3VdX+4cCoewHZt+p0l6YpLqkGgTBAFEr7kTlCCHu096GFVVkVDY391maWWN
      ve1tDyt3XVKZDI8e3OPy1es8vH+X6bmFU16k4DW8es9bzNmJyYst+QSR4+Nj6pUyq9dusrP+
      0IOVyyXC4QilUomFoTNeMpXGsW1kWaHZqBOORpkuFMhkstiOTa1S4eUPfoitjcdYpkV+aorN
      jY2xrJnK5li6dJXjg136msbSpatD06zxBVSv1zkaDoZLkkQ4HPYcOYYssCzLuK5Dt1Gj2Wwx
      s7BMu9OmU6/Sbref20zg1OMYZn/ALyFD8RCmZaIqCrKigOsys7CEYJ9f9oC3HlL5KTbuvks2
      IPErP/AKv/iZr7JZ9dQIuhJCVU1SqSi3N3d4ba/IS0GLLxwcMLu4zAcCTznDxRLJ53oTA73v
      DSKfeCEjz5dRcyYIAolEwqffR0iDpmm0qiWWLl/h7ttvEgoGfeTo6UZtlG1c18WyLJrNpkd4
      yJI/S9vr9YhGoliWRSaTodPpIAgCqVwew7DYe2rIwhgMON7fZXntEg/v30XrdpmYnMI0DJKp
      NNFojMpwccqKcuo1Febmfe1NNB4nFFDPHMQYvf6+afqK2fV7t1m5cp1+T0OQvJHLaDTGa1//
      CgtLK1SGwrPBEBXTNI12K4ysqFSPyyytrtHTNNqtFgtLy5SLRQ53t5FkmVgsTjQWo1GvUzrc
      ozAzRygcolauEI1FWbt2cyzDPh0nRYPAcMgoQrPZJBQK0qqVcSQFRVGYmpqiVCphWePN+PPE
      yJRXURQy6Yz/fpvNJrVy0ZNzKzIBWeJZ58zAMKkc7uMisBgN8MV7G2hKiH/4vglcF745CCDi
      omhN/tdXd/nBxQk+u1Xie6YzmHqdPys+dT+AJMvn2ho+Hb4R0zBDj0qZk4xvIBjwj9d+v08o
      6JUnoijSKB8zu7DE8f4u/V5/6O6lnjquTdOk0WigD3S/uR39Dl+f0u8TjMZxEZicnUeWZXrt
      JocHB2MaJPBgNsdxWH/4xDKkNEQg6icMmM7TpUSiMV8KkZ8sXJj9BVmlUz30TzPAdzw4EgSu
      3HyR++/eAvCVnh6ZE/JlwfV6ndLRIZOFab7x6peIRmMIQ4hakr0NGo/HWV5do9/rkcnmEERP
      UFgoTOPa3kn8zltvMOj/6JmvU1VVFFVB62o+p6NpGqlUing8TqfToVwus3b1OppjUSqVvivb
      w5MxIkRN0yQcCmNaJp1Oh8FwfrqQSuMMZQwXhW3bhOJJcp0SP/OBFf70/jYLiTAvRFu8UWqj
      6zrq7DJTYZVf+uuf4hf+8C/5ykGVoCTyQj7J793dJZqdHG+Cm7Uqh7s7rF1/AVlWzvvbABzt
      7jCzuEw2m2VmZobJyUkURSGeiPuTRU8v5v4JrF0SRQJD++xgKOgf0aPNo8jeAPbR0RGBYIBU
      MuX3BCNs/6TuRFZVlHCEo71tWtUypmH4i/8kLt9qNDynt2dEPJk8NVxemF3geAgRT07PEFDO
      ryBdQaTVauI6DjFVJh7wjnJRAFV8Mkj+dGkyUZj2RYFeORLAsiz2djwGu9vt0Gm3qFUrvsVI
      u9nEsi2i8biHozsuiWSa3e0t4okEiqoSiUbPVZYGQ0EPqRuiTKFQiEQiwWAw8N08CoWCb/V4
      0g3uu41mo+nPhJcrZarVqgd4CB773Wk1nuuCi0AkhmEM2Gx2+fSdTd6o67y6eeQpbSMplpMR
      eu02B22N232Bn/vpv0M8Ficdj/GXW0U00yEcjZ3uATwz2ndZvnyN8vHhuQ4D9lDwFRyWMLru
      ESdRNeoTT2dp3U9GKBQklU77NiijB24MDDRN87REA4NsLuv59g90fxRyFK7rEkulCITCFG+/
      gyRJ6Lru+1eCl3VGpVi9UqLTarBy9TrH+3tj1zyNQh4SaaOYX1nzrxLqdrzhm1QqfUqROBgM
      kBUVRVXp9fsEAyqWofK3X55FFgX+4t4Wld6AmWiQBz2H7fVHLKxe8hbD8SGRaGzs1PF6ntNM
      K8Dlm+8Zu5Hl7rvvEI1G6XY81l0cnsiPH9wnEAhcWKoYAwNU7+9ls1kPohzeETBKYiOsv9vt
      0ul0fI7mosjkJzEHg1Nz1FpXQ+/rRGNRn9mPRCKeqC8SeeZAkeM4hONJ9m+/RavRxLFi1Bst
      BqEMluPw6OiQ7FyOa4kQXz6sMjs/z8pMgX/7D/4W+sDg7//7/4f5FW8I/9wUtvnwHoXZeULh
      yLmXQdiWhSC4dJtNgsEgDg444LjOabjvjGhUSsRTWRqVom9YdLLMMQaGt5kse4yit23bb44c
      xyEYjlI52PXdi1ut1ilJxMkwDYON+3eZGr6/UcYdxfTcoj+gHY0n0Pu9MRy9MDvvSR6eyoKO
      6xKMRDzD2kAQyzSJDbr8wf09UokkhUiQdyttyn2DSDDIxydj/NlwbDFfmCGbn+TerZPXUbmn
      LigJhkLMLa1y/503UQNBFteu0G7WadaqSJI3m9toNHBs25c+6LqXOCamzr6aaVTu5PP5sZIW
      vAGfdNpzBBmhb6NnetGcRSKVRlFUREFkcS3PzsbjMWbdtm1azZZPwhm2QbVaJZ7OoDyj+BeV
      AI1qmcFgwEcuLfLzP/AKv/Hn3+DLDzZRJZFsSGWvo/PTr7yXe+UG//K3fofZ/ATXcgkEQSCd
      L9DvdbEt62Ie4Gh/F2Ogs7By6czvH+xsE016ZkilUolyqUxP6/lS27PiaUhLEARMw0Tv6/6k
      l+fQIBMMBb0PQsDP4I7jkE6lfRJHVlRs06Beq9Fut30I9mScdxJ50J7J0qUrY44Jo9kHQRAo
      zM2PLf5gKEw0Ej6zBBAFAcuyvIyrdbmkl5EtA1cJUm53+PJ+FVGAH1ydZi4a4NX9J2OFP1yI
      EO83CYbC/t8Wh8rKUWQmJpmYmuHxvdvYlkVf67L9+AG2ZbNy9TqBUPjcm3qWL18bOzFOhqqq
      pFIpVFUd0wE1Gg3fNQLAsj1yMhaLXejcrKgqqewExYM9KsUjdjfXWVy9RDY/eepnB4MBuN4m
      DASCY6jfWWE7Dl2t61cKj4oVvvZom0fHHgIYU2RmYyEGpsU//cxXqVsu3YHBo6MSn7u7wZc2
      j9B7HX75PfN8eGHq2TBos16j1+2ydv0mWw/vY1mW7/gViURwHJtkMkm326XZaNKoN5AkiWw2
      ixo4DWHZ9hOGV5Zlj6ARJVLplL+oRhk7HA6jDHuRUCjkIUCi5E8nua5LMjtBr1n3DZtG/j+j
      bPWsk6hZq9Kq11hcu0KrUUOUJErDgexsfvKUDd/UzOxQkns6vOdisbe3S61UxJZs1utdCrEQ
      i2GF985leXlukkwqyWf/+GskAgqLiTAP6l5D2ahVWbp0xbdI9AaRvIU2v7JGp9Vkb2vdc8Ez
      TaLRGO1WE2OgU9zfJT89iyyrDAYmut73J6gWVr17Dlz3B0+95nA4TDKZxLZtH1QA79Rot9t+
      OZtMJikXj/1xy4tice0yj0/IZxzbZuvRA5KZLMuXr7K7ue5Ln0ewNsDkzAyOaSBd0F+Iikq3
      UsHW+/zApVmUSJw/fucRh02vlP2p914mE4uwlo7xO28+4E7PO6nimRylgz2WL11FN0z+6N4O
      neBzzgQbo0sqLl+j3azR73aRZZmVK1eoFI8IqCpzc3P+7SGO41AqlQiFQ2QyGVRV9Y9OXdd9
      W8TREZgvTNOuV7Asy2cZXdclEo5gKAahYMjbOMNGSdM0ZEUhkc5h6X3vyB+yrfAEITrplnxR
      uK5L9fiAaCLJ5Mw8b7/meWQmUpkxn8pkJku7USc0cfZFd67rjSg+eOcNXsxE+JGrC/z6V2/x
      a9//Pn75K7e5U+pwq9plOZsgIIksJMK4gshv/+TH+Wd/9ho9KUC6UWNp9RKWbdPrdlBUlbXr
      N4fGsF5Z98pHPk65VERRFI6PDrl28wU67TblUpFIJEI2l6NUKqKoAcLRGMWDvXOvUAoEAtTr
      dRqNBvPz835tX6lU/LvUFEWhXC6zevU6udwE4UgESZaxTJOH9+7wykc/zq033+Dytevs7Oyy
      9fBsU97m0Cp/YfUy/Z5G6XDf/6xlRSEYCFw4TecCzUaDH1vMstfS+IkX18gvLPPWzhH//Hf/
      CICvbx/xz37oo7iixOulFqFo1FOs2g6K61Da3WLG7dEIZlHjye+OCNt8eI/55RUSqTT9TgvH
      cZGG2nWA6elpyuWy30B1O120rsbMzAwT+Qnq9TqmaTLQB/T7fRJxD5e2bW8oIxAIDCG5AOFY
      HGF4L67jOCRicYKRGM1qGWEoyHMsk1qt6rtMj2I0mfS82hRFUQg9/TEhAAAgAElEQVSGguha
      l9tvfpvVazeRRHHsUrlINEahUIAzSCX/Z4Y+SP1+n5pg87n7O7xvboqvHtapmQ6W4xKYnuet
      w31Cikw2HOCre1X+4N0NGv0Bn5qNUuo1KNYGHPdN5lcugevQrNXGFnCpdDwUn3kuGa7rcnx4
      wPzSsictD4W59cbrgMftqIHzL48YScYdx2F7e5upqSmazaZ/Co8IzFgiQaNeR5ZEej3Nu9N3
      d5v3f++HcV3oaRrdTsfzLH1GE7uz/pBILM78yhr7Wxu4rsvC8irOcA7hrDBNE2SVdqMOk2F6
      psV+Z8BXv/U2X3+4xa/85A/gAvfqGpuGyB9+9ZtEEwmvpFaDNOtV/tWPetfE/ovf/yx23yVV
      Obp4A4xq8dFDAtjd3GBqZpZMbtKv14Rh7dtzeuTzeUqlkp+FHcdhf3+f/f19wuGwB7kpMvF4
      HFmSCYfDhEMhArML2Lbls8etWnXIKntKz73NdQKBANPziyBJtOtVGrWaf7KMrusZxfMu/hFh
      5/0HBAIq6/dus3r1Bt3hPKkkSeQmpxgMla5nheM4BGMJttYfklIkfvbDN/lPdzwWuajpGIbB
      D99Y4fuvr/KrXxkwcAW+OGSZv7C+T74wzZvVOu9dmef+/Q1mwgpbj+4zNTNHPBajUQtgDmHM
      7fV1TNMgnc1SPDoiPOyd7r5zi0a9RviEcLDTajK7tIJtWcTip4mwky7Pg8GAnZ0dwCs5DcNA
      VVUikQiNRoN0Ls/Gwwc+37O0ssqX/vzzZHMTRONx3nnrjXNPmqdD67SJxuKEozFSySSqIiOc
      A38OBgPP9rF4zNTkJHuNDnsdHUmAt3eO2Kt7zG8sFORnfuxjAPxfr36bcCxOq14lF0/RPzrg
      C3cfE5BEZFEk4Q5YTUXP3gDRWHR4Izn+By5Jko+rD3oarVqF9ETeF7KNpoe6WpeJiQkajQat
      VsvXlgC+HDk3kUOSJE8TonjlUa/dpF6v02w2/QWlKAqRSGTs97frVU+9KEjMLa+ys7FOUBCe
      qzY9K4Ihj4sYGb2OPnjpxODF7OIyIUVCFM/nRiKpDMW9bd4zmeZnP/EBfu+1d/jy+gGm47C4
      dplUJkdM8er5oNZgKhwkdPUGZmmP+ViQbRRevLLCP/7EBxElifutAS+sJjxSy7KYmJziaH93
      6Nrg9Qwjj/ueptHTnojwTv57PJkiPzFBJKAQUE+//vOgzNHVsbZtE41GyeSneHTvLu0TsPjt
      W16vUi4VmV9efe7FP4rS0QErV697ZKJ9/pyvqqr0hsmntL/NT37yvfzrb92nr2l8fCZFSbf4
      /YfHPLh7m791VAcEWt0uMUlmojCHiwe8tGo1siGVG7k4hWQMOEcLJAjenbZaVzv1ddd10Xra
      UM03frP7SM6g9TSSyaRfO57Ek0emqZFwBElRkQNBSgd7vi7lZIyOw9HfGBE1nU6HYDBIt1Fj
      ZmmFXqNKr9ej1WqhaafVmBdFLOpZAcbjcURBJBgMovd1mrUKE1PTBAMBIsHAuXIHANOyGdSq
      aM0GgVyM/Wqdb+0U+V9+8IP80b1tuskkDa3F1x5u8ek375EJqWzVO3zvjMst3eBIgIWAwa1H
      Jf531yWoNRj0XOLJJKZhEE8k0dptZheWONjbGRMjXhSRWIzpmRn6nRbSUwrOZ8XI4zMwnFmQ
      ghH/+qQzn8FfURvUbTXJZrK4F0zSCZJEo16n32kTK8zxD/74G/zWf/tfEVYU/o+vvcmv//jH
      +PU//RrLl6/x2tYBtmmQTqcJqAGMXhslFCMRUPnI6iyPD0v86VYJSfDMts7cAKbhITymavoE
      1cnbAAf6gHKpTDyVJRwK0+v3/MGVETymD3SCoSAzMzPUajVaw5sPXddzc5BVFTUUoXy4d6Zb
      BHinz8hCfaQZMU2TcDhMrVZjMBiwnPQc4o6Ojvys9bzXKo1GAG3dJhqJEgqFaLa8+rfX7bKw
      dgV7oHsuBBdEXx/wQkLl499zif1mF6unIYgin324z27XIBrT+akbS4DL//bl72A6DlezceIB
      mfbAJBuLMLBNnHiauzsHVLs9pFCEQKWMIytIkowkioQCKi++/4O4jo3W1Xh8gV2jJMue/fdw
      444cOp43RgywKIqo4SiV4sUXg/9VFKKSLHtE6AWL33VdDNNmVXX4wY+8wO+8cY/f/Uf/DTvl
      Krf3i7R0r7qwLZtG65jZmdkxiFbTNMoHO6zls0SjUb69f4f5qIosScQU+WwewDAMcJ9k65PY
      8Ciisag3umaZ/vefdhIeDE1NE4mEn1Fc1yUYChMIx6iXjnwq/OkQBIFwxJsAk2WvVzg5OxCP
      x4cIU8DP+mfNp14UpmmidT1FaqVa4eDwgE6n420K2/a0/c9Y/C4C2akCWy2Nv1g/4D++s4lt
      WcyFZVrBOBOqJ8/9wlaRF7/nQ/zEpz6OEo4iSBJf36syu7TCTrXBnhNAblYoNlp09QFWt8Wy
      02Fnc4Pbt94ikkhgmSb1SondjUe0GxWuvfTec5vG5bXLCCcQlRFHMoqF5ZULm+NR/zeSmRi6
      /l092+eJmflF3GdcH4sk027VeVxt8Lnb68iSRCoaYaOhceugzEI+x+/d3aOwtOLPp4/CcRyW
      FJtf/vANvvPgMb/42a/RTU5SMxxmYyEE8ZyJMNd16ff7vsX1SRgTGDaNXjnSqhp+eXKyVBlt
      Bk3TEBCYmJhA13UUVSU7OUWzUmR397T728nXMNKnJxIJMpmM32yDR25FhwPplUrFV1Be9CEl
      M1lwveGRUei6zmAwIBL1GklRFL0rmyTZsxJ5xgYIRL1Ga/+oRDUUoKf1eWt7n16vz1bxET9x
      c4W3jiuEMlmm8nl+9JUP8BMvrfLawy3+9Z98BVXX+WghyVvVNk40wXLEQnYs3qm0+cv9Jya+
      jm2jBIJUjg5xh84P7VqZG+99P/feeWvMUmR+eRXJHbc1icVixOPxJ88imfLKmzPq9lHSEUWR
      TL5AcX+PXu+MYZ4T8d0672XzkyiicCGh5q1DnRcTQTZqA24flskkE6iZCRamG6xM5Xh5ZZ74
      lZeQwlH+0b/4lz6f0ev1mMzlCKgJ/uTuJoZl41o29s4mP319jsTcIk3DPh8FMk2TbrfrN8Gj
      7Oq63rzo/MolKod7vnfNaPGfFHhZlkWtWiOfz5NIJFACQdRQhFa1RKVSeWZGabfaLCwsjAnf
      FEWh0Wg8QW54slEuepjBUJh4IkVveHnGzsZjv5b2ND4et5FKp3Adl3qrTiKdRT2P9cLz+HEF
      gWrpmFQowG//w5/ki3fX+c0vfou46h2voXCYDy9H+O037vPP/8P/TavX52++sMqt/SK5qQIH
      25uURYF0UGFVsXit1CYbDrKYCDEdDfFWqcn3FVLsmuZQ6OY5bY/QuV5vncs3XqRSPMZxHcLh
      CJGgeoqLP5UdXYdoLO5dY3pG+FefSqJ/78JFcZE4blROjYjJ0LDcPKspH/udsoLT6/PXbyyQ
      SSVIxuL0wwm+83iLX//0nzKZjDOdTqDWK5SqDaqNJjaQTCSZzOX4d7/xawD88i/8U35jpcDP
      ff41Bo7Lm5UOv/jJJQbOU01wYW6B4DvvYpmG37iapumXIDDE7IdvxDBNRHFc1gD4G6HT7jAz
      O0t2atq7eLvXpXW0z8HBwXMRVNls1oNFh5tvJMYa9Ruu6/qX7oXD4VMX+p38cGYXl/0LGuqV
      MvMrl+i2m2Pis5GvkNb1ZpxVVbmQmLEcF6vTxjAM+obJF++u8+2NPQzboRAPkw2HuLN3zFvl
      FuFIhDt7BxTmFvnNV7+Dqgb4oZkE5K7w/767iSJK7LV7uI5DJhxE03U22gMUSeYbpTaLqTlM
      w/QBin6vj4VHHB7tblKYncfs9xDF83X0JyUht99+i+Mz5oRHIQgC6YlJ9rY2ntngxlNpIrE4
      S5eucrS3c2r8cpTARtXBzNw8wjOuNHUch2g6Ra1c4hc/93XeM1/gw5cWee+LL7JfrdPp63T6
      OoLjsnv/Dj/7e58jGoshAK12i0zqyWyLKMBhyyuTZUnkv/7Q+9ja2mZgP3UCVItHTE7PEAqH
      0bsdjIHnqjBSAo5G4gaDAY/uvMPK1RuUD/d89Go04mYNPe9nZ2cJJ9P0mt6NkFubm8/diE1M
      TPiuD6MPxLsyqY4sy5TLZZLJJJJlIckK8USCdquFLMs06jWSqbTn0qBpZKemxxhdx3HYfvyA
      eDLl3QB/4iLAke1IMpO9kJhBlKiXSkQlgZ975QUC6RzffLTN65ueXPpv3Fjl5YVpKp0et/78
      dQKBAOlcnka1zNzCMv1ej2/sHJLKZJjJpJiUHVxJonBzhYP9fa6qLtcXZgH49KGGNehjC+JY
      eXlSatLr9QjK0oXN6PPcvA7DE7HbZYJx786zf6dMdmKSR3c8n6LC3AKBYIj97Q2/LBNPkKWz
      i8tIOEjKxdlfCgRJ9Zv893/vR/m3n/siqZUrBF98kf/w+c/wyUvzrE5NsH5c5hd+7zMoqkps
      WN6NkuK7d+/yT37+F7yLUSqHrM1NcDkb5ydeWOXmlUu8vbVHZW9vfAMIgkDxYM/3lldDEVZm
      Zmk3W0RiUd8uo1Q8ZnZ+AdM0iacyOJZJu9kYWg56TeXs7CyCKOKecApbWFhgb2/vuTH7YrGI
      rusUCgVEUaRcLvuzAIlEgkg8SavZIJXJeCa4EwMQBFKZDIlEkv29HVavXOXdt9480+On3WzQ
      07osX75GvVKiWa8Nm/QQ4VDoXGJmdPr96EKabCTIdDLGytoSjiByZ8czff2Dd9b53utXeLBf
      9eeUZUXF7GlMOxq3iwesRRV6uRn2D97iA/MpvlTu0X/8mNlEhHeKGrdamyTTWaLRmHdN0pH3
      u0fjoCdP3GAwONb0Pm9kJvKogYA/5zCKtWs3xy7YOC8WL11h80RyGU3LrV67iQCUjg/pDp2m
      k5ks0XAQ4Tn6BX0wQB+aV2WzWf6nX/1VRFHko9dWMd79Jnz/9zE7M8v/+bkvsNNo+aSrZVlY
      lkUoEGT9zrsMhuThw86AjyzOUGq2+c2/+Br394/ZKFbGN8AowwO0202i0ZjnshuP+7OqG48f
      ks5k6Wkatm2xu7nO2vWbNGpVOk0PJx5dkqaEo2hN78Ltkb7/aevy82KE7DSbTX/WoN/v+6WY
      ruskMzLRWJxGvUazXicSiyKJEpFolEQyhWEYvP36axfOJVimyebDe8wtr6J1Ozi2zcLy6rnE
      jGGamJZNKpPh9aNdFAH+u4U5PvOt7/BHtx7ya3/vx1EVmV5ykm9vbvK7b9wjlkh4Dbrr8vJc
      nn/88ffz7/7S4uvreyQar3MjHuLzm0V0OUAuqPDL71vgl77URM5NIwteb+U6nkeQpmmoisfE
      4kI8ESeZyQ3vJPvuhlQi0SiJVJry8RHLl6/SajaoFo9Zu3aT7ccPz72XeRSFuXmOh+TcyYjG
      4liWyfajByRSaWaXVhAQCAUDCM8AFQD6nTZ/9/te5rUH6/yd3/gtPv7CFerf+gLplz9KdHKa
      vXckWgOLVyYneGFlgd03PTh4NKI50Af87Q/e4BOXl3h8cEhbN7jy/T/M9ESOf/Kvfo2C2OFn
      Xr7E7996qgc4OReazubY3XjMi+99mVq14g2a9PusXLrC3s42mqYRDoc93Y8g0uv1fNpc13V6
      /T6xQMg3St3b2/uuYLSThNZIQCfLMprmMYKZTIbD/T0EUaJUPPI2qKIgiRL9vnfLvDm08X6e
      2NtcZ+XKdQa9rqf2PM992IW5hUUe3rvLB3JRjMGAT795j7VsAkuQ+NqDDVZnZ3jlpQXP8iQa
      JxxP0WnWkYwBrx0eMv36u6RtnamgxGIyxld2Sxi2Axh0OvDzf/o6wcICMo7ngo1Lr1knGoky
      0Ae0ui0GupdIBoaJIkn+aKYrSgwGntnWoK+de3u6JEnMLa365d/x3g6hcGTsWtyLIj89g2Wa
      pwaKwtEYqdwE2488QVyrUQfHJjdVwDEHZ1/UF4rQajZIZ3M0alXSsQgfuupN7X394RbvXZpF
      29tEXLhMcmae/A/9FPGvvMq//5Mv8u7Wrv87Lcvix77ve3nlpZt85vN/yrc2dikVi7x6UOdX
      v/+HcQHBGLCrdfjPw+c3tgFGikpPkOZJim+9+R2CwSDRaBTDMNh89MB34+20ZCZO2NpFol5z
      5rou4XjSYyAlyVdr/pfG6IQakWKZ/BQPbt/yF/lJSC8aTzzzBvuno3x8yNLaZUztbGQEwHUc
      ut0u07Nz2N0SH1ieI5dJs3dc4uPX17h1VOOP72zy+Tvr7BVLiEC7XqWwsMTBzhaZgMwnp+L8
      2uYOpa6OIkqkgiq/8on38D986W1eyka5pUFCFsF1cUSZrQf3fLv3UHjceGB6dt7Pqu7QgaJR
      rXhTa9kJb0ovGj3lWL2weokHn/uMLx2XJAnbMtl5fPHilxWFhdXLFA926Z6BIE3NzJ26RDGd
      TqMq6rnZ3xjoFGZmeXD3Nq987JO89uUv8CdfepXPPdhjMhknNbdIYOEKpWqd5Mw8qXSaH/6x
      H6enG9w/LCHKNr1+D9MweeWlm1yan6Vmwb/54uu8OJHg5z72Pr7wx5/mjf0yP/+pDyJLIvc3
      tvhPDw/GN0AgEEAURW8gxHVJpjO0m42h/kTzkRhZlv3rSfuaxtzSMolMlnrZuyozm8shDVGa
      Uqn0XTsHXBQjdwnDtHCfug7pZDjPMVf6dITCEQbd9pnePuANY5iOQ1ar8KjcIJJNMzUzw0wi
      wh++u87/+Hd/ktcfbvBvPv8qxU6XSCLpk4m9Ro1YIsVfW8mjizL7zS59y6YQklivD/j8+iGv
      rM3zze1jhGAEAXAEkdLxkf8eo7Gof9uhIAjMLiyBZYAo4goC5UrFd4ZzXZd6xXOZKPH/s/be
      AZKc5dXvr6q6uqpzmu6enGdndlcbtUlISEJIQgIhIZNM8GeDAcuR6wQXW/5McADbBJOMsYnG
      QggJTJRAAUWklVabw4SdnFPnXOn+UdO9MztBAt/zz+7O1nSoesPzPs95zrHlUoRV3WWlQh6r
      pmxn1vozqiHmRhm1aH0DHp+fiyvZtMsRicVZWvGSW41EMklrIIS5yQTQdZ25mWk6e3oZuHCe
      hoCPfTE/++u2s1Qx2eECf6SO//zqN2h57ihve+tbwOPl7JkzzMzOEK2LUimXaW1u4pP//V0a
      g35C5SySKPDCbAL/2Yu0eBRuagzwszMDeBWZqCySSl7mD+B0Om3pvWKRualxmtq7sExbx1J1
      qbVc7uqHkM9lmZ+ewO12E29sRHLIqG4PybnpmqLD6kFaF42haRqBYJB8LofH62V2eoqmllYm
      x8fweH2UisUNG7irk08QBPzhyBonx8uxqR3QJnB5PIRCQcQtDCkkp0JuZobbDl+F0j/Kb910
      HYrs4O57fkjZMPn+0ZNcmJhGEoU1anb5fJ5Oh86FxRRPpiSOzSYxRQctXokLyTy3dzdwbD7J
      h2+7llOzCUS/b8XowVhjPQt2Xl4QBPyBID6fFwwdSxBIpbMsza8ffFXZwsW5WbKrlBxWCxID
      axY3l8u1rpci1tiMVilvqRjiD4Zr3tKr4VTdVEqFTcMxhyjgEB1omoZhWVQkmf/72Cm2BxRO
      zyU4lNDYn4WHn36W7777PQiVMl/6j//gqSeeQHbKLC4tcs2hQ3zsrz/E8Ogof/nnf8aHXrWf
      kzOL7PArLGRy7IqFOJoocnFilHcf2sH/nB5iRzS4PgtUDSdKpRKzE6O0dPYwNzWOsXK6rq78
      VYm+QCBQy9VnkssEQhHy6SSVSmUdTx+gpa0dy7KYmhjnir37GB4c4IbX3Mr46Ag7d+8hFKmj
      /+wZ5jeQJKkWc5yqSjGf31KM9VeqTAoCDU0tSFsMftM0KaXThFUHf3n/I1R0nVcdOsDuzlb+
      5I2vozUaQW3rBVnhrrv/tvZ7pVIJvVTktYd7qZwc4JGBcWCeXfUR9td5ybkDjE5OM57I8MEH
      j+JUVYJOJ5YoUckXanx8WZZJJVMEQ0G0ikZDcwsYOqZlkSuUmJkc3/Bzr74PxfylCVBcqexW
      c/OrY/PLaS2+QBBJkljYQHe0iuqB+HKEozHq6iI1TtJmn1HXdfLlFPt6u/mb9/8RYxOTfOgj
      H2W5WOEdb30rna0tHD11hm985z727NzBz37xOA7Zsc6RPuhS2d4Q5W8eP4Mn1sRv9ASYLmjs
      OnSE3zx4DZ/7z6+ClqYvGuS6jvr1WaBq0UMQBHRNZ/DsaTr7djI3OVq7KdUVwik4a3wd07Sr
      kA6nQjGTqjWmXx77yyvaPw1NTZw/fYqGpmZmZ6aJ1NkGzOVSCa/fv+EEkCQJSZIIRKKMDlzY
      MqP0UuSsaqufZVk0NLUgmjqwRZ5cktkTNHnjtUfQVC+JioEhSnzxx49SqlR49y2vwmvq6NgO
      NYVkgoA/QE9nOx+9+68ZGxujd/LjdBzczn+8cIFsoUC8sYe3Hz7AZ3/6OO5smbr6BgTT/kym
      VkHXKsQam8hnUraO6YpQV3NbB6JpYFomOuLLsh+6HJWynVionvuqfgGmadZ+bt8nmVhDI8P9
      5zd9Ldtydb2bZntXDx7X1kza2s7jVJgaHaXcZlthtcbr+MKfvIc//vxXEBwSCALhq/bys2//
      iJ/+4gkC4Qhhj4/lFUGDMxdHePt7f49dYQ83djdxci7JNqFIf8ZFxbQ4nTVoAZbyJR44dp5o
      fQPPn7zsDLB6QImCWDMYGzhzkt5de5ifsmd41RPAF/DVBr+qqLgDIQrpJIlEomaUcTlOvfhC
      7eZqmrYy6Iu43B4y6dRLltSdikommXzJdKrqctHZu5356al1NN7VLizBcASPW0XZojBjmCbu
      YIhnLpxmaD7Bn73+BvpamsgLEncfPYEgwHtedyNLY0N84Gv3kSuWECWRRDLBa296NaIo0t7e
      zmxJZ2LZLrTFo1F2x0I8fvw0TtOgsakFp8NBIV+qsTBDgQC6YeBtamFx1g4pA+E63KqKoVUw
      BIm5i/1bJhiq4mV+v59Q6JL4bvXeV3+3mkO3LGtN/N/Zt2NDqfjVaO3axvhlDqL+YAi3S7H7
      RLdANfNYMTRMvcLPH3+Cqelp3nfrq5Ask7lMjn8tTlOf0Zjc0YDZFadyvJ+luWki8cYaE8Al
      CtwcdnDf4DgPXzDZE/Hymztb+dDDL+JQXfzj4YN84d+/zGgiS2Nbu91um8+s5wJVKRCrt0DD
      MBg6d5aenVcwOzGKaayowkk2W1AURFw+P3qpSDqdrq0gG4Uhlw/cqs5OtdFiq4dZLBZpaOuo
      pdg2Q6yhiaX5OdLJhG2w19zCzPilEn3VScXpVKhvbETaStsTW4bjUFDmz9/9Fv7+h49yIdrJ
      uWSSq+NB3nbjtXz9wUf5zAM/QZIk0sUSksNmvZZKJb513/0AnDx9hjtbwzyQy/Ke/d3ces0R
      BKfKyRcf4abedoYuLhMIR0gm7bqJKIo2FVkUMXWNaH2TTf/QyhhaBW8kxtTged61q43PvTiM
      BfTu2LkiLuyp2Ypa2Nr+E2Oja6yM6uL1a+715QrPwVCIrm29LC4ssO/AIRKJ5ZVMkV7bxZ2y
      k7HRYSrlUo1XVVP6jte/ZMHrkrQKtMbq+OKH/pSBkVFm5+bY1dHKs2fO4/R4yZoGFcM+dypu
      F5WQDxAoFnI4FRUL2Oso0eD1sSvg5HjO4nBDkPNzy9zcFuVnUylEAfyqk6HzZ9h98CqMUh5R
      dq6fANVBe/ng1bQKw/3n6djWx+TwEMFQEEVVKKzEqbJTJb1kG+NVCxIvVzJ7o4nS0tFFYmlx
      TZ65sbWd5YX5LeN71e3Gqao1LaOF2WkWZqdp69qG2+tlfmaadGIJwzCIxhsQTWPTnD/YWj/F
      QgHT9GMB7/q993Hta1+HZVlkn/oZd1x9iGsP7OPpU2f5ydETqC61Vo7XNA2XLPP5z32eoMvJ
      qKJw5YED7PIJfOvJFxhN51k2HQydnSISb6BcLq+RIalCFEXbG8swbAKe5GBxdhqcKp990U4E
      KJLI4vw8iqoSWVFJF0QBURBZXlyiseqyuQKvL4AkOWoCZ5c/h9b2DpYWl2p0Bp/PX2tIkp1O
      jr9wlO1X7Kals5uL58+uee26eBzFIbGVwyXYi6Esy5iiSFMkSDQcIrrC4VmYn8Pl8dIXr4OB
      Wfb37cYE8nfcxuQ77Pszet/PeI9TQtR0vvTQEzw4PEuL343XMNnXtpe/+fnzBDo6ONztJZdO
      85abX8Wp8WkSxTyWqbO4tLy+EFa9+ZJjfTxcLpVYnJ2hc1sf5ULWlrSTRBTVRblUqKk2l/4X
      3HFBEGhoaSOfzeALBIg3NTM7MUaoLkYhlyOdWN7y91s6uhg6tzZNJzudOFWVC6eO4/UHaO7o
      wulUkEXWaXtW1emqB363pfNbr7ySbzz8FN979jj/cNdvUxm/SLGxhSe62nDPzXF9WxsAP3rO
      bhHUNI1KqYSuafz1bdfgEEWschE90si+a1/NwnKCzzz6Ue6+bg//8dxZHKbMydOnaGpuRhQu
      2ZIKDhljRTPTsixMC0xBYGF81DYgX9WieWt7lIemM5RLpVo9RHW5bPaly8XkxNoD6vT4KC2d
      XZtmdVLJJM2tbYwOX2R2ZppoLIbkkDBMA0HXaW3vYHxsdJ0hh8frIRyuQ9jCzgio1Zs0w2Ru
      doYfjI/Zqd2Gem686hDjM3NcuaOXaCTMC5kK7+7Yj2GZ/OPcQ4iSPWz3/NYb0GUP4n3fZyZX
      Ym+bLfw1P7vA0+OzXPeOt3PT295KPp3moU9/BsIzLBcqIFtoFizNz62dAKub4MPReurq7UmQ
      y6RrjjBVDspqGRJ/KMzEyHBNi+d/M/i9/oBtxbO0QLlYIJdKEo03kEmn1/D4L4fsdNKxbTsj
      A2sPa4Ig0tHTV+ueymXSuFUFZ6QOwVq70pbLZepb2lhamCfW0EQymaAzGORQbxfHhsY4OzpB
      q9vJ7Gg/J5wGligiXvUKnnjuBN+69/v4vD67mUbT+OaHP3X+1Z4AACAASURBVATAd75zLztC
      Ll4YncZRl6Zp5z4GRkbY01LPQ4OTzGSLOIQClYqG6nKjl+2+a1MQmRgZwev3EwoEyC4t0OYw
      OV80CTvAT4V52VX77D8Ynq+tt/n8SwvX2iv/pX7uy6FbFr988vHav+dmLnWEtXZ24VIUypeZ
      gciyTChSR7GQw7uJoQVcIqyJKzpE73/nWwG496FHOHFhgC9869vsaIrxwbt+l659B+iQVYr9
      pzHizURGZmjfu40zVpmArKIpCmZLMz6XygfvuBFFdvDP33uI3U0xCtt7bPZsIMBwtsjR+x+0
      JdgdMtPDwzS1daxPg4LtWZvNpEmtqCV7fH7aurahul143R5KufSaw2pF0wgGA0xNZX/twQ9V
      2nInM2MjtVBAFEWSSwtb9vrGGppweTwbHtbauretq0yqqopTdq5zdHQ6nZQKBVSXm5mpSdq7
      e5gcPMOJ559ncHKG7fEwSksXbY3NDJgaRRF66uqpHDhI+j++TjAYJL9iFFLFd188h1uAW3Z2
      8pr2Or72xc9iOFXe96rDLCwtEfd7eG5iAbdaQatUbCqzKDE3M0M+m6FnWy8Oh4NioUAKg+7W
      JkYvXsTX3IYxM40iiUgC+JwO9jbX89hFuxH/pSBJEvNTEzS3d67xF6hiM3HkaH0jWrlMyGd7
      tq0mNpqmic8f2JKUVyqVyDQGce3YSbl/jPqFLHfe/GoAbrj2GoKBAF+6515eu6ON4A23YBkG
      7kKRYmKeZx99mN9+xbVQzLM0OEH4QBy5XGG/U+JH0QjffPoYf3j9AV7Z18GHHzvJvryTA6bA
      2MAQs+OTeL0+LF1ncXER2akQ8HnXp0F9KzY9qVVS4flshnw2Q1NTE76VLiyn7MQhOcjlc7Wq
      7+rm918HlmVRKRXXVCcty6pNhnw+v+71q5J/G+mXOhVlnecUQL5Ywus31vHmBUEgl0lTKhWJ
      NTQxMT5O0DSRDY0/P7yNjCVilYpoFZ2G5RT7DxxE03X+7mvfIF+wZeFdqsLtt97C+z/9RaKC
      znsObOdLz57mR2eHGZxPcNe+Tv7+mfP8m2mSTGfIliqkiyWcqgvHigO6ia0SF3fJZJcXEfNp
      EhWTzsNXcfz552hwCkgOCS2X5obWOh4cXcCnSrxlTzcnZxaZz21sRr0aoijicEgoG8i8SA7H
      pg6ZTkVhenyUhbnZdYtdIFyHqWlbGoVnfE4a33OnvfO8Yg/XjOZZLmmcPXOavXt2I4gi177+
      dfi377CTI5bJiKAT8Li55vW3Izhk0hfOcvxb3yf51Xt48xU9fOT4OQ4eOMDvvOmNXDj+PP9z
      ZphP3v3/0tnawt994d+ZTOVQVReBYJD5+QWWFxfo3b4TsNZOAI/Pj8vt2TCvHA6H8fl86Jqd
      Kstms7ZRhSyTz6Tx+IMoyeS63/tVoKguDOOS6OpqyfSN7E67tu9kbGigJgF4OZrbu9aFRGDz
      hNjk8CuJAm6Xi1K5TEdDnDtuehv3/c8PGLxwHlNW+Pfb34mVydHZ2o5LcjA5MsoTDz+Kx+sh
      X8jzZ3/we9x43XXs3rmTb3/p8wiCwL76MK9qDtNQX0+/5aRv1x46rBxtXts/4WSiSNHlxzT0
      Fc6P3as7X9QQKxqZfBlLEOg/e4bO7m0sLy2i6AaaIPHg6AJ3dEb56dgSv/vdx172vdZ1nUql
      wtzUBD07d605NzW2tjO9gTMO2Px/2NgLOBqNYhkaJuKm6Wwx5FvzXK+45jBN/gY00yISjZN0
      iCiREOVKmTrBwTmtQEmEZdlJbGVXCobDfP7vPsz0xBhf+u/vcH1vG9cd2U/A56Hs8jG5nKrR
      WSqVCpMT44QCfpaXllicm6WtsxtLr5CvaGsngOpybbgdulyumj+vKAo1zZ6KVrF56Fggini9
      3prO468DxeVC1yq1Rphqab4aM65mdja1dTA/Pbnp4PcFgutkuRXVRUt7h3343SLzo+s6ibk5
      3vsb7+WVRw7T19rM9777HSYrFj09PQDc88Mf4nK6eOiRR3DIjtpnPXH6DPt378aVXebth67g
      E0+fJWKa7GpvZqws8MY3v5U3q27+5TOfYWxmlr1RP3qljO6oMDExQX19ParHS0tLK+FyhvNz
      M2imHaMX8nmilQxiRefUil9AxOVkLFumrXcno4P9GIaOV5Y4XB/k0cnNEwa6rtfUPkYH++nZ
      sYupsRGKhTyisHlvtbyB3itAXbwBTP0lxW2LZ4cpTs3jao7jSOXZ3xNlZHQUayVs8pYrLLkU
      WxpTEJgauogrGuGHX/oq9yynOXDwSt5xy82oipO2xgZuOrSfnVIJVyXH0swUn/qPr3Kgoxl5
      ZpjnTjzLTa4ypyUJ2eEgkc7i9npRZQeWKDI7PLx2AizMrtfmEQSB+oZLqr6VUhHJqVAsFXG5
      XHYqy23bFbnd7pp5268DWZbJZbM1tTK7wqjU/Aeqq04oYpOfNmIjVhFvbF7TBQbQ0d2DaG4u
      bVgtycuqi8XhYb71wPcRBIEuj8z1e3fyt6dPc75gT6rHmp2c+eC/4HF7iDW1kksnMUolfv6L
      J8icO86pmUW2N8S4rTmAJAgcnU1SlBRK2TSz80s8fHoA2eMlV3QiBaJMjY7YriZOJ+ViERGT
      Vp/KYCKLZhq0+VTGsyX6k3nMlQlxdUuU37yinQ8/fopQHVwV8zJjSFTcAX45tZ6W4NrAataW
      qdEYOn+GprYOBFFE3yKGF0VbkEwSJbKZNOVinkAobKdJXwbXvzESo/i1nzFXylBJZPjbI8/R
      EI8xPj7BB+56D+FYnCgS8/k0n3jhWe75q38k6PcR97qJ9m3n9ne+nYIk8pVPfgY5uUSXX2XI
      4+GAP0R+dow3dcd4MVFE03UeO91PMpHE5VKpGCap5DLt7Z0g2EYplUrlpbVBGxsbcbsunegN
      rYKouGoqAa6VVFs1k6Cq6sueAIJge/pW1eNUt4dMMlFb6avnAHFFI9TpdNLQ1IzT5UIrlzEi
      dQiiUCvGqS4XmlbBRGBuenLN+9TFG8DQaq4qG6F6jsllMrzpNTcyMjnFE489QueNr+Tex54h
      1xnj41P2QdvyKFiqk5KhMTVykXhzC5VKhV1BF3dua+TiUppnZxJ89EgXU6kcX3/xPH/yhluo
      zE/yD1//Hl2791MXizN2/hS+eCPF8+doa2uzXRs1nTqrzECqQrNXYSxTZDxrF4Kuaw7z7EyS
      nGYwsJzh3rNjeBpaGbs4yKiuYVoWDmeOhrZOuz10eYnk0iJ18XpUdfPMDNip0WA4gmcDCUWA
      UKSOpbkZkivnw2A4QlfvDvKpxEve2yoCsXoaTI0PvPtPOXdxmL0HDhKNRPjnz3+RN//B+/mn
      //oy9R4nhmVyuk7md7/0T3QOjrDX7eTpioTDIYIgsu0NNzN67iT7DZ2ZVAHDNJBUF6eX8zx9
      YYRjQ+PEWtrwqn4UUWR+cYnm1nYwdQSnQqVctBfXrT6sy+XC5XKt+Vm1QlldRavFDI9DprSS
      O6+yRrdCVYbQ6XTWJBeDoRCyLK9hQK5mJfbtvIJMOk0ulaKptY1AIIggisiyA1GUOHvqJDt2
      7WZxaWmNrLnD4aAuWmcXvTZB9T0sQeCVe67g/f/nbXYYIEAlm2ZbWzPPHj+D+6ZrkCSJCA78
      H7oLORxg4qEnuXJmASuokF2Y48tHz9PucVLvFQkH/Dw6ucyBI4dILy1g7Ojjt259NR+/78eU
      MglEp8LY0CBNTU243W7S2RwtQpmZTA7Hip1SKBKlYhikEss8OZWgbJjEXDIOAYYSWRrcZSZW
      cfi1SpmJYZua4A+FufLq68imkySXNyezVZFKLCPJMuForGbuV0UwEl3D9izmc6SXF3D7Arav
      10vAtCwGz53lllccJBoOcUVPF2fPX2D3ju0caooQv/0GRlwwUkwwX8zhV1zEG9qIdPXQIHp4
      zeBpyiePMdbdxYRiUtm7g2MXhnn2x4/zZtVNd3MDrzm0j2eGxlG8PjwuFSyTYkXHNAycIohO
      F7NTE/gqRZbK5c0ngCAIRCKRmkT2alSJU1UYuoFWqdTIVIqirGlo3wiqqq6RXGnt6mFieAhf
      MIzb46WwQS5b13Qi0RgLc7MsLcwTicZWshl2DN7a3sHQQD+pVcUySZJobG3btL93NQqFAqbo
      4MzAAAvL9iSsCwcxEHj9ddcgutzcsvNV+FU3p9ML3Oc8h2FZdP7GzUilMle+cJo/+9xJ4gEf
      ydkkLUEvvxib5/D/8xf07tlNcuQi6tw0B7cH8LtVsLBlzGWbvpArFCgUipxM2Stsl9/N2USO
      N3T7eSotcLA+yGS2yFy+TMit0hP28/h0kvFMgTa/C920mM6tHYger4/zJ47R1Na+5mCqqmsX
      ttVYnp+js7ePcqlUq8R7/QHbv2sVyuUyoyMjqC4X2/q2Y2ziQVaD6CC5vMgPHrYP6/3Do5zq
      H2BbNMjdb7uDlu1dPGOaCKJIo9PNbYrEXEXHLFVY0vMImSQjeonfXzhFqy/Mwfo2In4fd912
      E/9z9CSLczNcEQ0SCwbwN7QgmDqW5GB+YpT2zk4s02RpYYGlxSWqI2TTCRAMBvH5fBv+Xza5
      TKguTmp5AUEQMLBwOCTyea2m8e90OjdthKnSb6vZHtnpxO/3k15aYHZynLaeXkY2YB8ODlwg
      Eo2xtDCPoetMT04AAgjQ2tFFMZddx5/3+uysg2OTFG2VjGVZFrLq4nBvF3v7tnH3v34B07Qw
      DZ0jfV287fW38oY3/AbOfB6rVMJTLHEQheOUqAgCCbeLhxBoCgf48nvfylP9w5wbHuWV3S2I
      rba6gyMS4wMf/TiWaeJ0uSlpGoV8js7OLkzDIJvLk1iyV11ZFDi7Ypzx87FFSobJWUlAkSRe
      2xHjsbkcc2aR3Oo8vAV+p0SmsqLDutLZVyzkWZqfIxKL164tlTZPlVYLkS0dnUyNDuMPBGlt
      72BmapJrrr+B5SXbjimfs4273W73S7ZQmqZJ2TL4o3/4MADp793LifN2O2b/fIJ/NSsEG0Ik
      FyfYoQR4RU6nWZJZvnCRP/m7f+aK1gY++sbX0LxzHx8Iefny8Issz0yy3fIhhcNcf8U2/u2B
      H/HpRJpQaxfWSqNQMpWisaUVQ6vUGozgEkljwwmgKAoNDQ2bHhYdkoSsqEiSA0Vx4vIGyKUS
      aLpmW6OW1tOgAZrbO5FWmJiyLKPIMtlUgrg/SCWfrRVWtHJ5hV6x9iE1tLQxPTayhk0KNv3B
      MjQa6uMsLsyvCb8isTiyKGw4+E3TJGlUUPf2UFlIoF0Y53fuvJ1QwM8rjxxGVhR++ovH2BVw
      Yh68GrFcgWyGcipBiy9ImyOAVTF5XqggWBavbWtm3u9jcG6Ja7qaOT0ywZePDdGlPEDv4YM8
      8oMfMTy3RNDvR3G7Ge2/QEtHJ/lclnyxRGJxgd6gm+mySdTlJCBZLMg+Uuk0790W5/uDM6R0
      i0emkhxpjYNWYb5hJy6Xm/m5WaKxGAsjQ8Q6mrg40E9rVw/DF+wiYCaVfNn90ZVKBYfsYHp0
      mLbubaiyzNTkhD1JMxkkSUQQRXK5DO3RLgoF2151yz1WFNl7zWEOvvo6ABYbG1m8/wc89OOf
      4O/rQDmyl5Ig4DAMBgpJQi4/u11Bzj30KHdeexVd27qIXnUjsuriLfFGLFHikfNHcahexkdH
      SSUSXNXVwkC6hGjZKW7FGyAkOUDXEB1OhgYuMWfbvArjuctCoNbWVo4dO1ZTYHC5XJtOgmI6
      abukSxKyU6VSyJFKpWpnhKrcuChJthaMJDE9PkqpaB8+vF5bW7RupbKYW3EfdzqdJBfnaWxt
      X9ddtJn0oeRwMDI0UDPJq0IQ7CzSZrF/SatQ/9478LQ0YFkWredn0RQ3J/sH6erqwulyceXr
      b0cKBEEQWBAtMqJJt8+Pr6WDSi7D8GcfYETP06coPHtxnD37r2T/a+9k9vwplnT4l4/YzTF/
      /NGPIygu2ts7UVSFsZFhXnPbHTz/zJMcuuZajh87Rm/QTbKsgeDA09JFaXqEWH0DbsHiRzN5
      eqNB7tzRzp/99DkGM2VELFxiHi2zTKSuwVbzdvuI1zeQTmfWnINM01zH29kMpmmSy9q7Tyad
      piTLxOJxJsfGGB2+SKy+HkmSCIZs9qrL5ULXtM0FuQwDp+pmdnQcXddxSBIHmpu55u4P8aqm
      CD8TKmgr48whiqhuN6OywH+RJWHq/PGbbwfg09PnecuOw7TKMmeSs5x87Dme9kfY3tJIy759
      PDU+R7x+hYUqCFTyWUQsDKBQKmFqFaKqzGJJYzxXptFzGRu0KmVeKpUYHR21BWrdblwuF263
      G4/HU4sjJUmkXMghuzwUswukM+ma/EmpWMLrDxBraMI0dBZnp+1wZ5URg2maeDweludmar5h
      mqataPNLFPJZovUNNeU22elco3+5GtoKf/3ykKu+qRmzYheRNhSFckgoEZt9KAgCu195hLZI
      O6FwGJfsIOl0kHcpuAwNxZSY0ooYisy8KOFbmdx/8ht3Mj4+zqPPPIvT7eS6I/vweDxMahJ5
      zcChV9Al26d3bGqavQcO8uLRo+y98gCCILBtxxXomk5qeRGHaILbT255meLMOGpjB9PTU+yU
      NRYj9QzPTPLjizP4nA76FJMROUClkEO1NJJz03jCdcgrlqiqy7WpKd7LhSoJyJUiJcNgeBUF
      PbOBdW5P33ac0sZZoFwuhxNIJnS+9LGP8xd/8Ht4ZZX08hJXtjXi8gU47gkxnE+iSg5CigvT
      sljAxLW7j8GFJE8efYEfTI9x/82DRBsb2O8J8b0/+hDPPH+MD33lq7zr1hsYW0wiWgJU5WEs
      E4sVV8nZMdwOiSavymLJHkcGl4njiqKIP+Cv+QJUm+FX83BUVV01IbwoXgeVSqmm+1gXq0d0
      yJSKBRZmJlAUBVVVa+lMuDQBVqdPq6nQKo24PDNNIBShY1sfo4P9NLS0MTlyceMH5XKvo2GI
      okgoFNzy8CtqBrMPPk3DrdegJ7PsqttBNpcjnU7hqqvDpxksu2w7WKemkcmlmRub4J8++UXu
      fMMd3PHam3EpKi31cW46fCWOqUHc5Rxj/ef54te/yTuv2U9u8AzLU+O4ErO0trVz5sRxGhob
      6T93BkVRGbk4SDAcoVgoMAkEFa9NOb84QGUxQatX5YlcCcWRRjMM5jI5RAvO5XQWU5eqtbe0
      RvjFYD9lw0RWVKZ+jS6xy6GZFv54IydffOElr93SOFuWaHrfnXhbGvBIMtMhD0ePnuCbH/8M
      f/lXf862I9fQiMBsKYsgijy3PEm7J4hDEOk+GKPPkLj/6HHqC6B8+0k+dfdfEmnpwqyLcseb
      3sj999zHl598EacgIIki5XIZwzTBsjAMk5KmcX1rlPGEwtmZRV7T3cRjI7N87Ia9ayeA1+fF
      4/HYxslsHHJUNXqKxSLx5lYyiUWKpTKBcJRcLksum6VStpWlA4EAhmEQDoWZmZmpVUvL5XKt
      Y6xaOayW5quwLItUYolsJkVDSxtuj3dD1qJTUdEqZRrbOkgnlglG6hAs065m6toaevHlUBQF
      31QW/Uvfo6O+nvueH+X6V17NhYEB2pubufoVr6DVEPnF8hTfuXCBF77zQ/YaZXb5FY7cdAPU
      RZlLpXjk2C+5zqiAN4TsC+JNLrLNK/HIqQtMLadIJJMs6AJWNkMmk8GpunCpKiY2xUPKXjq4
      V9IJ5nNZ6pra0ColmsUSE7kS7X4XogAOQUBxSHRGwzxYLFDQdPbFAjw0Yec1wtEYiaXFTbk8
      vwriLe0sLSde+kKgVK7gVTeuEgtBH55mu5iaNzTyukbn4St53yc+gqs+ThkLhyCgOmR8DoWr
      vQ14V4p2oZk5kqLEuz74pyzk85hPPYEzl+Jj//Ip+g4fYXlxkanxMdq7upGqYZSs4Pd67cYd
      XWduepJ0qULZMNne082OsIMTs8t87KmzayeAz+vDsiy8Pu8lN8aVpuzLEQpHEFcsS0PROAvT
      E2iahqqoKE4HoiDW4sjpwnStyrp6kL8cMztD15mdtGXUA+HIun6AprZ2RldJ+KmKk1hDE0a5
      uPWqhK0+PDcxzlc++tfEImHKgoQvHEHQNT717f8mcXA7si7yYn6JQmsdv/nxu7lOcyCNXkRP
      LkAsSlF1kNrXx4nZOWa/+yBvePV1BCJxCqqfZ0+f5/xCiqamRizFTTadwesPoEgCgqwwPz6C
      YRjMVy6FdgXdBL1MYXIMl8vFYl0ESNGfyBFWZTyygxvqQ0S8Kr5AENkSeWFufuXBy/iDoS2V
      G14OnKKAadmpz5dqhwRbAVveJPwBkNJ55p85TtvVBwjmKrj1RdSmZjq2b8NZqZDVK+R1Dd0y
      cYoSLcEIY4UUim7g1XWcskgwlcEKB1D2HuQn93+XHqfF9772dT7xsY/w2sOH+Ku//zispOy1
      SplySUIUBbJjQ9zSEODoTIKb26J8dWiBT/cn6Q15bTWK1R+0VK4QjEQp5fN4PV4GBwc3ZXf6
      AkFKxQK+cJTE/DQulwuPx2NruheKlCq28XUmk6mlPRVFpbt3O/OzM8QbGslm0mgrigelYpFA
      IEg6nVpJb67F/PQk7T29FPN5KmU71nc45Fr8X0VieZlSsUhLR5etmbMF8vkC83OznDh/gX07
      tvPZb93L/u4OjjRF+Ic7buKXegVTkggqLq6yZLJAXlVobGgmO3Ca+zIzPCeb9ITiFH0++loa
      efjYSd5w1ZW86+q9PHNugMbmZgTTwBQlstkMzU2NIIgszE7jMyokN1G0Bnhdc4Afjy/Qs3M3
      kyMXSRQL4A1ydDZJ/1n7HoXqonT27WBqbISOnr5fKe63e6ydNZW5KmRRwLCsNSoSWyEcja9r
      LKrCsiws3eDAYol3e1tQIy5K02MsDAxg1tcTXVxktqeXJlHhnF7gSxee5a7eI2S0Mv3pec49
      +SJvu/FGREFgm6hCLM67/vwD6LkMrz/1PP54FNHlIeD3U1hhIIiiQCGXJZvJkCzqPDAwTZvf
      xb2Ds6TT9ncaSNp/rpkAhmFgmTbTM5tJE41GWVpa2nASOJ1O25pocqzm3FLzD3DaleBsNmvX
      CQwDXdfp7t3O0MAFmppt47JkMkFn9zbKpRIul5ulxQW2aqNLLy3Q1beDi+fPEG9oIFwXI5NK
      0bvjCkRJJJVIEAyFSSaWcKkqmXQReRMtGsMwUL1u3vH77+OpZ5/hC1/5GrOZPD9/8in+9K63
      4+9t50Rqnu2hONdaKtsKZR4ZGeCBF05zZczF7pYWREVlKDFOplTgdY4ILVdsh8ERHnjoYZZy
      BXq2XwF6xS7GzM7S2NSEZZrki3kWV5EGBeAP93fxn6dGafKpGLrBdKHC/UO2zs/QudN01wVR
      3SKFSB39qw6kySVbDKu5vZPFuRn8wfC6Cu5GUN1u3B6buyUKYq0aD5DXVxQhXkLBGeyF0O/1
      bKqnVF38dnR3oQoCZqmAgIXm8bDgcaOYEXokFw5B5P8OPcWxxAxlQ2e+mCPm9fHKaw8w6/PS
      7QtzcXSMVGKZAwcPIvtDeNq6+c9v3cNsOksina4VVqv0eSGTJJtJc1NLhGsOHaCtIc7vfP6b
      tHpVWnwqz8ym1lokef1+XG43YNVSio2NjWu+kF3AEqloGvlsGtXtsWXRqXaDWbi9Phpb2mhs
      bSMcjdPS1UMoGmdxfo6du/dSyOfIpNOEQmFbUcJlf/DIiu3nRqieRxZnJujbvZdwJIrH62N2
      Zsr2MytXqIvF0DWNHbv2MD42SrjaHLsBypUKd7zzrfzme9/F7/7939N5xS4AAn1dnLz2Sp5u
      jFKwNE7PjlPMZrCcCucfe4qpwX7kpkYCvXv57bY9fGzfzUxmk7RXDAqFIk2qRMgp8fPBKaqZ
      cYfqpqGpCXQNUxBrB1SPQ6ROdWAB3zo/wf959dX8wS3XoYsSUVWmO+BiZ9iOhccTaWY0gfHh
      oQ2/z9TYCInFBQxdQ3oJRiZAIBimZ/sVyLK8ZvBfut8S5Zeh6FcXi28pJma/lshj/f2czmb4
      xBf+jadGRpgLeNEKWUZCQZa1MqdKKbrq6tkRruf48jTThTQnFqYouWSGHSaj07O8/wMf4O/+
      5VO8cPQoRj5LumLw0HPHGBgZXWdfWywW6F4hMfxiKsHD5y7y0Em7uDqRK/HMrJ3JWnOnpsbH
      GBnsr9EYqlmaaDTK4uJi7cBqWQYLszM0tbbiUVxYho5lgTcQwjINSsUi5YLtuOJyOqiUSiSW
      Fmhu7+TEsedrB7SXW5gBOzddNdoTJJl4vB6tUqa5tY0zp06w98qD5HM5ZKeTpYUFOrq6ya5c
      v+61ECiVKwgrmWuf38+n/+FjfOMr/8lQQMZciWedooTgcvCYInFaKPGG219DowD9ksWsQyTk
      9UCuhJ7IMDk3REAWCcYbOH30NPH6BgTLQlbVmuCuICvMTk+hCBYF7JVWMy0a3E4Smsl1O7eB
      IHBbbwtfPT6EUdRqLQuaaZHIrJV3cXu8eHw+ZKeCsFJ91yoVdu3dhyhKzExN2kp8lQq+QIBo
      /BKrVzB1Kvkckfpm0unsOk2fSCy+ZQtqFYrTCS/R/yv7PPzG+/8A0eHgzt9+C8Fzp1mamyPR
      3oEhwEmrxLn8IqpDZlddI0OpRbSV7F2uXCLgcBJrqOMb37kXBAHp4jmmz53iH//ruzhWbK0u
      hz8U4dHz53C5PfgCQS5my1zMzq+7bs0EkCSplqKs0gOq3r5wiTbgcDjQtQpaqYTD6aylGrWV
      FkOHJMKqQ5HidODxeBk8e5r2nj6KuSzZdHKd/MrLhdvrI5PLcfbUidrPXnj2mTXX1MXqCfq9
      G3KZCvk8al2QHz/yMxpam9gTDiPqBm+66krmykUecwcZLaSQBJGg0y4GLmIw5HcRSBb46o9/
      wpmrtnG4qZMziVk+0HWAFy6MM/zk07z71ldTNCybGixJ6JUKkmCb6ZWKBXLZDK+IB3hxIUNW
      M3A5ZXRZwSkJfOb7D1J0qCwVyjS2dTI2cnHDiFBRkNMziQAAIABJREFUVZo7usllUuQyGQrz
      czS0tAEC6eQyQb8fQTLIZTN09Wxj4Pw58vkc2cylBWFubo6ZmWlSqRQtHV2US6U1XXVuj+cl
      zxNV+RZeIuO0ugajRhsI73RiHn+GiCeAxx/inKBTNznBQksLMdXLO7v38/XBF1BEiVfnJSYf
      +SVn02ne8e53AWDEGhg738/ozBx+n29DHzdBctDR3YPTIVMol9HKJQxdp3v7TizTZGZizB7L
      a26sohCJRJibm6tti5frA63+4gvzc4Tronh8fizTtP3CqtcLtiRHqVTCKYv4gyEW5+cYG+qn
      Ll5PY1sHFy+s7dV9uWjp6Oa5xx/e8hpBANm5fvBbloVV52PfX74Hh+JkxquiKA7O/OBhdsYj
      NB84yK2+AFPFDKIocjQxRZ3TTUBWaVZNRIrk5zKon32AQ+97Jx+88hX4443oR27gby8M8sF7
      foyhVXA6ZYqlkr1o6DpOl5vi4hx/cf1+vnr0HE0Bu7X0lu4GO3ctyhTyOb59ZpS+vQc2PHft
      2rufbDZDIBiikMsRjUZxqyolnw9ZkmqV81wuhyDYmbpCIY8/GGT04hDx+oY1r1c1JZ8cHSYQ
      ChNvbK4pfZsvY2Gy1TM0JKwtM27ZxWVe/NrXOXLVYYKqm0p6mXldYI8niGBCz/wc5kIWT5ef
      Vn8Yy7L47sgpcnoFLZVk/OSLtO+5klIuh+RxocfqObds96xHwmH08voJYFVKSJbJ0tIiC6tV
      BmemkRwOWju7CQZDaydAVfKwOlBWf9HV/65691b7dFfP8KqER2nl4Xt8fhobG2ptfmDLUWRS
      qVp24/LtdyvIToVCLrtpVbiKTDpNfX09pr72OsMwCO3sw6Han2epXKDVHWTfG29HMC0ysoxb
      EHBKEj6Hwi53hJjHjySINKeyOCMqf/npfyR34QLbc2ke+sEPuf7d70XI5RkfGcZCRFVtgeGO
      nj7K5RKL8/O4PG7Eor96Q7mmvR4si6+fGsXpcNj9vEs5dh44bF/vWs/dLxULFPJ5FEXB5XbV
      mtDjjU1olTLjK918Y6sKhpPjY7W/j49u3OYIto5/uC5ms2fbOvAHgrR0dDE1NrLpLu1wOFAU
      FWMLKnSpVEKwTG6IhQguzuJu7aZgwk/PDXPgHW3IkgNfJonXkhifXUAKRBgtpAi5PIh5kx2x
      KHvf/Ab8Ow8gOBwsG7YLUM6CUCiEoW8+Dsxsin+8uo+/+lmKpUKJ3796D08NT3NqZpHRwX5i
      sdjaCSDLMl6vF6fTyfj4eK0TqzqoV0+O1fH7Vtx/t9eLaUHhsvbESrnE0LnTG26/W6GlvZNz
      J4695HXhaBR9RVNnNSRJInV+GP21ZRyKEzWVR1WLCB4fIiZFXSOrl8kbGgIC24MxhvJJAqKM
      VcijOGQ6dI3Jzi7OP/Y4UyPD/OFvvo0//v27+PxHP8xHP/UZktkcLpeLdCppT4CFOW5vCXK6
      nOPxCyPsiIV4aKHE/NQEd3TXc//gLJ9/eiXfPmnHqa0+lSaPwnT+Uooyl8vZnXDZrO2QEwpR
      LBTIZDIom7QqvlwIgkAkXo+u60yPjzJpGLbZdmc3ksNBuVhE0yoYmo6ua+hVWROsTQuN9guL
      hOONfHNgiNZXHcGvpbheL/Phj34MR3WHVlS+9/hTeFvDjM0MUDENIi4Pb1HrcDS28tTDj/C6
      3YdtNkGhxPTiAldesYuL5y6wMDeH07n+uxsIzGXy3HdmmERhY5q2rutrJ8Dy8jJTU1MUi3YR
      qVgs1hwffx0oLhdenx9VVZidmtzwmur229m3g9GBfizLrBlqb/S+Fa2yjiV6OVS3G3XF6+By
      CIJAeXKeyCPHuPWWVxPBgIF+5lrbCKczpOtiGB4PeeCJ2WFua+6jYhocW55h7sWL3HL4EC5B
      pE/1I95yG9fcdieJF55AiTagRuvobG3h2NnzCIKwko60jcHvPz/O7oiPloY456YXmJq2B/r9
      g5e25zaPk4mCTSlxiiKZy1oTk8kE/kCoViepNj22ddtx/v8G7dv6OPHsU2tCL0PXa401stNJ
      IBzBqaqEfTFEyxbU1SplxK36q7UKmmmQevVhKrEwAB0dB2j2+NBzaXLzM9z7wPd5+6E9uJbS
      fNPnRrIs0uUi7T17yDkVvvXcs2SvuxIdaFos0OYLc/ONN9HZ3sFdd9214QRIpdPkcjkMsY6o
      z95Nv/j0qTWhXSJxmT9ANputZVp+Xdjth/X4fH5cqoIlikyMDG9pjJdOJshm0nT2bmdhdhpJ
      tLfXpcX1WYjN9GpWI97QhGsLD1qXy8W2YJhmU8RyQEVWSKoKBgF6FR8VS+Tfxo7z+OwImXKR
      oewyAdVN/FWHSShBGhQvc/Nz1MfjCA4H/t49PPDd7zCezPLLF0+grnTRuVwqWrGAUMhimRY7
      6iO8+TXX8fjZQc5+/+e8pSfO/RfnWWnxZTxvO2vOz8/jlASM8trQIxSJsjBzydrU6/cTa2xm
      Yebl7Z6bIRKLk17euN5ThVapsLQSS0frGwn6vTWqyVZQFIWF+TnqVl13dmmWimUyM3mR6zNl
      3nrrTbZhhyBw6/g8ol6mrncbzf4IP/7eD+m6+iCllULbz8+d4EpniO7ubk6cOLGmMWs1nLLM
      zZ31vHnfNv7HIfGGK7r4+KMvMJrIAtaKZM7L6Al+ufD6AwTDYVRFRTB1nE47vz09MU4gGMKp
      uohGYxRLRVRFZWpygsamJsZGR+jq6WXg/FmG+8/R3tWDPxBgdJNyvvESToiq243HvbXDo+Bw
      kGptpl+WyT38IJ7X3ExZVVlUFBTBYrGcYUddI0XT4MdTNs1CyTm4qamHGQkeuufbDIyO8Mab
      bmTfzu1YlsVPnz9JsVyuDf7a+5VLhEWDad3g66eGGdUfpn9l9b9vaG1aTpIkKpUKXsFkIlsi
      p639DspK/7TqctPY2kY2ndqwcehXRUtHN8nlRXzBELlMhuUNXF5Ww9Q1dMMEq7Lh6ltFlQDp
      ECW8F2Zoa+9CFASS5TL/PX0eRAg21bMn2ER0xQL2vomTjJSz6KUMCAJ3vPXNzM7PMSSUKWhl
      zj36FD949hhf+fd/I5lI0Lpth938chlcbjeD0/Pc/dNfki5VaKsL886r9vJQwmByfIzubb0M
      Dw2ul0b8VRFraCQYCuEQRTANuynb5SWTyZBcXiabTtHW3gnA7PQUPr+fSDRKMBRmZnqSa2+4
      iaXFBURRwjB09HIRreSkvrWd4mD/usPuS+n+e30BtFJx0wdjmiZ7r7+G3kMHwLKIx0L4JiYp
      5bMITa0sSSbDhh1iXRFp4MzSDAVDQ0bAjUir20/Pb70DwSlDNkNxuJ/Pfe8nLGdyeF3rs066
      y8fAUpL6phZ8gSDzsorlKUFiLaVYEAQaGhqYnZ3ddCWu/jze1MzISyhkv1zUN7UwcPYkxRXG
      r9fnp62rB03XiEdjlIpFEAQ8Xi+mYdgNR5UKdbG43S65hbJ2LpejtauTO66/jte8/jYkh8QD
      P/gfBoImal0IzTLBH0CVHcyPjRGLxdnhCfOiWUQ2dXTTQBZEeqP1mEPnSfS/wJVOmWlVYXZ2
      DgFIppL43a71Zz1RYlmHb3zojwH44UM/ByCxtISqqszNzNjjdvUvbTUBNiKtNbd34nOrNRGi
      kmGSTqZYXlyr4OxyuymXSzQ0NzMxOmpLZ0si9Y1NJJeXcMoyHq+XTDrF1NQUirJIuVymY1sf
      6USi1ibo8fkp5Lbmpzg3KYxUIYois2PjGOUyssNB/e7DlCdG6UxmCXryXHQIxM8eZ2TXLvp8
      Uf5m743cffxn7PGE6ZvP8+MH72HPVUfo6evFcrtJWwK/eP44Xp933XvZxEIf23p7KVc0Jkcv
      2ilRRaF7+xWYhs78zBQ+r00+nJmZ+f/FTPBXgep2r1HQyGUzlPNZW6gqFEJWnGQzGaYnJ9jW
      t51Kcomm5hbGhofo6uklm9qcLRqJx/joJ/8Zh3xpXFVSWa5r76W+qZUzp47RfOZBpN2HoLmZ
      ckVHlRz4ZYW46sPvUJAEW/QgEwtxznuAG7bvId7UxGfvsWXny6USprrRec9aEy7fe/QMr+hu
      xcrlSZU0fP4AmUx6fRp0M8iyvEahIVbfiN/rsUlQosTS8jKJxYUNM0LHnvtl7cFalsXx559D
      0zQcDhld13DI8pqVviqrMjrYT0fv9toECITCzE2tJ8qthiCwhma9/v8FkkMXCTz6EP76RqRA
      hAuDg3S84lU4Q3W0T48T8caIqHWEvEGKukZQcTFRzNIUsnjTtUcIbttFztQoiSKJQITEku1a
      j2Wsey+zUrJNxMslSsUiLtlBRBa4eOEsDoeDjm19KIrCyODGRheRaByvP0AqsYQ/GEKWnTUt
      /v8tfIEg2Q2aW0JOieWyjqbpVCplDF1HlETmR4eQRIHZdJb2rh5SiSWklyGFArAwN8/506c5
      d/4c7739ZgqiSMjh46GMxRu7erAcDn6ZWuCJcoL9sofDM8sI7kXkxhZKWITcftRShslKlosT
      U8iiSNitIKwoBl4OQRBJZTK87SOfZG9zjBt62/iDm6/hyf4RPvGTJ1hess+X67RBN0J19a+u
      6sFwhLq6iB3yiBKz09MUctmamO3lD/LyLb06SfSVHO6WOX3LVh3z+gOYpkF7Ty+apjE9Prrh
      QDBMk5A/sHmFWXIgyU5KxRLZQo5GRSUYjdG6YxeiIKCECyQX57mQmqdbkRnOJWgNhOksGVhe
      H/KKorKCSAmDkYsX8fl8yE4Zo7xB070gcoVP5o1HenjPA09w47ZW7tjVxR/e/xhlXWdpdhpd
      14nE6mmQZYZXqN2iKNLW00t6eZnx4UHbey2b5dB1N9S65P63qIs3rGs7VSWBrGZiWNB/7iyN
      rW0193cxHCZcF8c0TQormrBbIZtM8fd//Te0d7Tz+EM/YzGZ5v2/9TZ2ZgosOh2oXg+fe/4Y
      N7/ljbi8XuYrRWJON2/q3I8cXuAtv/MePvDPH6eusw2nINJZMPAu5f4/3t47To67vv9/zszO
      7mzve73r7nRqli25yZaNLTCudAyEBH4EAikQkpCE/gWc0En5UhJCMC2hGIixsY1lbMvCRbKs
      Lt2pnK733b3tvczM94/ZW91Jp2Igv9fjoYce0t3e3s7Mp73fr8Lt7/tj1jpMDFh0Prl/YvU3
      13UampqJRSNc3RaiXFX5p8ef5fS8IQsdCHkxm6SVA+BC9fwla0IABIG29g60SglMMuMjI5RL
      RRRFqSevLKm7fhuaw7kwKxYK8zkWw2dvuihJtLR3IpuNsAZRFI2ZTNexOxzoF9mXFgt5BNHE
      10UNf0cAV1XlfVdfi2QyoVYqzM9MMzc1SUiq8BTFun/otcF2ZkUzew7s5+aGBmzA2LET3PLK
      HXR0dvCxD34It8u14r00TSeZTTEyN8PggqFjeGp4iqNzUUpVY7CUSiXy+TyZTIauvrU4XS50
      HZraOxk9OVSPe00lYqQSMSbOnKKhpY2mtnbmV6GNrwaXx4fH78fp9tT/L9DQyPT8+dwYVadO
      bhNEAYtixWq3Yy4XkStFUqmU4dVqtSFfQsthsVgYHjrBHRv6edd9H+N9n/58vWrkLxTxWW18
      +A/ezGIhQ94s0mv3sT7Yg8tkYTRfplGGucOHcDhsBK0K/nyV6XQG0e/HbrXxpWdfxNfcafi8
      noNKtYpZsdKzdj0PDk3Q5zRzMJyiK+jjrRu6kCSRdOmcKtDl5Pn6g6F65GWhUDSiZ9wuCvlC
      nSf0uzhEL0dDSyuzE+PnpZFrqrrCw1QQBDp6erFbZC5FzEKHbKlA70aDeJaWTcT9ftRChuzx
      /bh1gQ6/F3IloiUVPZdhwSTR3dbL7l/8EudNV7E/NY8INFmMLK/uNWtWPXRrukapUOCugU5u
      7u/khdEZyqrKw8fP/u7Ly8MTZ06zduNmTh4zOE6iJK6adxyencbp9tCzdv151u9w1rxsqXkZ
      bGpi9OTQiu1OLBJhZmKM1vYOWlrbiMcW6ehew/joGZwuF2azhXzNjXv9ps3E4wlSsSiNoRCa
      piOZ5FWrL+dCWRYXu3XzFbzi1ls4sxBh/MQg12/eREdTAydLaeYSWbb5jJw0PZfF5fPy9//4
      eVoUmVKhiFosU4nOIC5M8MLJo2wMOPmJbMFstlApriyx64JAbDFCajGKV5HJVlSiopO/ed2r
      uXF9L/te3McXf/3i+QPgcmC3O5Bq+bIm2UQwFETXdSwWC5l0hlwu93uZ+S2KQkdPH6eOH7nk
      9+q6TrlUQjGJq4vfl0GxmCmUywixNLQEsYgSP5gdIqOW8SsaH2hahyvQjMVm59rIFEczaTq7
      upAliTte8xrGSinCVUMD/dlPfYZ7772XwaNHEcXz31dTVXxuN+1WgccGR3FYZLb1tDG4mMXi
      bzACyTEc8uLxGH5/gIX5OULNLZwZOkbf+k2Mnzl1nugHIJNKks9lWTOwgXwuy/zMVJ1lu+Tc
      p+s6nb39TI4Mr3LNjO/1+Hwc3L+PDpeVGZOJVCKB1+ujUAu/kCSJ8eFTxGIxmto6kG1GNahS
      yF1ScWe8D3zjgQd5fNdu/nhtI05JwNPTTbsZovEYTzV6mJOsoGtkUykKI6Pobh+u9m6sawdg
      agy700VR1UlkMhRUnfUtDTx5/DQFxYGUP38rVi6VufOWm5keH0Wdm+BIJEWiVOXF06O0exzY
      tSpdLoXBxQqXd4KpQZIkHE6H4elpd1LMGfRcs2zGbDb+XLVt+3m18N8GTW0dvPTsLmMvvKaP
      jjV9tPf00tzeuWozTDbLdb/SC6FSqTAzO8OaNT28d90N3OPupHxmhmS1hKrrpM0yaiDEXCKJ
      IEkM2WSeCLoZySUwIeCy29nuCNJarJD72YMsTs3wz5/7Aqd/8zSlSvW8s48oiuiSiccXcuy4
      eTspTKxrb+ENV6whl8shy+Z68kqm1rmcnZ7C7fHS2tnDmZODdKzpx7wKoxWMTu3IyUGiC3O0
      dXbT0dNLe08vFquVSqWCzeEkn8te9Iw1fuYMPb19zGWKTE2M4/Z4iUbC5PN54rFFioUCjoox
      w85PT3Ls0IF6yubFoGkasWQCwQT//fV/5bOf/hRDeZ2fPPwI3/zPb6OrVeLZPJZsGVkQEBF4
      cedOJAEq6SQWTYdCAUuoCZPDRXRiFI/HS09nJ6LZwi8OnkCquT6vuCaazvart/B37/9zPvnR
      j5E2O3Dabdx3z01MzM7z8f9+kP8ZGiNfVY0AwYt+inNgt9sx1YLVSuVyfaaxKBYq1QqBxmYm
      hk+yZmA9M+OjJH/HvAAwgjqWh3WYZJk16zZw6tjhFd9nls1ol+Cl5AsFvvadb9PT14uEQHVq
      mjOPPs0ffuYjxEt55KGjyOYRPK1NFKtluiUrFlFCkWTcsgW7JCNLILk89L/xDfxs81be/KFP
      MJktYxcWcXV0rKiLG6uRwLqONq4d6GXfiTN8/el9RDI5dNFwyvAHg2SzWfzBINWqET4+cnII
      t8fDhs1XUSqVuObmHRx4fjfFC3TTK+UyU8sIcP5QI8GGZkRJvGS/IJfLnqVRlMuM1hqQHQ4z
      c9mVK0+Hw0wUM7lMGvEiDFBd15nRimTfup24z8U342P8ZaiXm7ZeSTKbY1Atg64z0NvDFZ4A
      h4QyY5KO6e7bUEJrUAQRvVrlP/7jW9xz+214yjnGdj1KVrTw5IkRLLrGfDJDV0PLiglP0zTK
      qsaxoRNEFheJzM7wpXfdy8HRCb770mFuH+hE1XWeOD5Mm9vBTKZw+QOgoaEBty9AqZBDFAQq
      arlug1gsFMlksgSdHnRNZXZilOaObjKZoxf0778YWju7mblAQEO1Ulm1dLcYCdfc7C6cEm82
      m+la0wNAKp1m16+f5I1veiPtso0GxcHxyQS5rV6qLjfJUoFnCgsMKC5uqpqwSTImQWSeKild
      pWq3I7mceFxOEskkNrvDUGMt24IJgkCpWOaRvQc4PT2LVixwx+YB/mJdN++5/0GO1Dz+lxJV
      VO1sQmcykSCZOFA3FOtdt4EThw9e1vkqFlm4ZDd3NXQ4zExmy1glkUStouU1S1R1yFRUJrNl
      Glsb0NUq4jkUhHK5jC/UQGRhAVXTyN7cj9Doowr8KDLG2uNDSAsJrlrbi1It8otnnqe9Zw39
      fSIpvw1RODuYTpw8RXjoMNtafPzZX3yAf3zdK/C7XUxPzqJXyvQH3fTfcAWPz2dXhDlKZgup
      6Snuvn0Hn//Sl3A6HPz1a2/jpu3t9Peu4cvf+S+K5QrZYoWSXcfi9l3+AAiHwygOJw7FQqWq
      Ynd7Mcky4dkZBAFCLe1EazwVQRBYmB6nq1ayFBDIZFLEwpd3U8wWy0WXbXnZgdPv9+N0OlE1
      DdlioVq68EFeFAQ+98lPsX7jRn7xo58giiLf+dynkGNJxjxOFhcTpCQTNkFgQS1REOCP2jYR
      TCT55te+xhvf+25G80mcqoaey+F3uPnmpz7G4gtP8C97TyDUwjxWfBZFwawolPM5vnDPdv5n
      cIynh0ZJ5Aq1WrbCvVsHAPja7oPn/c6qqpLLZhk5OUT/+o2cGjy2ar9AEEW237KDaqXCxOgI
      PX39zM1M09LWjqqqxC7DFW6yNuOXNY2KJtBklZkvLHPaA/RcBmzWFQk+UJOsqhr5YoE7/vLd
      NF6xjl/NnGYwsQDouDxeYtEskVicqfkI39+9l3fecwc+s8QvH9jPLW97I1cHm5DSKWbHRnCq
      Jda0t/Kq67bwyxf2c8PaHm7q76Ki6vzm5ChWmw2z2bFixS0Uimzu7eJtt7+SaCrNVKaIo2st
      4XCYF4dOc3R6gZDVQqpcIZMvkE/kXt4WaIl4ZLXbOTN4FFXTaOnoQq7RZc8tP8bD8yQSibou
      oL2nd+XXI2GytQqP1WbH5nDg8fkJz83Wq0lLeWGiKNWbZqIoYlEUSjV/oqUm3WoH0eWwWCwc
      P3SEW9d08f1Pf5QvfOcHmCQToqrSMb/A//eKG5lKRlkUVeyizLuaN9BidTGzEGX0pb2Mb9uC
      0hSiI1ckemYUOjtx2xR2Ts5TEExYz3n4NU1D03XaenopZjI8cvgkz4zMcu36tbz92o30uRQa
      XTa+umeQdo8TqyxROIf/Y7XbaWg2Mn5NZgudnZ1Eo1Hy+fyK1UDXNBLxGOViiVwuV9NqZJma
      GKelrX3FpAEQam654HVSdQCdxZrQpMEqE64NBItJqrtxL4dBnS/Qtnkd/ddtBeCujgEmkxHu
      tPpYazLxSOYUvxybJJrKcP/730ljSyu2QANbnE56Imlagm2o+Sw3bbueZKmEOH2GV1+7lS8f
      OcIftLawey7Fv+/aR1lV2XztNqqpOKbaiqtpGrlcjj1T4/x451Pcdttt3LR5DeNnhvn2v36F
      X50Yp8FqZkPQxc6JqLHSWVYJyr4QZLMFxWJBr1ao1mrY5VKJsdMnDcNbQcBqM/z+l7ZGOjpu
      j5tioVgP2lsOf6iBgc1biEUWyKbTFAt5Js4Mo2kq196wnXKphKZryLIZu91OMpnAarUxMz3J
      NdtuZHxsjEqpiN/nBVGiVMhf0J9yCVabQVkQBPiju27DrCg8/tTT9DU30N7UiFbMsj9RYJuv
      DZ9JRs2mwWrjYx/5MC6TBNky6cVFPMl5Dj45RJvTylS2hNXlhnOIeoJJZvL0KQKySKJY5lDO
      RUvQzwfueSX5VJLvPvYkeyYXSBbLvH/bRjRN49ETZx3dOnp6KRYLdZ+frt5+ZJNsxJF6vWSz
      2RWl6/mZGVRVxe5wEF4wOEWT4+NYbUuOG2dhd6zu/F1/79p2CCBZGwiyKGARLnzOUsslsuFF
      9JrFeVOhzAOublyKg1Qizt6hU3z27a8nardRMEnsfHYfHq+f1227mkSlzPDhAwSlKu5rXoG/
      tZ0jQ8f42c4nyWkCLRuv4g0b4bs7n0HNFyjlc/WHH4ztY2fIT9eV6/n2g4+QVAXe/YcBRo8e
      4tYWL8dyOq9tN/ogV+ky1WqVsWgC6dOf/vSnl37I/fffz8zMWbrtkt+/KIr09PUjaIYKTBME
      YtHIWYGMphn217WmzpIarFgoks/nkc0y1cr5Z4FCLsfc1AROj5d8zdrc0AOYcLmNppKmaZw+
      MVTLApBIxBZRFBuLkTDTE2OGLYfXb7RuLhHRo+s6ai3gT86naColcXSvpTPgwS5L7JY0TjnM
      aIJAqAzuk8dQM2ncHV2YbTaEfB5JsRKfmUKqFHGIOmgaP9h3HLvbi7ZsAFSrKo1eNx981x9h
      V0sUk3HiFY0ev5vDk/OskatEE0lmUzmi+RJHZqMMLsSo1s4B/lADxWKBxWXbxlwmQ0tHJ5Pj
      Y+RyufM69/l8jmKhQCadJhaNks/lAJ3FSIR8Lsf27dvZscOIJP3e977H3Py8sa1Z1uVfgtUX
      rMcnKZJIk00mXlLxNLdd0GpGEATyyRQRvYypvYGXzpxm8uAptt94M56uXpIBD4WWEDMNQU5Z
      LHzjc1/jvTdtQSgXeGjfUXY//wIhm4Ws04dFrSAe34ujXKDL6+CJoRFm5+aRinliVYxwlGWC
      6Xwux5c/9H52XH8tW9tCdFTT/Nnn/4UDxwe5Y+smDozPkCmrqOUSPU4LTXYLe6bCF18BvF4v
      /mADGhjZWsuaK5dKgFk+MxXyFxewTI2eoam1HV3XSSXiqGqVTDpNKplAFCVks5nYYpSFuVkC
      oQbS6TSOWnbBwuw0xUKepsZGLpLOiaqqxFMpgk1BPvM3fwnAQz/9CSe+/E+8/y2vQ5ZMdJgU
      KoKZsKhx8sQQV/dvQC3mkQWBigZKQzPxeJxiPIJsVZDlEl97ag9Vi51SIb+iKlKqVnn9bTvY
      fs1WQm4nqVyeYibNHeu6+ebzh/nbwROoGuTLZRRJZD6dx2ezUKgYMbEuj+88mkKlUqZSrWK1
      Wi+am3w5yMeiWNBwBkP4gyGsdgfFYpFMMo5Qs2y0uzzEohHsok7F5qQ9JGOzWuuBdksolyuI
      JhNWqxWtUMB55VqipTz2zhbmpyKosgWTINISenKEAAAgAElEQVTj9XMi5EIQRZLDo7yqp4lD
      g0Ns2biBHrtEUlCxl7L8+CufJ5zNc31POz/dd5RyVWUxV+BVA93cs6mPM/tOoS/LeNZ1naoO
      R04Nc8uWKyikkrR7PbzrrlfzrYce48FDJ5mLp5DQ+cAtV/LhXz7LeMIo4Z8XlG02m3F5jZQW
      l9NJMZ81rC9qN7darZIvVX4vza7lmJ+ZorO3vx5wMTWx0tw1VZNUZlYJxrMohj/okiHSEorF
      opE2KYrERBU+8FrmnDa+Fhvlz2QfN/Z30uZ1IgkCogBr/QE8ksAeuQpXDKCHunAJEhNjo/zk
      xz/mXX/wNqqjQ8wMHuH7R0bJlirGxKA4MZlMZwl/tff+0UO/BKCJMn9+5608evgEDxw5wT/c
      vZ2PPrybu7sb+P7pMO/o9BCrwCt7W/nQ7iECocbzHv4lZLPZC4pAXg4Ek0yotZ1YIsHCzKRh
      hY+Aw+0BhFo3WcAkhIw8gNp1PffhB0Ol53W5EUURxaJQisSxuZ1UNY3Rw8cY7l3PQF8fgVyW
      1qcOM1Es4Dl6nDRwZHwGVyCEy2rhniv6+fffHODw1DwlVeOlsRlkWabBIhFsbOZETuX03pPY
      z2He6ghkMxm++f3/5gpTgamZGTzX3sDdA43sOzXM7mNGWOLgZIaPP14kIZi5squNNco5A6Cx
      pZWedBa0KqIgoFfLNd8XYysiWWx4/CEWjl26OwvQ0NiELMsoVhs6OhaLwtTEGB1d3Zw6MURT
      cwuzM9O/s5GrySSfZ3+iaRpNbR0kE3EEi0zz7dcz7bOTrpR4JBvm5rGTLERTXNXdxle+9yM8
      wRDvfsubGXZZQLagCCKKIPKzBx7gKo+F12/u58N/9Zf87au3EWxo4L7XtfOFR3bztztu4L4n
      91NdXo8WRMRykffdfRv7jx+l5+absCom3tTYymIqzd//4hnGYymm3QrJZJLd0yqzmQK7JxZI
      ZwukE+dTjL1eL1arFVHXaGhqrjs6/LbwN7dy+PgxgBXy12zNDrFuZ2m1YzLJyGYZi9mMtkoS
      jCgIqJpq8JiqZd7naMCuOfjEd77HDYEm+tvbyMZjmGZH2SRLPLNzL96WDvzdfn78613smorS
      0tEFlRKCyULX2vV1YmUhl6GUzxGoDbBzoeu64UaeTTOtqvzfX/2GfDbD4GKGD951K3MzM/zx
      lj4A/nXPEDd3NPDc+ByHxyaZsVvPyQmWTUho6OcccjRdp6ILnDp2GF3T8Ica6exdi67rJBYj
      5+XxLiHU1ISAwKkTg/StHUAQRK6+7gYO7NvD5i1bCYYaWJibpVobAOlEAqfbfUFDqwtBlo1D
      zXJarNGfyBMOL/C+f/8STp+XXKXMN0+/iE3VaAk2MLuYYf/wOGq5xJVtjVjKeRaffBH7+gFu
      7ulFjSyw4/prIRlBSyfoWbOGcrGA0+ni6ROjHJkJ83927qNosWNZNgAy6QxdzY30d7bR19ON
      ramdeGSBn/3iFzy+/yjbQg5KpRJ75uKYJYFX9HdyYjHN7tMTF/yMoVCIM2fO0NTWQag5SGNj
      I9Fo9LJ5V4Ig4Pb56/9OxaP1a7e0oixZ08NZ44NKOonL46NU0hB0HdMq+0xFUcinU+TSKTxW
      hc5Gw4CreHqcQcVKLJHAWi6giDqVQo5X9Laz/e7XAbD31AgOnx+1VES01Gb22llOUw3jLcsF
      xE11O/1ikS+/4VYePT7CMydGWO93sGffIU6NjDIZT/HdePI8eyVNh0LlHFH8aochBJFsPr+C
      fLa80eLxBejs7QcEkvGVXVvZJBud275+picnaOvsolqt0L9uPdVqlWKhiMvtIV57TXwxQsea
      vpc9ABSrgrQKAzSViGNx2HD6vADYZTOvld28wmQmF51jcHyK1123mb51fTgqFaYWwmzr7sQm
      y1h1gVI8ir2xFbGzm/zgATRNZzhXZfuaZhaGpsiXyiRFM0G3m3LN2qVaVZHQWExn+Pi/fYdP
      /N2HcEgSpZFBTh89hAY0BPxYqzIzkRhmh5UbrtrMDbDqAJBlmYENm6hqOq2dPcQi85hkmYWF
      y290+UMNuL0+ssuMsZa2u8tLmkskuqUgdJvDhUmWiUXCgI7s8511clgGURTr1oSqZEJuMEqs
      6zZfyUI4wnv/7qN8/R2vQRQEwiWVf9p1gKN5Y4bXBcGIMLoMXpGmaUYOBWB3uHA7nKSSSUST
      zBOnJpnKlOjo7efIaYNSPrqYxGMxUdU0bJJISRT41r4h3DVWrHKuO/Rq0AWRXOrClIZkfLFu
      oefyeOlY02/UoDNpDu3ft0JJljl2DE1TL+r6IAgXvhBLaq9zWasWs4Vq6fyDtlmWKaYLHHz2
      BTbeeB2xWJStc2l6+vqx3XYNW0QZu1Viz9pejn/rh3jSad654wYEi8wLjz9Cf9CDv6UDEdj5
      9C5ClTQWxY/FH6LV68JmlrFabfWHHwxPys994L2saW/j6Sd/zUtPPs7xWI6BSozuxhBT6SI3
      9LZzbO4Qf//qK/nEU4f40i+fAmBt0Lgxp6JJLIqV7rXrUCtlMukk46NnJ6D+UCOCIBqODJJU
      FxZpqlqv91dq3k12pwuH08nxA/tWdOWX4myXsGSFuQSbw4nNqiDoOs21vLhVJ8hz0NHRgS1g
      hPHd99l/RAfu//w/oJpkkqKF/s397Dg5zr7xGSpFI0di6ecuuZEoNjuy2Uy5bIQuFktFqpUq
      lUqFvvUbiM5OG5YsgsjE2ChdHjuRwDrKOQ2nbWUY+FIJd0lfLQoC7+r185/H82wIOC89AFRV
      rTtBX4ounU4m6tshm8NJe09vbStSYGFmqk7ttdqsyLJMMpE874LmMmlsDgdutxtPIEQyHqsv
      yzabDbNsNhJcloyjBIFysXDBCpAqCmRa3BxKzoEEC7rGtu4BBEGgsmEdu2wmVEkkazFxS4MH
      tVJm17PP8tiLh3jbdVdw6sAgOzb00VbNEgN++vSz/N9fPskXX/sKbt/Yx6mSuKIbqdU6EYIA
      mztbULNpdp8a52gxia5DSXFw/97jbF/Tyi9OTJIolFmjV3nDQAen4kZlImF2YjabyWcz5JLx
      8ypuiwtzTI+PXvJhNMkyCzNTiJJER08fnmVmwefW8pfUfpqmIUomg+6sqnU9xOUWPY4ePcq/
      /du/0djUxD2vfy0AGxt9WCRQTAKB619F6uePYzVnVjh3iJrKn9/7eoZGxthz6AitQS9VLc8z
      p0dXTJQ2ux29Ygz8arXCxs1XkYjHKBbymC2KoWG+AIQasfLfDg3zxt5GfnJ67tIDoFAovKzl
      dgn5bIaprHFDFauV9p5eBEFErVYoZFNk0plVL+pieJ5rbrqVuclx0rEIbrcXk0lG0zUEBMrF
      PGZJrDlPmI2foWtnc6GWQdPPt0ccHRsjFZnHYXcQmJkn2+JFSqUQh04idjUQTqbZ1Bzkyjtv
      YHA2woFDp/jp44YNY6VcoaKD1eniq/tOkSpVVjBfVVWlVK7w4wce4IN3v5Jnjp3iTW96M/dd
      uY13fPiTDE8YTj7BliAVVWNPOMNt3Y0ciaZ5eHiWKcmJZJLIZVKE02laOrrQ9PO12nPTk7R0
      GhGmF8MSnURTVcbPnFqxPV2OpfuwNBP7gw1IunpJA4LV4HA42PnEExSyGToKMRq9Tl56cR95
      VedP/+Q9AOTLKytJVU1n2/oBbr56C1f097FjQy+djSHyCzMsfv9/oFxke1cz33rphJEjl89j
      tVopV8rMTU8Rj8dpbu+sK9cuhJ7+dYwNn0TTNB6ciOF0ey49AH5XxzGAYqFQN1jq6htgLp5Y
      dftjczjo6Olj5MRRxFreQLE4X7fXkCQJq92JbDVWAovFglo1IkpXQyqZoKGpmRvnc/hcDXzv
      N7vpL4Ei6JSzKbrSi4jHD/Hg3oMITh+f2H0c+dlBGppbcEqwkC8jm+2E2r2IooiaiqFbrJit
      VrLVKpZzLLnNVjvxkRGOlHL85vAxfjM4wi07jBVRKBX41mtv4JNPHWJsMcWtPS3opQIzGZG7
      +lr4zfgCE9GVZrRzUxO0da+hlMvg8XoRJQmX20M6mcTr8VBpasbpdDGyLCHn5ULX9brVpa7r
      uH2B3/rhX4JsMmG1WvCLKlomzZatW/no93/O1P0/An7MzOxs/cyg1ypIz7+0n/VruslH5nGI
      GnbZhCLJfPTtb+Rf/vungKFhLuRzJBYX0XWdUChUf89LWcK7fX7mZ6bqMtpSqWRoxy/5YX4P
      NeflqJRXzxAONbXgdLsIz0wAYKo5uy3dIK3Wba4k4+i64bZWtCg4HY7zKAhLkEwm3FYLr1q7
      DoD7nz3CqCwTjcVxqkXUfIaQrPOaHTezadMmfvLkbnYeO4NJEinoGl73ygdc9p6tokjLrks9
      4C+V4i9u3MyzI9N8+8nnaXdZ+cQXvwzAQjzOz4cmiBdKWOUlm3k4spDg6lbjRtpkiVd1NfHw
      8Ezt6wbtQBBFOrvXGBz7xSiNzS3YbDZkswWX56zM8eVg+TVdmvnNFgW71VqXGFarVQrFAs5L
      0CZWQw6JTz3wGO+55zZePD2K1+Op540tPfyapiGZFRYmJ3lrl59/+ea3uHNNM6/ePIC1kGbv
      xBzxfJED02H2Tc7jc9go1cRBmXQKZ7WAZHHgdDopFwu43B5KpSImk1xnFGTSKUyyjC8QZHz4
      FC6zie0tXnZNx/C+HC7Q7wtLpLXlUr+uvrXEF6Mkx6K43C7kZUr/JSrG0t82hxOTbOyPM8k4
      ikm64CB12O2MjI+jWh1YFYUrrrqK557fwwc++Rn+9S2vRhRFfjMVZf/cKZyBEINjU5glwdj2
      XuQwDsbDUalUcXg8OBQr4YX5uvzPYrHg71nL/uNn87Xu6QryyMgs6702hhJ5vnV4lHypjEOW
      +N6hYSqajiQIDMdXNvoqlQqFQoF0OoXd4WDTlVcxdOwoVpsVu81GoVDA7fWTSqzMTrsUkokk
      uWwOl9tVK6UK+PzBsyXImtt3uVymVCqtajN/MVgsFjK6zmd+9BCKoqz6epPFSnwxwn03DvDw
      ySmaAn72x3IMPn+M6/uyPDQ0jmiSsSgKJrXCezZ18e3DZ8gDVVVDF010BHz0WGA8ncfSv5Vc
      TaxvtlgIL8zjDYbw+AIk44v0b7yC08eP8th4FJfZhNNsehlkOFnGZrP9ztaJ5VIRh8tFOpnA
      oljpWNPL+PApJFHE6/Viks+qjc6tOpgtCk6nG0GrYvf70dHRtQsfzkRRRLHacHf0IIoif/OB
      D/Cet97L5+77DBVRxtnZy82eRh746rf5669/B7/fXx94S+U2xWpD1Yy82XKpTLli1J79oUbU
      bBpd01HVKjPTU/T6HPwKAUG2o5zDl3lk3Ki7DyWMitE6hwlfsJFEWSVbKOCzKix6mnB7vPQu
      RvH6/IycPsXc5DgdPX2Mj44gCgKnhgbRVI3IwgLl2moaam6hxdXF7MuIRjWZTDhdTqyKFYvZ
      giBb0KtlhGUd/0w2QzAQ/K29igRBwO12r/o1TdMwiSIup5OHTk5xMpLkq++5F4B3/scDzJUF
      SqUS7WKa3kYXL8zGKGtanSvV4rTxT3ddz2Onp7m1t43nhsd5eOgYrV09SLLM2MgZunv7eGH3
      rvr2u7Wrp/7+6XKVdDl7OQNAoL29HVVTLyvV8VLIZTI0trbhDzVQKZeZnxrH5XIaEary+VK7
      JZcJXdexOV2o5WK9jHq5+NjHP87WLVvYcfVVWM0y96zrxCSKmHQVeWAzgiTR4D+7vclns9x5
      1QZOzMwTT6ZY39pAeGGBZ4bPinQkyUQpl0EHdE2lb+0ApWIJSRIRBZFcNrPKb2KgoaWVk5k0
      GygSyZewtHQTLZfQMinC81M0b7gKyWSiuSZWRzBCxlXOWswst4iMzM1idzrpGVjP6GVmLvj8
      PuYX5pFMEgKyETGqn732ZrMZXy3C6n8DkkWhXMiho3M8nuX63g6+tvNZrmoJ8tW7r+ehwTGq
      DgfDc3mGwknylSo/nSvgVcy02M2cjGf54cETHFtI8PzoNB0BLx/ZNsB9u4+AaPQ2jh9eqa8o
      FwsIgMNsIluuosOlB4AgCDidTnR08rmLa24vB8VCnnKptOLE7nA46lrj5VhenfD4g5hFAYGL
      c/7PhcVi4fTp0wwdPshA/h6cFjMHRieZPz7CJz52K8/sO7QiX0pHoLcxwFt2bGdiPsxcJMJ1
      A73k5qfJllU2+43y61NJnfDsNIFAAF2tEltcJBwO09HTx+To+SL0JTjdHkRRIpNOszdt/H7e
      RIIWp5VMNkmzXWHo2BFa2joI1/x/KqUiZotST8dcDblMhoZgELt1C4lYjMbmFtKpJA6ni2gk
      jN2+sj5usRiOCiaLFbVSXtVa5Hc5CF8Mhr+pCRMWwuEw13e18BevvJ5vPLWXB/YPsvHu7Wzp
      amP7ls3sPT2Gu5zlsZMTPH1mAqtsorGpCSGRZyGdx26S0IETCzF0IJlMoWPoFkpVlT6vg1yl
      ymy2iK+YojHgYGuTn4dH5qmo2uWsAMZDWMgXSPweNL7AeeWqbDZLpVLB4/Ugy3IteaRa9xYy
      K1ZsilK/SS93FRJFEUkUqJQrCA472665mr+9/ye87YN/j6ppOBxGC14XBLK5PFOxeX757B7s
      5RwycNpqpsvr5vU3XccPHn0CgLLNS7VaZXR0lKamproUUr9IYJxkMhFqamH01BAOWSJbMcLC
      k9EFbg+08b1YmuGYcQZYrqeem56kZ+16wCgTp1bhCoFxMMyk0xQKRplQ01SsNhvNLa2GSe2y
      SokkmxFlM2qpYFzPy76al4au66iaTrVSxmKxnC+eUaxo5RLJVJJ4PM7uWnn28OQ8IbeL5lCQ
      2XyFrz2+m0gqS9AscDqSwCKbKFSqtGh51NY2hvM53r55LdmKyqs2r+OLDz+NDrR7nPyfV1/L
      fU/sQxB0BAFsJglVh9GSyLHjRjn6le2Biw+AarWKxaxQqZSZnf3dLLiXw26313knHo+HRCJB
      qVQiEo7gdDmx2+31pVcQBHy+QP1wpus6kWgEv89/SQuUFbDY+OhPH+eOrZsYmpgh4F/5ek3T
      0CUZTznLTW1+fvrrZ1gbcPHeV92IapL45tN7mM8WGY6l0TSNbo9RY1dVFSERQWlsp2tNL6qq
      snb9BqrVKrquI0kS2UyauZkZBjZdSSwawaJY2epX2B9Jc1OLj50TUb53fNLg5l/g11dsNoYO
      7Tf2++4uZifO3+/HYzEkWcZud5BKJslmM1TKFWKLUQLB0AreUDqZoFosvOzt5KVQKBYw25xo
      iXk2uc2cUE0rBp6maeiVKpVCjjvXdqL1dfD93Xs5OD7LF//wdSDAdKHKjddejT84SV+DnzNj
      Y3R1Frl+bQ9/+72fIQgCqcUwd/e3s2NtF1NJg8Dnt1v5yCuv4YcHTvDw4CjRXIFCTYeiSCIl
      VcPrN0x9BUHg+cX8xQeArFjJZlLEFxdXJLwvh9liYdOVW0glE3i8PrKZNFarre7vqWsaksnE
      8SPGVsNqtSKIhnpsqXy4BF3XyaQz2G12HHYH2VwWty9QP5xpmka+kMftdhsltJcxACRJwuZy
      8/SJUSRJOu+1kmyhWilxTaOXsi5w103bAPjszj04XS4mUnm6PXbMksi29iClqsZYMoemadzW
      38HQYppt7Q08OjyD2evFarMjSRKVchlJMqHYncSiYRbDYUJNzeyuHVj3zCXqD/3dXUGeno5R
      1aGiavX/71jTx+kaAzcyN4vN7qB3/UbGTp9cQW+YnZ7C6fYQamrh2OFDKySqs9NT3PnqV9X/
      rSgKpXIJ2zlRTJVK5bJL35qm1Vdpk8lEpVqhqgssTo0jqCoHy2VE58oBIJkVI9wvmeTGgVcA
      4DWL3NjbwQsT89y8cS3xTJY9p8d44egQV7Q3E4nFWdvThdflREDgcLKI36pwS2cDn3zwKU5F
      EpRVFb9d4epmH/lKlUeGzk4Q/X4ni/kyU5kCVzhSWNeuo1ypIKYWL7UFEsBkRrhIKEUgEGR8
      5AxNLS2USyWmJsa5cus1qKqKx+cjHlskGGzA7XHXHzpRFLHb7FgsFsKRcN2U1ySbMEkm7HY7
      oiTi9vqRRbE+LS4dkM2y+bfen65mpKrrOggCVkXhgeERysUiP7jzTuxmmfnxUfbOLJAuFNgo
      ubFJIs9NRVd0gCVRQNNUBAE8ZglHNsqC4qUiGJUMk2RaYU+yPIA6VeuKioJRKTJLIl+8ezuP
      nhjn6TNThhmuptV9VAHyuSxnho7T3b+OWGRhxZYok0qSy2boGVjP/PQEuczqh3GzbD7v4QdI
      pVIUCgXa2toueS0LpRJeXwC7w0EmnSLgcJLLZmlpaaVYLFDM53G53eRqJDxN0xB0zYh4qlT4
      +x88iKZpdPjdlCpVnjg5xi1XXcFscoFDR4/z/IlR9p4e4z//4o8I+rwooVZ6uzoZDse4p9PH
      kWiawXAcr9XMn1x/Ff+59zhfeOolFKuNpoYGrgk5eXJ4CrtsQnUrOFt8lOKzjJ0+yWu6g+xM
      pi48AJbSDSfPnMbjD9DVN7CqSCMSXmDTlVuYmZ5EUax4fX7SqRSpZIJsJmOomGoeQksI+AP1
      wdDS3EIqnaoToZxOJ6IkotgMy/BzD2cO+/k25L8rBElG0FTypRK9QS8fuuMmvvvIE3hMAm+/
      speB5hQbenv4r90vcmWbiV1npnEHGwiZI4wmskzFU3Q6LEyEF7FbzNy5toOPPPYCZfXsDGyp
      LcEATflFRLeNLreNXVPG/rfZbmEmW6KiGrrgk2Gjrt/Ws4ZcKklTiyGM9/n9xGMxAsEQiXgM
      XyCINxAknUzUE+I1VWXkxHFaOrowmeQLnhlWQyAQIJ1O1/suF0WtiZbPZQGBfM0VsFQsoGsa
      DU0GKzQZW0SWZSSzhURs0WCdVkpkKyXSpQoLyTRNNgtrvXb+/N9/QLPXzbuvWcex2Qivv2YT
      Hlni1GyYDrOdm1t87D02xHN6EbMk0uiyo6kqJlFAUaz8yUAHoPPE6Dz3rN/EqUSOYqCZTDRM
      eOQ0Az4HfqvML0aNa3XBAaABC/NzhqVGJEwhlyPQ0LTCpBaMc8Kh/fsA6iKGmanJ+tdtdhvO
      orM+Y9vtdsLhMIJkorGpGUmqPfS1rq9itSJbrGiVygVTXn4bLPUUzr2puq4jShKyoBMJJ1AU
      45LMxxLMoyNev5nYtPEA9Ye8dDgsPDc2y8zEGF63m4Dfz7MLGXq9Dpo8Tq7pb+drew5RVjU2
      Nwe5saeF+/ce532bO/n6oTEkQSBaKBPJlyipGuv9DiqaznDCkDjaZYmnzximtw6Xm2wqiUmS
      MJstuNxuMulUnclptdlIJRNEFhZwuj109w9QLpeZrSU7zk6OGxkLL2MAALjOMfm9EEwmE7ls
      FsWqkIjHcTgc5PN5ApqhxBtemMPhcNXd2ypVI0S9UCjy3qsMh5D7T8xRzKRpcBor6vauPv7s
      D+7l/gf+h7VeOwdGpwCBHx08yd3NTq7paeNb77iHJ4ZGSSaT/On1G/ju3uM8f3qCSCKJrbeR
      Z8YXmEpk+Nrug2xv9vNEMkV41uiuh/MlCtWzz9UFB4AgmkjGz3YX87kswcbm8wbAcixPkrTZ
      beRz+fqgWOrmhsNhJMlEZ3crqBUqVR2zYkeSFapqlUq1ikjx91aC03UdDYFUIkGXWSOmeFZs
      gwTJhKBVqWTTbAi62TV0hrd/47+57y130dsYwGI2sWX9Wiq6htlm59HhCT7y1tfy4skzFKML
      aAjMyTY+dNs2XDYF2eHk+NQcGxv9RDPGQ13WNL56cBRNh+tbvCTtAXKJYXIVlUjOqMAYtGUX
      V5uL7FlI4XO7KdncTI+P4vX7UdUqXr+PNf1riUbCyGYzhXwerdYYyqSSZFJJZLOZLTfcRHRh
      Hk01Hjibw0n+In2J3xZms5l0Jkt4bgqT2UI+l8HjD1HK5dE0Da/XX7+PlUqFZDJFa08fhYVp
      rmoN8Q+7DqHIZrb3t3NNcwDQ0ZsNKrXDbOLN6zr46r6T7Nx/BB8QzUrYOvvpuWILw/Gfsm9x
      kX/eP8rQtNFkbLArrA+6eWBwHAFDlw21hpxiZmODl+cnzzpiC1xgAOi6TjqTRpKkcxRHl1ct
      sNlsKIpiHKZ0yGVzqJqRKqgoVhpb2uoOE5Ig1HNmTUA2l0FXFBSLcvE3uQBKpVJ9sEmSRLFc
      pqpq5FIJ3C0B5paFZxiaBJ1weJ53b7uCV6xbg2KSeOu1m5AVBZfdRkWUqRazWHSNtQ1+/IqJ
      q9YZErsvDA4jiiLfuPt6DoxMsGt0lni+iKjrfPquG/j0Yy+wd+JI/WI3OhSem43jdqsEnHYa
      etcRnZ1mh1/myXCeyMIcj2oafsVMMZdlJmxsjxIxYyIKz186F6C9ew2H9j6PVvNUam7vpL17
      zXlWkr8PCIJAUCsQctkIS1bcHi96pYzu9iNwto9QKBSYmpqiuaOLY/tfxCQI/NBiaE2+dMe1
      fPbxF/j8roO8bUMH//TYPizf/x/azTAVcPOXN21m76gxe/98JMxfXXMTVo+HNf1rCVYyfPnI
      DGZJpNNl40wiy/t/9RI3tQXpcNk4tJBgc9CFqCsEbQqvH+hgMF1By6XRFRuNzS2rm+Pm8gXy
      uWy9Jr+Eyy2WFYtF1Kpq7PtMErlcjlw2RyFfoKG59aJsQ4/bg1WxnvfzpqenLxjgsYRCoUBL
      RzdmxUawqQWzYqO5tR2Xy8WGrdfxUqJER09fnV8vmWQK+SyCIPDjvYf58iO7mKlldz20/zhm
      q51oIsmjzzzLu77xX/zdTx6jMeA34j2ThpZhfcjLbLbAN184ymI2z9uuXk9V1/ngz54mVtEI
      +v10+j1YZYm7elvw+AP4bArddpncyCDNWo5jyRLJeJxmm8G8jRXLzGQvbVV/Lhpa2uozPxgl
      2unxUbLp1HnGWL8vFF0BCu4gbpcLQa3W/WKXz/wm2UxLRxfTYyPous4t3Y3ouoZTlshms9y+
      ppmReJpD4SS3djdh9wWpIvDI8Cwf+3sARtoAABw4SURBVNWLPHRykpPRJBtbgpRPHiA1MsTE
      ySG+tOsgGgJWk0i3x8aOvja+ePeN7JmNcWA+QVXTeWkuTiqVJIrMh3a+hM/vZ1uTBzQNt+cC
      dGjFbjfE6udwcaLzcwQbm4kuzK32shUQJbEermB3eSgWizgcTiLzs7S2XNiVDM4XXyiKgt/v
      P0/3ey4sFgvZbBpRkigVC5hkmXQqic1uJx5bZMMVVxrGXaoxOEvlMqVCgVwuh8UEu4YMzsiD
      ew8hSxJff/Rp1gS93L6+m/2T83zl7ffgc9g4Nj5Nj93ExtYGtEqFxXyJDp+L7qCP7WvaODYT
      5o6BLh4bHEExSbxuUy+fef4ku/JG9WomHKG7LcChcIrZLDS0h5DERZrsFmZ/iwcfjC2UKIqr
      6rNnJsZqstXfP+pnqnPuma7rpDIZzBYroqAxMz5y3vdsafIRS6Yo1mr1VU3HVK1wgwKPLBhn
      pHA2zw3tIV4/0MZDUynS2SzfePh7HByZIF6qEpAkUqUqO8cjNLvs6DWt73u29KED3z44DOS5
      dqAXu0PgTKnENDJtnU3G+e/cD6QDiXiizsFZjkI+h+0yqjBLNnVmxYaog80so5gkCpkU3t+S
      vru0rboYRFEkk0ySz+cplUrEFiMIgsDi+BmChQSnBo8yNnLacLzQdRAlKpUKIavMV169la6A
      F1kUaXBY8VnNuANB3vSWtzCmWrim2Y+m6fzw+UN8/am9uKp5rmkNctPaLp4cnuYf77qBV3WG
      eHHwNIcnZomn0gzNL/LU6Ummw1F8lMmmUyQWo2g6ZMpVqrpORdMp5bOUVY0D4bNEQ4skXtLl
      bgmCINDU2s789OQlv+//D+iCSL5coVAoYhJ0JsZG2Rx00e22IYoivx6Z46mxBe4/dIZ0vsgP
      j45y79UbePONW3l+KsLBhQSeQANOp5Nmlx2rovB3Txzk+ZMjvOfr3+fY+DT33bmNRrcDv6jy
      ziuMFNK5dI6JxQQdbjvPTYbr+33FJJKPRdk3n8CcT/HpHVfRVoozeuzw+SuAJkhY5JcVG7Aq
      yqUy42dO09bZjcthx+EQGRsbw+12n8dL+X2iWq2gZZJEy8ZyjCBitigUymXcbm+9yVMsFqlq
      4PQFeJUbjoSTSLLMazb0cE1LAHQdrcE4kHW47Qz0NfNX3/8F927opNMqUbR7ecdb/5TJoaMo
      lQJfePoAcVUgtrjIxgYfbgmimRwVTWcmmaGYz2NzN3BjRwOnoilemj87U9/sNTFYdRLJl8hW
      qpRVjXsHWtk9FWU6fb7ETzKZ8PqDWG02Q/Pg9XF6GfV6NUyPj9JSi6v934QumZgaH697vqYT
      cba2NzJVUOlzCGiBZgLBEGaLhamJcf7j8AiFqkpTLc1dx3CibqhkuXuglbFkjjvXdWGVjMF7
      60A3u4YnoVrBp5iJIfPA0CTvvdagijw9bEwCpxaNycRtNiGKAiGHleORJOPxFB9+5HlabDIW
      8dxDsGQiEYtSKZfw+rwk4ucvpxfjuqyG6YkxQk0tBPxeOjs7iUQil37R74ByscAdjQ4ei5Zx
      eP2YBB10hZyuG001DO5RdDGGy+NlYXyU5wJuLLKJj7/yOh49PsI/PH2At63v4BtPHMDyo4fp
      tYrs6GvnPdeuI53Ls1gok2lbh1lRsPtD6DokkEllEqwPuHhxJsKLMxH+eFMXDw/Pcmh2kUa7
      woim8ob1XfxqbIET0RTlQp7G3nUMlUvkHCZuDFQ5HkkylSnyeKSE1d9Md5OFarVSzzCTTCbD
      /jCVWFGR6+ztJ51MEo+en/sFRpjG8pT5/y2IgkipeHbQWiWBZjMsLCYZkUw0tYUYOn6UtvZO
      bg+Y0QPd7Dwzy7agna8++TzVapXP3nYdg9Ek+arGkVSZY7uP8NreZqZTGR4bGuXEQpxGi0zQ
      rjCdylGsqjw3bmzLRxNZ7LKJ23ua2Dk6jyBAqlhhrOZzqukwFksxVitwrhgAhXzecBoQRUrF
      0qofMDI3S6i5hcjc5XODYpEFNFUlFArQ3Nz8si7oy4XL7WFXroTTbUPC0BGz7FCWzWaxu9yU
      VI2FmWka7Ap/c/06fnh8jGg0yt3dIZ4/M8WhcJLt7SEGCwJjkRkGXzRkh9e1+ukNuAkVYkQO
      7SE1PcEzw5MkqzLFfAHdYeHPtm0C4N9fOEaT08aJxRQmQSDQ6eEjT7yEw+Ol1e2iKOqUyyWK
      2QwmtcKctwu7rYHrBZXByRlmJsYvGvi3HBNnTuMLNtDZ21830z0X5dLq9/T3CVEU0DSdu7pC
      vLiQ5B0bOvjGoVG2BJ0cSZbwzowRamxC01SemwzT4rQSyxf50OMv0euxEnI5+fjThygKEqmM
      wfG5e10X13Y188OHn+MP1rczI4vsHJnlX1+7nb9+5AVEh5XXru/mFyfGeccV3TwTKzOfy/Pq
      NS1IJhP75+Nc7bNSKdhYyBXqmgJg5RmgXBu5uqaTy6/uPVks5LHaLn8LI4oioVCITCpBKpWu
      Wyz+b0EQBBRFwbTMzg+MikihXMXqcBFfXESNLSCLAvFCiZ+fmCSeLzGfyvDzwXEUxcxN/Z3I
      usobghLRYpVspUquUkESRcrVKr8ZHOahPQf4wfMHmc1XcIo6Vzb5eHEuxnNjszw3NkuT08Y/
      33UdAZtCtlIllYjzzg0dOAWjAuJxOnA4nHipsMEG2UzG2DqEp9CKeQa8Ly9qKh4NMzs5Tt/6
      TZh/yzLy74pSoYDH5+OlhSRv6mvmqwdG0HSdI9EMhWKRwZkFJkZHOHP6FKcWU1hEgXVBNwld
      YsbeQFIF4f8Vd2Yxktz3ff/U1VV9XzPTc/Tc1+7scpfiYdKyDstmdNkWYFvJi6PkwUqI5C2C
      jFgwECcPEWAntmAbNmDZcWAjsQwrsgnJklcWKVEUuVySIrnknnNfPTN9TB/TV11dVXmont6Z
      3R0uaSxXX6AfZrobqKr+/6t+1/f7jcSJKxJPzY0hCvDc8jZfv7zMRMLPPyVR5NTIAP/jhcsI
      sszPzY4hCNA0O7xR71Cp1aiH0ygB31N5IR2lpFs8mU0T7SpRyIrC/EMPH38CHCa9hwoMJ8F1
      XVL9A73W+zvBdV329vYYGhoikUrhWhbiO6nY3me4rouoqDQaLYp7O6TTaUzbZjysoQQlooMj
      LJsmnZDKdl1nsXTAv3riYc5PT/AnL73NhaUm6cwQjWqFX+92L5+5ssKV4hs8PDLAZ85MoUoS
      1WaLXz41ypXiAevlOh+fytBoG3zh25fI1f2bycf6VL65skehZfCZhUkyYZWXl9b59nYeP4L3
      1TcqAYlo/xBW2y/JSoL/axzKLyZTaQTBF6WNRP0ue7vVJJlKs7uTY+na24zPzNFqNN6xcfm+
      wHMJRaLslvf5m6U8jucREAREQWA8orLZ9J9CfZpCw3ZwRIn/8NMP8aWLS1RLhZ7a28+M9vPJ
      U+MEXZvdhs54Msp4Mgr4ol2/dG6Of7iyTEQN8OTUCF++8DK/dm6SC0WDyeFBOoj8MFehP5Mh
      1i75Ktz6rcHLaCxOcTd3WxWouy4FQSAUunNQ6hDbayvgwdT8Ato7fO4oTMvG7XR4QIWIHjwE
      cttb7Gxt+N3I/SKfHY1z/UAnLEI8kaTVbNIXVCm0DIptg7Rg82fPv8pOtc6/fniGzwxH+O8f
      O8+P1ndZLx/w+59+ko/PjfHU/Di5/Qoz8RCbYpQv/tPrfP6JBT7/xALfXd2jaljUTYuwLNGn
      Kby6V6Xe8UOaP3nxTb787Gu8diQZ/kg2TSIWI6AolPb3EYanEEWRJ4aTfCjrM9YCqsrsqdOc
      Pf8BBEFgcnoGURSZnJ4loKpkR8cB2FxZwnE6ZCem77wo7yNkWUYLKGQnJrEQGE5EUSWRSECi
      YNzq41RMG9Nx+f7qLv/1+bcoFwvUK2U6ho7Ssbiynec3v/Ujnt0o8uHT07yaK/HVV3y2m2nb
      fPHr3+OlzQL9yQSxWAytKzSwm9tmpNOE8h6N+gFry0vULMefGwrfeiqqWpBWs3F7DqDTaraw
      LItEMumbX8sylmmiahrNRoNINEqz0cA02qwtXmdodBwtG2RzZfkY0f2oY7woSgyOZBEcmwe9
      A1ynQygcIWS1MByXRzMJ/nEtz2hEw46mKBULxJNJUk6LT8+P8tZemcJBg4RjMN9ValssHXCz
      VGO1afNENsyf/XiRZ1d2UC8vEZBEnn7yDAmrSC0c5vm1XfbqLWJBjX952h9g+3/Xt7HDMR4K
      elwpHZAzfUOHttuh3a2BZ0ZG2TBaHNTrvTLD6o2rTJ8+y8vX3u6dj2WatFpN2q0Ws/OnqFbK
      KIEAkVgMvd1GC90Km6r7pfcUrt4vOLZFOBRiKDvGWjcfGYsFkYMyhu2geh2aooLe1hFEiZAk
      gOsykQh1yTkCcU1hr2UgiQLOkf7BV1/xBzLjqkLHNHwxL8+jYXX4g0s3CAQC7LdNgpLAp8bT
      PLtdRVACYFnEVZl8N7I/XNd3OMWbpklAVZmeO9X7fywWp1TME43FqR8c4HkuyVQfr116ib3t
      zZ6VqaHrvVp0JBIhnU6zu7tLZmSU1kGNcDj0wGrRh5AkyXeylCUeHohTNWx2G21cD2JNnXpX
      Mm8ZaDWbPDqY4CsXrzE+PESlbfE3i7tool/WbZoWMIIgSswNpHgsE+O760W/443HuUyS//Th
      c/zRC28SkwX+8u1NsrEQv/fJx/mt599Glvw70Oc/MM2fv+mLWvUPDhGJJSjsblNoNo8du+u6
      bK4sMTYzd8zrd+n6NTzoaSUJCOQ2NwiGQjRPGH9+UDg0SgkGg2iqwtjkNHu5LVZbHULhAGok
      iGXbKJ6Hjs7c2XNsr6/iAku1NkFJRHdcfu8Tj6EqW2RCAf7q0hWeGu9nXVX43GOn+dHaLhFZ
      oG13+MYbN/j+ZomxM+fIrS0jiiJlvU3D6nC5ZPOpU+P86plJvviDq9iqiqp1MA2jZ7V717bq
      IYtJ03wztHx+l1qlQmZomPWVZUYnJmk0DhjMZDBNk1AohGsZJGIRIgtnKZeKVEpF36h5atof
      fXadnpP8g8QhFXC7oTOXDPPKXpVYwD8GTRJ6GyAgCqzUWvy7x0+x7qi4koQWCiMIAp87PYwA
      vLWxw7PL2/zuL3yQr75ynWvlJk9/9FHw4KNn5nhqYYYvf/M5CvU2UnoIKWxTljV+87nLtKUA
      CVWh0DL42+tbveMLqBrrSzeQJIkz584jiiKlYpF0fz+iIFIs5EmnUjA9B4KvqrG3vXW3U73D
      O2EwO0ZfZvCeimn3E4dS64lEAsHziIZDMDrOzuY6pmESjUTJ7+VB8ENovXFAIpVGr1V4KBWm
      qNuUzQ5/f2OLStug0GzTsju8WaihySKRbqjz0rbPnQgGgwwMjWAfmQGryxqWYzE2PcH3Vzd4
      fbtA0HWotCUS6X5UVSUSj5NIpe++AfR2m/rBARtrq8iygt5ukR0b58UfPMfYxCRry4uEwhFa
      rRaD3WbRIWqlAngCU/ML7G5vsLW5yeDwCEEtgPygE4AuwmF/NujFUpWBaIi2YdKwHUzp1vGk
      NIW242J0XCr7RXTHw7ZtApLIX7x6gOt5nO+PcT6b4UsXLvGxqREmklH+9IevIysKT0yNIsoS
      iiTyO//iUb7wnUv82ulR/veba+xaNrGAjNc3SFCWqJtHnBe718R13a4wsED9oMbI6BiWZdJq
      NggGgz2i/cj45D3PN55K0zcwyN72Zm8GqD8zyNTs3H28qifjGNvOc5EFj6m5eWzL7s6XiaQH
      MkQjUYo7WwRCUSzXIxX2PebmZZGLu2U+PZ3hR9tlfveTT/B319axbZsL11d5q3jgE4c+81G+
      t7rDa3m/v5EaGKJc2MUDRiMaN1aWyIYD5Jo6iihguxbGznbv0MamZ08eh97NHX7QL41urq8R
      CATY2ljH8zz2S/4IqqH7Cr+xWAxZlhkYGKDVarG7uUayP4MW9PODcCzK4NAIivDA0wCMVpNU
      KoWqaWxvrOM4DhOxIMWOwITssmu4VB0B07T4xp5B0+qwkAwhoDIcDVHSTd4oHLDRNPm3H57h
      9VyBr756HfCN41JBl4ZhIikBFFXjC9+5RL5tcXG7xOlUiJ2mQQWF/3M9x398ZJq/vLJBq/vk
      OdQuPSSWeMDUzBzNeh3btoknkphHRIlv1zo9ioCqkZ2col6tsHrTTxil8j6p/gFKhTyh97ED
      /06wTJO4phHQAjiOw5nz53E9ga3VJWq1GiPjQURJ4nub/pqKqQr//vF5/uKNZabjIf7h5iYd
      x+XNQq1HMnI8uLC4yXL5gI7t9sbu8aB/aJjd3BZJVaao28dcLo9ia3X5vSnD3Y0X3Gq1aLVa
      5PN54vE4fX19hMNhpqenqdVq7GyuMz4zi6HrLN+4Rnogw8BABpx3pwl/P+C6LrgOoaBGX2aQ
      /UKevO0RDofQZZmo2sEyLGLJdI97fLXsx+PXKy0+Pj1EuNJkPhHiv3zrh2QjGsnhPj48Ocxq
      scwvnx7j6W9dItdo09GiNMUAkWiAdFDlx7tlqobN//zFx/n7a2t8bfOAdudWc+too2ttZfmu
      x79zQshzCEEQmJidx7Is1m5eP/Ze46DG+MwclVKRg/uk6nEvaJrmCwWb5h3K1mLXSsqxrJ6F
      1e7WJjOnz7J09c5xjr5ggBe3ivz81CBhRcZyLD4xM4IgCKwSompXe0/RdrOBFg7jdcuZkgDx
      gMSBdTKx6p4bYHR0tBdbGYbRs+a8fWLT8zxqtRq1Wo1oNEp/fz+JhF+i0nUd29CZml+gWi5x
      4+rbDGZHSSWSCN79Y32dhHa7TSQSQfA80qkkgiBQLhZwHRdP9KiUK0RjCcYmJimX9xGBh/vC
      XK20kUWRUtsgrirUDJumZdOyFYaT/t30B+t5rhZrhEJB5GQGCQ9Z8X/ki/stvECIRFTlG1dX
      2as1CEgaQ6PjXV8znzD/XmBbx7u5g9kxgqEwW2vLxwjyR3FoQbW9ufGer90/B7FYjE6n09OU
      6vEzAr60TW2/RCwWY2JigvX1dXRdZ23xOnNnz7O+dBM5EuVZXWXm3CNcXV3i6cdm+drNXbKn
      z6IVi4DP4isX88eKKrXKPucf+Sn2S0XC4SixcJC1UoWxmIY2NsvWxjr1g+PWUve8+rlcrkdu
      SSQSDAwM+LzPrrquruu4XZOywx+n0WjQaDSIxWJkMhnC4XDX57eGoihMzS+ws7lOKBTqCcW+
      nzjUERIEAcHziIRChCenQfDJJpoWYnp+gWoxjydKuMBgNExQVUkGJJ7bLvNvzoyxWDf57ace
      40sXXuXJkTR//NLbKJLEb3zqI1y4uc7lcgmn0yHRN0ClmEfVgkSMBoVKnWsHIi3bwfGaOPu3
      ZMoTqTSD2VHyue2TTwBfMCAcDvcI9fFUmnT/APncNvncOz8hfhKQ5VtqEJ4gYnY6yI5v4C3L
      MisrK8SjUdKiQw5fyn3p6lssfOAxFq9cZjibxbKt3gIPhSMYuo6qabxSLtM/NALe8YqXJEnU
      D2rUqmWGI0H+8yPj/NYP3qatt5GrJc6G4OJtyp73dojpOnd0Oh1kRfZN7zSt94rH43iSjIhA
      vdmkuLeL0XVMqdfrNBoNUqkUfX19JBIJOp0O+fwO49OzBCTxmN3l+wVN0/yEtpsQmkecSQYz
      GZRgiHxuk/1igWA4QiLdx3fW/S53TFV4+vFT/PVba3xotI/rhSqfOz/Nn7/hhyu24/Dtqyus
      lA/QTbtrLudLPCb7MxTWGyQCMiXDpk9T2GsfDyNrlTKZYJBEuu9E/X7w7aaCQZ91NTW/gNFu
      0d/Xx+joKCuLNxmbmERVVZYXbzI6PsGlF1/ofVd8L/pJ9xGu64EkI+ChN+uUSiUS3XF427bZ
      rxznKgdUlXazgdPpUO2+1z8xzdd3CiDKLMQ1Hp2a42uvXaNSvLPDLUkSeruFaRhsdTr8xndf
      Q0plsEwbU1F5s1C64zvv+vZr275dTbVWJZVMYXdsHMchqAUJBBU8xyaiBYjOztJqt9kv5Gk2
      fBOMcrlMrVajv7+fVCpFNpsFScTtWA+kL3C4AUzTxOmSYQ4hKgE6poHg+f5Tdq3K/EMP0zry
      RAMQRIG9ps71coMPjQ0QCod5pD/KryxM8JUbRVrWLZabobfpdBw6loUnSqiyhGN0KJkdwuEI
      hqEf41oUdnJkJ6awLYtW404bWPDHU+J9GZqNBmuLfpyfSqVodV0dC/k9Qt2mVzF/fHG0Go13
      xeO4X/A8f+F7eJQLe9i2TX9/P6Zpsr9/8iafmD3VywMO856j+c+vf+gDfPD0LN984zpNVTs2
      dQr+BjAqJQK2TqlmUnIc6Kptl6rHQ59Euo9kX/97S4LrB3Vi8RiVIyoDrVaLoWwI8XAhOx1C
      AYXxySkM06JU2KNeq+E4DoVCgXK5THZsnGBQfGBNMUVReg2xnt+tICBICu16DcMwSCR81lql
      UmHxymUmZuepVcrMzM7yTKFIduE8wdounz2b4bcv3uSDH/lZrr38At9ey9NqNDlKGG036iyc
      exhVVYnptW51wqMuBhgbG+fGzRt3kI1yG2tMnzrD1toy9m3FhoHhLOFIlJUb147F+YcLPRQO
      I8syhfwe4UjkmO4Q+HKK76Z8er8gyAE21laIRmOMTU7jui66rjM8Os7oxBSGoZNIpnj91Us9
      F5vpU2d6G/skfOWZ7/J/n3+ZjWKZ8Zk5JFmh3fQXeEAJEI1GqVQrOFIASb6T0HUU0XiC9cUb
      790fwNANIkeMiiVZRhalY2rFgiCA00GVBEZHxzAHh9jbyflDXYKAHFAR3uWY7/3CYcXJ9zvW
      2C8UiISCCIKAruuUy2UGFY/Drb2xvMjp849QzOdpNhuk+/rZR+WZm9vEE0kaO5uIWohdNQne
      7Zr+Fq1mg1qlzM9kfHnwC5ZLUG+SrubQPIfbiY+i6JveTZ86Q7vV7CbHvspGJBrj+uXXuR3F
      wp3WVXejA9xNDub9gl8c8ciOjLC9vU16YABJkqnubOKIEtmpGT+a6L4AhkbHKOV3e3+fhIZu
      0ND9K7e7tcm5x59ka3UR2/TXpCRJpFNpqrUq4r38HbrcintuAFmWj5HRPTwEBARR6IlnuSeQ
      ZARBANchIApMTEzSaut4goDyk+mHgSihmxZKp0VIU9na2kJRlF45bvNIgaUvM0RhJ0erWfc9
      tlaXicbirJabTGb6+G+f/QQXb6zwhxdeuGO6VZIkStubmI7L/6r6ZbpkKk3D6GAHlV73Gfyx
      3OzEFJ7nkVtfvetdSwuFGJue7enc/7NOXXxweYCu63i2hSRJlEslRFHkp4eTbNWa6IaJpmq0
      Wi0UJUAoEsV1vRO9pm9HIt1HIpXGMk2uvn6J0ckZmrUypmniKR6RSISD+sFxOUZJJhKL+XKV
      soQsB4glk3fOAt2Ou901bMumVquRSCZ6GpvtdhtNlk4MaQ43QkhVcFz3JzARCpbji7IKrkvb
      thkeHsHx/ATR6fgWnPkuyScUjqCFQsdM6CrlMpWuPMmm0+HijWVevrlKZmSM/fzOsXp+KplC
      LxdxO25vIHC/Ozpe2DsuKDB/9jzX3vzxOx6/0W5zUCkzNDp+T97vydfgfuo/n4xDz+CN3Da6
      rtNoNBiPajyT6z7zdm9pTSmBAKl+37roXojE4vRlBqlVyj3Cj6qqyLLCYGaw9zkPGMyOY5p+
      n+HQkss0dCr7xR4p6FCp+/8DL5mycA8LpzQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      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
      8/8BkMZPUfha+zIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Number of Rides by Ending Station' width='192'>
      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
      0+k033Tnoeo62/cf0msfYwcBdx6+ze7zJ5dumvXtO5y2j2Ym6e0XP8Di6hpH+7tzv2stLJLE
      t98AztRBkGQCP938E2uM67osLa/w/OkTtu7eo9M+ZmJZTKdToihE13WqzQWefjy/jrLvFOBi
      GPQ85FlcXxAEqrUqiqJwcHBAGIYUjCL33n6X3efPCPzXkvKmh2osLOI5NtMb7PbbYnDaZfPe
      A8b9Lo7tzL2gy158FkFRFIVSqcRwOCRJEnRBJ0kSXNuiUDRxpgr1ep3pdPq5knUwU8Gl4pzU
      zDaloiiUzdQpy+bsrJZKpX6AKEoUCgWGZ2zoDIZhoCrqXCIMyCVctVoljmM8z5sL6y6urlGp
      1jh4+RzbtoHUady8e59+t8No0M/vpRsGCdA7PeW2yHwtUZRIophgNjZBEND0ArL4ZtEfy7Io
      lmt4joU9sTntpmPJAgvnfwqCwMraOv3O5VZKOr/C9RugUq0giRKariHLMhNrwknvJJ/EqWPz
      4rNP0sU3HNLvXp4AOQ+zXMFzp7e2r29Cqr1g6kyv3VSKohBFMZKURn8FQUjNCt9HFER838/t
      8KltUavVOZxMcjPJsiyiKMqjMLdBFEV53DrTSEmSoCgK9Vr9Sr/r7EbwfY9isYimaRdMMkEQ
      iOKIcrlMr9ebM41UVUVWVJI4Yjqdpt+ramzcuUev02avdzqn4eIo4tXTx7SWVljfvsv+TLuv
      bd2BBPSCgTu9WRAsr66xvrFJv99jfWOT0XDIyuoq3ZMTFpeXCcMAWZIZ9U+Rr/Anz2I6nSKI
      EgJp8OI2grNQKFAwyxzuf3zp36M4QlV1pPsPHny73W5TMFLHUBJFZEVJkxSVKt1OB3ti4zhO
      LinOY9jvYZRKLCyvMh708zT8ZSaVKIqsb25zfLh/a/PiNshe7lUv6OHb77B55y66rvH+179B
      uVqj0VogCALu3n9IyTQRBJE4jvJxB55La2mZ8XjEaDikUCig6zqlUokwDK/cBJqm5X9LoxYe
      hmHMzUHZLOeRKeDCz+yzSZKgGUXiwKdYLDIYvE5QybKc0x4kWSKOUg1TLBYpFAq0FhaoLSxT
      KBZTG75ao7GwQOdwn8D3rpx/Z2LheS7b9x8RxRHECXsvn7G8voFeMLAn1qWfy7C2vsH+3i6a
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Number of Rides by Starting Station' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Rides by Starting Hour' width='192'>
      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
      WLs60vhOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Rides per Gender' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rides per Generation' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
